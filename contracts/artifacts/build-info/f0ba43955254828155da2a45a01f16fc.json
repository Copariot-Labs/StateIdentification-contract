{
	"id": "f0ba43955254828155da2a45a01f16fc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/sis.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\";\r\nimport \"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\";\r\n\r\n/**\r\n * @dev PicWe_StateIdentification contract.\r\n *      This contract is used for state identification in PicWe.\r\n */\r\ncontract PicWe_StateIdentification is Initializable, ContextUpgradeable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable{\r\n    using ECDSA for bytes32;\r\n\r\n    address public admin;\r\n    IERC20 public pointToken;\r\n    mapping(address => uint256) public balances;\r\n    mapping(bytes32 => bool) public usedNonces;\r\n    mapping(uint256 => mapping(address => bool)) public votes; \r\n    mapping(uint256 => uint256) public voteWeights;  \r\n    mapping(uint256 => uint256) public totalWeights;  \r\n    mapping(uint256 => address) private voteToParticipant;\r\n    uint256 public nextVoteId;\r\n    uint256 public reserveBalance;\r\n\r\n    event VoteStarted(uint256 voteId, address indexed participant);\r\n    event Voted(uint256 voteId, address indexed voter, uint256 weight);\r\n    event AdminChanged(address indexed newAdmin);\r\n    event ChannelOpened(address indexed participant, uint256 amount);\r\n    event ChannelStateUpdated(address indexed participant, uint256 newBalance);\r\n    event ChannelClosed(address indexed participant, uint256 amount);\r\n    event ChannelClosedByDAO(address indexed participant, uint256 amount, uint256 voteId);\r\n    event BalancesBatchUpdatedbyadmin(address[] participants, uint256[] newBalances);\r\n    event BalancesBatchUpdatedbyuser(address[] participants, uint256[] newBalances);\r\n    event DepositedToReserve(uint256 amount);\r\n    event WithdrawnFromReserve(uint256 amount);\r\n\r\n    /**\r\n     * @dev Constructor for PicWe_StateIdentification contract.\r\n     *      This is necessary for contract initialization.\r\n     */\r\n    constructor() {\r\n        _disableInitializers();\r\n    }\r\n\r\n    /**\r\n     * @dev Initialize the contract.\r\n     * @param admin_ - The address of the admin\r\n     * @param pointToken_ - The address of the point token\r\n     * @param initialReserveBalance - The initial reserve balance\r\n     */\r\n    function initialize(address admin_, IERC20 pointToken_, uint256 initialReserveBalance) public initializer {\r\n        __Context_init();\r\n        __Pausable_init();\r\n        __Ownable_init(admin_);\r\n        __UUPSUpgradeable_init();\r\n\r\n        admin = admin_;\r\n        pointToken = pointToken_;\r\n        nextVoteId = 1;\r\n        reserveBalance = initialReserveBalance;\r\n    }\r\n\r\n    /**\r\n     * @dev Pause the contract.\r\n     *      Only the owner can call this function.\r\n     */\r\n    function pause() public onlyOwner {\r\n        _pause();\r\n    }\r\n\r\n    /**\r\n     * @dev Unpause the contract.\r\n     *      Only the owner can call this function.\r\n     */\r\n    function unpause() public onlyOwner {\r\n        _unpause();\r\n    }\r\n\r\n    /**\r\n     * @dev Authorize the upgrade.\r\n     *      Only the owner can call this function.\r\n     * @param newImplementation - The address of the new implementation\r\n     */\r\n    function _authorizeUpgrade(address newImplementation)\r\n        internal\r\n        onlyOwner\r\n        override\r\n    {}\r\n    \r\n    /**\r\n     * @dev Deposit to reserveBalance.\r\n     *      Only the admin can call this function.\r\n     * @param amount - The amount to deposit\r\n     */\r\n    function depositToReserve(uint256 amount) external onlyAdmin whenNotPaused {\r\n        require(pointToken.transferFrom(_msgSender(), address(this), amount), \"Transfer failed\");\r\n        reserveBalance += amount;\r\n        emit DepositedToReserve(amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Withdraw from reserveBalance.\r\n     *      Only the admin can call this function.\r\n     * @param amount - The amount to withdraw\r\n     */\r\n    function withdrawFromReserve(uint256 amount) external onlyAdmin whenNotPaused {\r\n        require(reserveBalance >= amount, \"Insufficient reserve balance\");\r\n        require(pointToken.transfer(_msgSender(), amount), \"Transfer failed\");\r\n        reserveBalance -= amount;\r\n        emit WithdrawnFromReserve(amount);\r\n    }\r\n \r\n    /**\r\n     * @dev Modifier to make a function callable only by the admin.\r\n     */\r\n    modifier onlyAdmin() {\r\n        require(_msgSender() == admin, \"Only admin can perform this action\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Change the admin.\r\n     *      Only the owner can call this function.\r\n     * @param newAdmin - The address of the new admin\r\n     */\r\n    function changeAdmin(address newAdmin) external onlyOwner whenNotPaused {\r\n        require(newAdmin != address(0), \"New admin address cannot be zero address\");\r\n        admin = newAdmin;\r\n        emit AdminChanged(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev Open a channel.\r\n     * @param amount - The amount to open the channel with\r\n     */\r\n    function openChannel(uint256 amount) external whenNotPaused {\r\n        require(pointToken.transferFrom(_msgSender(), address(this), amount), \"Transfer failed\");\r\n        balances[_msgSender()] += amount;\r\n        emit ChannelOpened(_msgSender(), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Update the balance of a participant.\r\n     * @param participant - The address of the participant\r\n     * @param newBalance - The new balance of the participant\r\n     */\r\n    function _updateBalance(address participant, uint256 newBalance) internal {\r\n        if (balances[participant] < newBalance) {\r\n            uint256 shortfall = newBalance - balances[participant];\r\n            require(reserveBalance >= shortfall, \"Not enough reserve balance\");\r\n            reserveBalance -= shortfall;\r\n            balances[participant] += shortfall;\r\n        } else if (balances[participant] > newBalance) {\r\n            uint256 excess = balances[participant] - newBalance;\r\n            reserveBalance += excess;\r\n            balances[participant] -= excess;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Verify the batch signature.\r\n     * @param participants - The addresses of the participants\r\n     * @param newBalances - The new balances of the participants\r\n     * @param nonce - The nonce\r\n     * @param adminSignature - The signature of the admin\r\n     */\r\n    function _verifyBatchSignature(address[] calldata participants, uint256[] calldata newBalances, uint256 nonce, bytes calldata adminSignature) internal {\r\n        bytes32 hash = keccak256(abi.encodePacked(participants, newBalances, nonce));\r\n        require(admin == hash.recover(adminSignature), \"Invalid signature\");\r\n        require(!usedNonces[hash], \"Nonce already used\");\r\n        usedNonces[hash] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Verify the signature.\r\n     * @param participant - The address of the participant\r\n     * @param newBalance - The new balance of the participant\r\n     * @param nonce - The nonce\r\n     * @param adminSignature - The signature of the admin\r\n     */\r\n    function _verifySignature(address participant, uint256 newBalance, uint256 nonce, bytes calldata adminSignature) internal {\r\n        bytes32 hash = keccak256(abi.encodePacked(participant, newBalance, nonce));\r\n        require(admin == hash.recover(adminSignature), \"Invalid signature\");\r\n        require(!usedNonces[hash], \"Nonce already used\");\r\n        usedNonces[hash] = true;\r\n    }\r\n\r\n    /**\r\n     * @dev Update the channel state.\r\n     * @param newBalance - The new balance of the channel\r\n     * @param channel_nonce - The nonce of the channel\r\n     * @param adminSignature - The signature of the admin\r\n     */\r\n    function updateChannelState(uint256 newBalance, uint256 channel_nonce, bytes calldata adminSignature) external whenNotPaused {\r\n        _verifySignature(_msgSender(), newBalance, channel_nonce, adminSignature);\r\n\r\n        _updateBalance(_msgSender(), newBalance);\r\n\r\n        emit ChannelStateUpdated(_msgSender(), newBalance);\r\n    }\r\n    \r\n    /**\r\n     * @dev Batch update balances.\r\n     * @param participants - The addresses of the participants\r\n     * @param newBalances - The new balances of the participants\r\n     * @param close_nonce - The nonce\r\n     * @param adminSignature - The signature of the admin\r\n     */\r\n    function batchUpdateBalances(address[] calldata participants, uint256[] calldata newBalances, uint256 close_nonce, bytes calldata adminSignature) external whenNotPaused {\r\n        require(participants.length == newBalances.length, \"Participants and newBalances length must match\");\r\n        _verifyBatchSignature(participants, newBalances, close_nonce, adminSignature);\r\n\r\n        for (uint i = 0; i < participants.length; i++) {\r\n            _updateBalance(participants[i], newBalances[i]);\r\n        }\r\n        emit BalancesBatchUpdatedbyuser(participants, newBalances);\r\n    }\r\n    \r\n    /**\r\n     * @dev Close a channel.\r\n     * @param newBalance - The new balance of the channel\r\n     * @param close_nonce - The nonce\r\n     * @param adminSignature - The signature of the admin\r\n     */\r\n    function closeChannel(uint256 newBalance, uint256 close_nonce, bytes calldata adminSignature) external whenNotPaused {\r\n        _verifySignature(_msgSender(), newBalance, close_nonce, adminSignature);\r\n\r\n        _updateBalance(_msgSender(), newBalance);\r\n\r\n        require(pointToken.transfer(_msgSender(), newBalance), \"Transfer failed\");\r\n\r\n        balances[_msgSender()] = 0;\r\n\r\n        emit ChannelClosed(_msgSender(), newBalance);\r\n    }\r\n\r\n    /**\r\n     * @dev Vote.\r\n     * @param voteId - The ID of the vote\r\n     * @param approve - Whether to approve the vote\r\n     */\r\n    function vote(uint256 voteId, bool approve) external whenNotPaused {\r\n        require(balances[_msgSender()] > 0, \"No balance to vote\");\r\n        require(!votes[voteId][_msgSender()], \"Already voted\");\r\n\r\n        votes[voteId][_msgSender()] = true;\r\n        uint256 weight = balances[_msgSender()];\r\n        if (approve) {\r\n            voteWeights[voteId] += weight;\r\n        }\r\n\r\n        emit Voted(voteId, _msgSender(), weight);\r\n    }\r\n\r\n    /**\r\n     * @dev Start a vote to close a channel.\r\n     * @param participant - The address of the participant\r\n     */\r\n    function startVoteToCloseChannel(address participant) external onlyAdmin whenNotPaused {\r\n        require(balances[participant] > 0, \"No balance to dispute\");\r\n\r\n        uint256 voteId = nextVoteId++;\r\n        totalWeights[voteId] = pointToken.balanceOf(address(this));\r\n        voteToParticipant[voteId] = participant; // 记录投票对应的参与者\r\n        emit VoteStarted(voteId, participant);\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Close a channel by DAO.\r\n     * @param participant - The address of the participant\r\n     * @param newBalance - The new balance of the participant\r\n     * @param voteId - The ID of the vote\r\n     */\r\n    function closeChannelByDAO(address participant, uint256 newBalance, uint256 voteId) external onlyAdmin whenNotPaused {\r\n        require(voteWeights[voteId] * 2 >= totalWeights[voteId], \"Not enough votes to close channel\");\r\n        require(voteToParticipant[voteId] == participant, \"Vote ID does not match participant\"); // 确保投票ID对应于指定参与者\r\n\r\n        _updateBalance(participant, newBalance);\r\n        require(pointToken.transfer(participant, newBalance), \"Transfer failed\");\r\n        balances[participant] = 0;\r\n\r\n        emit ChannelClosedByDAO(participant, newBalance, voteId);\r\n    }\r\n\r\n    /**\r\n     * @dev Batch update channel by admin.\r\n     * @param participants - The addresses of the participants\r\n     * @param newBalances - The new balances of the participants\r\n     */\r\n    function batchUpdateChannelbyadmin(address[] calldata participants, uint256[] calldata newBalances) external onlyAdmin whenNotPaused {\r\n        require(participants.length == newBalances.length, \"Array lengths must match\");\r\n\r\n        for (uint i = 0; i < participants.length; i++) {\r\n            _updateBalance(participants[i], newBalances[i]);\r\n        }\r\n        emit BalancesBatchUpdatedbyadmin(participants, newBalances);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     */\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address, RecoverError, bytes32) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError, bytes32) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x2A 0xC9 GAS 0xF8 0x21 BLOCKHASH 0xEA DUP10 CALLVALUE DUP13 0xB5 0xC 0xE0 0xE3 MCOPY SAR PUSH18 0xEA0959DAFB2D3DBB3D804FE81B4B64736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x2A 0xC9 GAS 0xF8 0x21 BLOCKHASH 0xEA DUP10 CALLVALUE DUP13 0xB5 0xC 0xE0 0xE3 MCOPY SAR PUSH18 0xEA0959DAFB2D3DBB3D804FE81B4B64736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "449:6273:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"contracts/sis.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"contracts/sis.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:9;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"contracts/sis.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.",
						"errors": {
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":344:7730  library ECDSA {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122008f390e53d44621ba99a8d405e9b57b56013def17134ddbe4bd75af37b9ff42164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122008f390e53d44621ba99a8d405e9b57b56013def17134ddbe4bd75af37b9ff42164736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD RETURN SWAP1 0xE5 RETURNDATASIZE PREVRANDAO PUSH3 0x1BA99A DUP14 BLOCKHASH MCOPY SWAP12 JUMPI 0xB5 PUSH1 0x13 0xDE CALL PUSH18 0x34DDBE4BD75AF37B9FF42164736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "344:7386:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7386:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122008f390e53d44621ba99a8d405e9b57b56013def17134ddbe4bd75af37b9ff42164736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD RETURN SWAP1 0xE5 RETURNDATASIZE PREVRANDAO PUSH3 0x1BA99A DUP14 BLOCKHASH MCOPY SWAP12 JUMPI 0xB5 PUSH1 0x13 0xDE CALL PUSH18 0x34DDBE4BD75AF37B9FF42164736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "344:7386:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_throwError(enum ECDSA.RecoverError,bytes32)": "infinite",
								"recover(bytes32,bytes memory)": "infinite",
								"recover(bytes32,bytes32,bytes32)": "infinite",
								"recover(bytes32,uint8,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,bytes memory)": "infinite",
								"tryRecover(bytes32,bytes32,bytes32)": "infinite",
								"tryRecover(bytes32,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 344,
									"end": 7730,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122008f390e53d44621ba99a8d405e9b57b56013def17134ddbe4bd75af37b9ff42164736f6c63430008190033",
									".code": [
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 344,
											"end": 7730,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"contracts/sis.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/sis.sol": {
				"PicWe_StateIdentification": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ECDSAInvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "ECDSAInvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "ECDSAInvalidSignatureS",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "participants",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "newBalances",
									"type": "uint256[]"
								}
							],
							"name": "BalancesBatchUpdatedbyadmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address[]",
									"name": "participants",
									"type": "address[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "newBalances",
									"type": "uint256[]"
								}
							],
							"name": "BalancesBatchUpdatedbyuser",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ChannelClosed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "voteId",
									"type": "uint256"
								}
							],
							"name": "ChannelClosedByDAO",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ChannelOpened",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								}
							],
							"name": "ChannelStateUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DepositedToReserve",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "voteId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "VoteStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "voteId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawnFromReserve",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "participants",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "newBalances",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "close_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "adminSignature",
									"type": "bytes"
								}
							],
							"name": "batchUpdateBalances",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "participants",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "newBalances",
									"type": "uint256[]"
								}
							],
							"name": "batchUpdateChannelbyadmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "close_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "adminSignature",
									"type": "bytes"
								}
							],
							"name": "closeChannel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "voteId",
									"type": "uint256"
								}
							],
							"name": "closeChannelByDAO",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin_",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "pointToken_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "initialReserveBalance",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextVoteId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "openChannel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pointToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "reserveBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "participant",
									"type": "address"
								}
							],
							"name": "startVoteToCloseChannel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "totalWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newBalance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "channel_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "adminSignature",
									"type": "bytes"
								}
							],
							"name": "updateChannelState",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "usedNonces",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "voteId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approve",
									"type": "bool"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "voteWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "votes",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawFromReserve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "PicWe_StateIdentification contract.      This contract is used for state identification in PicWe.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ECDSAInvalidSignature()": [
								{
									"details": "The signature derives the `address(0)`."
								}
							],
							"ECDSAInvalidSignatureLength(uint256)": [
								{
									"details": "The signature has an invalid length."
								}
							],
							"ECDSAInvalidSignatureS(bytes32)": [
								{
									"details": "The signature has an S value that is in the upper half order."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"batchUpdateBalances(address[],uint256[],uint256,bytes)": {
								"details": "Batch update balances.",
								"params": {
									"adminSignature": "- The signature of the admin",
									"close_nonce": "- The nonce",
									"newBalances": "- The new balances of the participants",
									"participants": "- The addresses of the participants"
								}
							},
							"batchUpdateChannelbyadmin(address[],uint256[])": {
								"details": "Batch update channel by admin.",
								"params": {
									"newBalances": "- The new balances of the participants",
									"participants": "- The addresses of the participants"
								}
							},
							"changeAdmin(address)": {
								"details": "Change the admin.      Only the owner can call this function.",
								"params": {
									"newAdmin": "- The address of the new admin"
								}
							},
							"closeChannel(uint256,uint256,bytes)": {
								"details": "Close a channel.",
								"params": {
									"adminSignature": "- The signature of the admin",
									"close_nonce": "- The nonce",
									"newBalance": "- The new balance of the channel"
								}
							},
							"closeChannelByDAO(address,uint256,uint256)": {
								"details": "Close a channel by DAO.",
								"params": {
									"newBalance": "- The new balance of the participant",
									"participant": "- The address of the participant",
									"voteId": "- The ID of the vote"
								}
							},
							"constructor": {
								"details": "Constructor for PicWe_StateIdentification contract.      This is necessary for contract initialization."
							},
							"depositToReserve(uint256)": {
								"details": "Deposit to reserveBalance.      Only the admin can call this function.",
								"params": {
									"amount": "- The amount to deposit"
								}
							},
							"initialize(address,address,uint256)": {
								"details": "Initialize the contract.",
								"params": {
									"admin_": "- The address of the admin",
									"initialReserveBalance": "- The initial reserve balance",
									"pointToken_": "- The address of the point token"
								}
							},
							"openChannel(uint256)": {
								"details": "Open a channel.",
								"params": {
									"amount": "- The amount to open the channel with"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Pause the contract.      Only the owner can call this function."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"startVoteToCloseChannel(address)": {
								"details": "Start a vote to close a channel.",
								"params": {
									"participant": "- The address of the participant"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Unpause the contract.      Only the owner can call this function."
							},
							"updateChannelState(uint256,uint256,bytes)": {
								"details": "Update the channel state.",
								"params": {
									"adminSignature": "- The signature of the admin",
									"channel_nonce": "- The nonce of the channel",
									"newBalance": "- The new balance of the channel"
								}
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							},
							"vote(uint256,bool)": {
								"details": "Vote.",
								"params": {
									"approve": "- Whether to approve the vote",
									"voteId": "- The ID of the vote"
								}
							},
							"withdrawFromReserve(uint256)": {
								"details": "Withdraw from reserveBalance.      Only the admin can call this function.",
								"params": {
									"amount": "- The amount to withdraw"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/sis.sol\":734:12369  contract PicWe_StateIdentification is Initializable, ContextUpgradeable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable{... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"contracts/sis.sol\":2287:2342  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/sis.sol\":2312:2334  _disableInitializers() */\n  tag_4\n    /* \"contracts/sis.sol\":2312:2332  _disableInitializers */\n  tag_5\n    /* \"contracts/sis.sol\":2312:2334  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"contracts/sis.sol\":734:12369  contract PicWe_StateIdentification is Initializable, ContextUpgradeable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable{... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"contracts/sis.sol\":734:12369  contract PicWe_StateIdentification is Initializable, ContextUpgradeable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable{... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/sis.sol\":734:12369  contract PicWe_StateIdentification is Initializable, ContextUpgradeable, PausableUpgradeable, OwnableUpgradeable, UUPSUpgradeable{... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc9d27afe\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xfd85b1a7\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xfeb61724\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xc9d27afe\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd23254b4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe207d04d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xeecbbb72\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xad3cb1cc\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xb17d718e\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xb62e1efc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xc6b0da1b\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8f283970\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa10954fe\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x4f1ef286\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x68f25734\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x68f25734\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6e631a4d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x4f1ef286\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x56f40aa2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x1794bb3c\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x1794bb3c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2251d3f0\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x27e235e3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x0a8bcdb9\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1145a4ff\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x14068e94\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/sis.sol\":4203:4524  function withdrawFromReserve(uint256 amount) external onlyAdmin whenNotPaused {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/sis.sol\":8538:9116  function batchUpdateBalances(address[] calldata participants, uint256[] calldata newBalances, uint256 close_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_40\n      tag_46\n      calldatasize\n      0x04\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n        /* \"contracts/sis.sol\":10485:10893  function startVoteToCloseChannel(address participant) external onlyAdmin whenNotPaused {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_40\n      tag_51\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n        /* \"contracts/sis.sol\":2582:2955  function initialize(address admin_, IERC20 pointToken_, uint256 initialReserveBalance) public initializer {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_40\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n        /* \"contracts/sis.sol\":929:953  IERC20 public pointToken */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      sload(0x01)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_60:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3100:3132   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3082:3133   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3070:3072   */\n      0x20\n        /* \"#utility.yul\":3055:3073   */\n      add\n        /* \"contracts/sis.sol\":929:953  IERC20 public pointToken */\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/sis.sol\":960:1003  mapping(address => uint256) public balances */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_66:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n    tag_65:\n      mload(0x40)\n        /* \"#utility.yul\":3290:3315   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"contracts/sis.sol\":960:1003  mapping(address => uint256) public balances */\n      tag_62\n        /* \"#utility.yul\":3144:3321   */\n      jump\n        /* \"contracts/sis.sol\":3240:3305  function unpause() public onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      pop\n      tag_40\n      tag_72\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_9:\n      tag_40\n      tag_74\n      calldatasize\n      0x04\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_65\n      tag_79\n      jump\t// in\n        /* \"contracts/sis.sol\":1124:1170  mapping(uint256 => uint256) public voteWeights */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_65\n      tag_84\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_84:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_88:\n      mload(0x40)\n        /* \"#utility.yul\":4866:4880   */\n      swap1\n      iszero\n        /* \"#utility.yul\":4859:4881   */\n      iszero\n        /* \"#utility.yul\":4841:4882   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4829:4831   */\n      0x20\n        /* \"#utility.yul\":4814:4832   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      tag_62\n        /* \"#utility.yul\":4701:4888   */\n      jump\n        /* \"contracts/sis.sol\":7911:8244  function updateChannelState(uint256 newBalance, uint256 channel_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      pop\n      tag_40\n      tag_94\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n        /* \"contracts/sis.sol\":11124:11733  function closeChannelByDAO(address participant, uint256 newBalance, uint256 voteId) external onlyAdmin whenNotPaused {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_40\n      tag_99\n      calldatasize\n      0x04\n      tag_100\n      jump\t// in\n    tag_99:\n      tag_101\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_40\n      tag_104\n      jump\t// in\n        /* \"contracts/sis.sol\":3066:3127  function pause() public onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      tag_40\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump(tag_60)\n        /* \"contracts/sis.sol\":4904:5135  function changeAdmin(address newAdmin) external onlyOwner whenNotPaused {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      pop\n      tag_40\n      tag_115\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"contracts/sis.sol\":1327:1356  uint256 public reserveBalance */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_65\n      sload(0x09)\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_121\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_121:\n      pop\n      tag_122\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_122:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_125\n      jump\t// in\n        /* \"contracts/sis.sol\":3776:4035  function depositToReserve(uint256 amount) external onlyAdmin whenNotPaused {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      tag_40\n      tag_128\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_128:\n      tag_129\n      jump\t// in\n        /* \"contracts/sis.sol\":1179:1226  mapping(uint256 => uint256) public totalWeights */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_65\n      tag_132\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_132:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/sis.sol\":11933:12366  function batchUpdateChannelbyadmin(address[] calldata participants, uint256[] calldata newBalances) external onlyAdmin whenNotPaused {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_40\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"contracts/sis.sol\":9916:10353  function vote(uint256 voteId, bool approve) external whenNotPaused {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_40\n      tag_142\n      calldatasize\n      0x04\n      tag_143\n      jump\t// in\n    tag_142:\n      tag_144\n      jump\t// in\n        /* \"contracts/sis.sol\":1059:1116  mapping(uint256 => mapping(address => bool)) public votes */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      tag_88\n      tag_147\n      calldatasize\n      0x04\n      tag_148\n      jump\t// in\n    tag_147:\n      0x04\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/sis.sol\":1295:1320  uint256 public nextVoteId */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      tag_65\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/sis.sol\":9333:9775  function closeChannel(uint256 newBalance, uint256 close_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_40\n      tag_157\n      calldatasize\n      0x04\n      tag_95\n      jump\t// in\n    tag_157:\n      tag_158\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_159\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_159:\n      pop\n      tag_40\n      tag_161\n      calldatasize\n      0x04\n      tag_52\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n        /* \"contracts/sis.sol\":902:922  address public admin */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      sload(0x00)\n      tag_60\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/sis.sol\":5250:5511  function openChannel(uint256 amount) external whenNotPaused {... */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_167\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_167:\n      pop\n      tag_40\n      tag_169\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_169:\n      tag_170\n      jump\t// in\n        /* \"contracts/sis.sol\":1010:1052  mapping(bytes32 => bool) public usedNonces */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n      pop\n      tag_88\n      tag_173\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_173:\n      mstore(0x20, 0x03)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"contracts/sis.sol\":4203:4524  function withdrawFromReserve(uint256 amount) external onlyAdmin whenNotPaused {... */\n    tag_43:\n        /* \"contracts/sis.sol\":4676:4681  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":4660:4681  _msgSender() == admin */\n      and\n      eq\n        /* \"contracts/sis.sol\":4652:4720  require(_msgSender() == admin, \"Only admin can perform this action\") */\n      tag_180\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_184\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_184:\n        /* \"contracts/sis.sol\":4318:4324  amount */\n      dup1\n        /* \"contracts/sis.sol\":4300:4314  reserveBalance */\n      sload(0x09)\n        /* \"contracts/sis.sol\":4300:4324  reserveBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/sis.sol\":4292:4357  require(reserveBalance >= amount, \"Insufficient reserve balance\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8787:8789   */\n      0x20\n        /* \"contracts/sis.sol\":4292:4357  require(reserveBalance >= amount, \"Insufficient reserve balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8769:8790   */\n      mstore\n        /* \"#utility.yul\":8826:8828   */\n      0x1c\n        /* \"#utility.yul\":8806:8824   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8799:8829   */\n      mstore\n        /* \"#utility.yul\":8865:8895   */\n      0x496e73756666696369656e7420726573657276652062616c616e636500000000\n        /* \"#utility.yul\":8845:8863   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8838:8896   */\n      mstore\n        /* \"#utility.yul\":8913:8931   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":4292:4357  require(reserveBalance >= amount, \"Insufficient reserve balance\") */\n      tag_181\n        /* \"#utility.yul\":8585:8937   */\n      jump\n        /* \"contracts/sis.sol\":4292:4357  require(reserveBalance >= amount, \"Insufficient reserve balance\") */\n    tag_187:\n        /* \"contracts/sis.sol\":4376:4386  pointToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/sis.sol\":4376:4395  pointToken.transfer */\n      0xa9059cbb\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":4376:4417  pointToken.transfer(_msgSender(), amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9134:9166   */\n      swap1\n      swap2\n      and\n        /* \"contracts/sis.sol\":4376:4417  pointToken.transfer(_msgSender(), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9116:9167   */\n      mstore\n        /* \"#utility.yul\":9183:9201   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9176:9210   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":9089:9107   */\n      0x44\n      add\n        /* \"contracts/sis.sol\":4376:4417  pointToken.transfer(_msgSender(), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/sis.sol\":4368:4437  require(pointToken.transfer(_msgSender(), amount), \"Transfer failed\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_199\n      jump\t// in\n    tag_197:\n        /* \"contracts/sis.sol\":4466:4472  amount */\n      dup1\n        /* \"contracts/sis.sol\":4448:4462  reserveBalance */\n      0x09\n      0x00\n        /* \"contracts/sis.sol\":4448:4472  reserveBalance -= amount */\n      dup3\n      dup3\n      sload\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/sis.sol\":4488:4516  WithdrawnFromReserve(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3290:3315   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":4488:4516  WithdrawnFromReserve(amount) */\n      0x252f4762677e3c294cdba42d776da4a2c5a1259438ea5224c3bea5b27c8f04dc\n      swap1\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"contracts/sis.sol\":4488:4516  WithdrawnFromReserve(amount) */\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sis.sol\":4203:4524  function withdrawFromReserve(uint256 amount) external onlyAdmin whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":8538:9116  function batchUpdateBalances(address[] calldata participants, uint256[] calldata newBalances, uint256 close_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n    tag_48:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_204:\n        /* \"contracts/sis.sol\":8726:8767  participants.length == newBalances.length */\n      dup6\n      dup5\n      eq\n        /* \"contracts/sis.sol\":8718:8818  require(participants.length == newBalances.length, \"Participants and newBalances length must match\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10282:10284   */\n      0x20\n        /* \"contracts/sis.sol\":8718:8818  require(participants.length == newBalances.length, \"Participants and newBalances length must match\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10264:10285   */\n      mstore\n        /* \"#utility.yul\":10321:10323   */\n      0x2e\n        /* \"#utility.yul\":10301:10319   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10294:10324   */\n      mstore\n        /* \"#utility.yul\":10360:10394   */\n      0x5061727469636970616e747320616e64206e657742616c616e636573206c656e\n        /* \"#utility.yul\":10340:10358   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10333:10395   */\n      mstore\n      shl(0x93, 0x0cee8d040daeae6e840dac2e8c6d)\n        /* \"#utility.yul\":10411:10429   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10404:10448   */\n      mstore\n        /* \"#utility.yul\":10465:10484   */\n      0x84\n      add\n        /* \"contracts/sis.sol\":8718:8818  require(participants.length == newBalances.length, \"Participants and newBalances length must match\") */\n      tag_181\n        /* \"#utility.yul\":10080:10490   */\n      jump\n        /* \"contracts/sis.sol\":8718:8818  require(participants.length == newBalances.length, \"Participants and newBalances length must match\") */\n    tag_206:\n        /* \"contracts/sis.sol\":8829:8906  _verifyBatchSignature(participants, newBalances, close_nonce, adminSignature) */\n      tag_209\n        /* \"contracts/sis.sol\":8851:8863  participants */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":8865:8876  newBalances */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":8878:8889  close_nonce */\n      dup8\n        /* \"contracts/sis.sol\":8891:8905  adminSignature */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":8829:8850  _verifyBatchSignature */\n      tag_210\n        /* \"contracts/sis.sol\":8829:8906  _verifyBatchSignature(participants, newBalances, close_nonce, adminSignature) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/sis.sol\":8924:8930  uint i */\n      0x00\n        /* \"contracts/sis.sol\":8919:9040  for (uint i = 0; i < participants.length; i++) {... */\n    tag_211:\n        /* \"contracts/sis.sol\":8936:8959  i < participants.length */\n      dup7\n      dup2\n      lt\n        /* \"contracts/sis.sol\":8919:9040  for (uint i = 0; i < participants.length; i++) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/sis.sol\":8981:9028  _updateBalance(participants[i], newBalances[i]) */\n      tag_214\n        /* \"contracts/sis.sol\":8996:9008  participants */\n      dup9\n      dup9\n        /* \"contracts/sis.sol\":9009:9010  i */\n      dup4\n        /* \"contracts/sis.sol\":8996:9011  participants[i] */\n      dup2\n      dup2\n      lt\n      tag_216\n      jumpi\n      tag_216\n      tag_217\n      jump\t// in\n    tag_216:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_218\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_218:\n        /* \"contracts/sis.sol\":9013:9024  newBalances */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":9025:9026  i */\n      dup5\n        /* \"contracts/sis.sol\":9013:9027  newBalances[i] */\n      dup2\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_217\n      jump\t// in\n    tag_220:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/sis.sol\":8981:8995  _updateBalance */\n      tag_221\n        /* \"contracts/sis.sol\":8981:9028  _updateBalance(participants[i], newBalances[i]) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/sis.sol\":8961:8964  i++ */\n      0x01\n      add\n        /* \"contracts/sis.sol\":8919:9040  for (uint i = 0; i < participants.length; i++) {... */\n      jump(tag_211)\n    tag_212:\n      pop\n        /* \"contracts/sis.sol\":9055:9108  BalancesBatchUpdatedbyuser(participants, newBalances) */\n      0x1989b1fe93256bb3b4c6348f76f6f506f926f635cfa802ca3af4826159c5874b\n        /* \"contracts/sis.sol\":9082:9094  participants */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":9096:9107  newBalances */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":9055:9108  BalancesBatchUpdatedbyuser(participants, newBalances) */\n      mload(0x40)\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sis.sol\":8538:9116  function batchUpdateBalances(address[] calldata participants, uint256[] calldata newBalances, uint256 close_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":10485:10893  function startVoteToCloseChannel(address participant) external onlyAdmin whenNotPaused {... */\n    tag_53:\n        /* \"contracts/sis.sol\":4676:4681  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":4660:4681  _msgSender() == admin */\n      and\n      eq\n        /* \"contracts/sis.sol\":4652:4720  require(_msgSender() == admin, \"Only admin can perform this action\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_229:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":10591:10612  balances[participant] */\n      dup2\n      and\n        /* \"contracts/sis.sol\":10615:10616  0 */\n      0x00\n        /* \"contracts/sis.sol\":10591:10612  balances[participant] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10591:10599  balances */\n      0x02\n        /* \"contracts/sis.sol\":10591:10612  balances[participant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":10583:10642  require(balances[participant] > 0, \"No balance to dispute\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11893:11895   */\n      0x20\n        /* \"contracts/sis.sol\":10583:10642  require(balances[participant] > 0, \"No balance to dispute\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11875:11896   */\n      mstore\n        /* \"#utility.yul\":11932:11934   */\n      0x15\n        /* \"#utility.yul\":11912:11930   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11905:11935   */\n      mstore\n      shl(0x58, 0x4e6f2062616c616e636520746f2064697370757465)\n        /* \"#utility.yul\":11951:11969   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11944:11995   */\n      mstore\n        /* \"#utility.yul\":12012:12030   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":10583:10642  require(balances[participant] > 0, \"No balance to dispute\") */\n      tag_181\n        /* \"#utility.yul\":11691:12036   */\n      jump\n        /* \"contracts/sis.sol\":10583:10642  require(balances[participant] > 0, \"No balance to dispute\") */\n    tag_231:\n        /* \"contracts/sis.sol\":10672:10682  nextVoteId */\n      0x08\n        /* \"contracts/sis.sol\":10672:10684  nextVoteId++ */\n      dup1\n      sload\n        /* \"contracts/sis.sol\":10655:10669  uint256 voteId */\n      0x00\n      swap2\n      dup3\n        /* \"contracts/sis.sol\":10672:10684  nextVoteId++ */\n      tag_234\n      dup4\n      tag_235\n      jump\t// in\n    tag_234:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/sis.sol\":10718:10728  pointToken */\n      sload(0x01)\n        /* \"contracts/sis.sol\":10718:10753  pointToken.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10747:10751  this */\n      address\n        /* \"contracts/sis.sol\":10718:10753  pointToken.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3082:3133   */\n      mstore\n        /* \"contracts/sis.sol\":10655:10684  uint256 voteId = nextVoteId++ */\n      swap2\n      swap3\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":10718:10728  pointToken */\n      and\n      swap1\n        /* \"contracts/sis.sol\":10718:10738  pointToken.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":3055:3073   */\n      0x24\n      add\n        /* \"contracts/sis.sol\":10718:10753  pointToken.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_238\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_238:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_239\n      swap2\n      swap1\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"contracts/sis.sol\":10695:10715  totalWeights[voteId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10695:10707  totalWeights */\n      0x06\n        /* \"contracts/sis.sol\":10695:10715  totalWeights[voteId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sis.sol\":10695:10753  totalWeights[voteId] = pointToken.balanceOf(address(this)) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/sis.sol\":10764:10781  voteToParticipant */\n      0x07\n        /* \"contracts/sis.sol\":10764:10789  voteToParticipant[voteId] */\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/sis.sol\":10764:10803  voteToParticipant[voteId] = participant */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/sis.sol\":10853:10885  VoteStarted(voteId, participant) */\n      swap2\n      mload\n        /* \"#utility.yul\":3290:3315   */\n      dup4\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10853:10885  VoteStarted(voteId, participant) */\n      0x8610d91e9f8a63773d7a3c13aa8bb8407203532a61bb703c06fce895f9622d0d\n      swap2\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"contracts/sis.sol\":10853:10885  VoteStarted(voteId, participant) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sis.sol\":10572:10893  {... */\n      pop\n        /* \"contracts/sis.sol\":10485:10893  function startVoteToCloseChannel(address participant) external onlyAdmin whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":2582:2955  function initialize(address admin_, IERC20 pointToken_, uint256 initialReserveBalance) public initializer {... */\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_245\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_247\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_248\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_249:\n        /* \"contracts/sis.sol\":2699:2715  __Context_init() */\n      tag_251\n        /* \"contracts/sis.sol\":2699:2713  __Context_init */\n      tag_252\n        /* \"contracts/sis.sol\":2699:2715  __Context_init() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/sis.sol\":2726:2743  __Pausable_init() */\n      tag_253\n        /* \"contracts/sis.sol\":2726:2741  __Pausable_init */\n      tag_254\n        /* \"contracts/sis.sol\":2726:2743  __Pausable_init() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/sis.sol\":2754:2776  __Ownable_init(admin_) */\n      tag_255\n        /* \"contracts/sis.sol\":2769:2775  admin_ */\n      dup9\n        /* \"contracts/sis.sol\":2754:2768  __Ownable_init */\n      tag_256\n        /* \"contracts/sis.sol\":2754:2776  __Ownable_init(admin_) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/sis.sol\":2787:2811  __UUPSUpgradeable_init() */\n      tag_257\n        /* \"contracts/sis.sol\":2787:2809  __UUPSUpgradeable_init */\n      tag_252\n        /* \"contracts/sis.sol\":2787:2811  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_257:\n        /* \"contracts/sis.sol\":2824:2829  admin */\n      0x00\n        /* \"contracts/sis.sol\":2824:2838  admin = admin_ */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup12\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"contracts/sis.sol\":2849:2873  pointToken = pointToken_ */\n      dup1\n      sload\n      swap3\n      dup11\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n        /* \"contracts/sis.sol\":2884:2894  nextVoteId */\n      0x08\n        /* \"contracts/sis.sol\":2884:2898  nextVoteId = 1 */\n      sstore\n        /* \"contracts/sis.sol\":2909:2923  reserveBalance */\n      0x09\n        /* \"contracts/sis.sol\":2909:2947  reserveBalance = initialReserveBalance */\n      dup7\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":12523:12573   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":12511:12513   */\n      0x20\n        /* \"#utility.yul\":12496:12514   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sis.sol\":2582:2955  function initialize(address admin_, IERC20 pointToken_, uint256 initialReserveBalance) public initializer {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":3240:3305  function unpause() public onlyOwner {... */\n    tag_72:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_263\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_263:\n        /* \"contracts/sis.sol\":3287:3297  _unpause() */\n      tag_266\n        /* \"contracts/sis.sol\":3287:3295  _unpause */\n      tag_267\n        /* \"contracts/sis.sol\":3287:3297  _unpause() */\n      jump\t// in\n    tag_266:\n        /* \"contracts/sis.sol\":3240:3305  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_76:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_274\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_277:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/sis.sol\":7911:8244  function updateChannelState(uint256 newBalance, uint256 channel_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_284\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_284:\n        /* \"contracts/sis.sol\":8047:8120  _verifySignature(_msgSender(), newBalance, channel_nonce, adminSignature) */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":8064:8076  _msgSender() */\n    tag_287:\n        /* \"contracts/sis.sol\":8078:8088  newBalance */\n      dup6\n        /* \"contracts/sis.sol\":8090:8103  channel_nonce */\n      dup6\n        /* \"contracts/sis.sol\":8105:8119  adminSignature */\n      dup6\n      dup6\n        /* \"contracts/sis.sol\":8047:8063  _verifySignature */\n      tag_288\n        /* \"contracts/sis.sol\":8047:8120  _verifySignature(_msgSender(), newBalance, channel_nonce, adminSignature) */\n      jump\t// in\n    tag_286:\n        /* \"contracts/sis.sol\":8133:8173  _updateBalance(_msgSender(), newBalance) */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":8148:8160  _msgSender() */\n    tag_290:\n        /* \"contracts/sis.sol\":8162:8172  newBalance */\n      dup6\n        /* \"contracts/sis.sol\":8133:8147  _updateBalance */\n      tag_221\n        /* \"contracts/sis.sol\":8133:8173  _updateBalance(_msgSender(), newBalance) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/sis.sol\":8191:8236  ChannelStateUpdated(_msgSender(), newBalance) */\n      mload(0x40)\n        /* \"#utility.yul\":3290:3315   */\n      dup5\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"contracts/sis.sol\":8191:8236  ChannelStateUpdated(_msgSender(), newBalance) */\n      0x7200cd3d0176b58ea53053a648b9a9cfb0d0d13a52488e14a16e0037b2241d21\n      swap1\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"contracts/sis.sol\":8191:8236  ChannelStateUpdated(_msgSender(), newBalance) */\n    tag_292:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sis.sol\":7911:8244  function updateChannelState(uint256 newBalance, uint256 channel_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":11124:11733  function closeChannelByDAO(address participant, uint256 newBalance, uint256 voteId) external onlyAdmin whenNotPaused {... */\n    tag_101:\n        /* \"contracts/sis.sol\":4676:4681  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":4660:4681  _msgSender() == admin */\n      and\n      eq\n        /* \"contracts/sis.sol\":4652:4720  require(_msgSender() == admin, \"Only admin can perform this action\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_298\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_298:\n        /* \"contracts/sis.sol\":11287:11307  totalWeights[voteId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":11287:11299  totalWeights */\n      0x06\n        /* \"contracts/sis.sol\":11287:11307  totalWeights[voteId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":11260:11271  voteWeights */\n      0x05\n        /* \"contracts/sis.sol\":11260:11279  voteWeights[voteId] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":11260:11283  voteWeights[voteId] * 2 */\n      tag_300\n      swap1\n        /* \"contracts/sis.sol\":11282:11283  2 */\n      0x02\n        /* \"contracts/sis.sol\":11260:11283  voteWeights[voteId] * 2 */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"contracts/sis.sol\":11260:11307  voteWeights[voteId] * 2 >= totalWeights[voteId] */\n      lt\n      iszero\n        /* \"contracts/sis.sol\":11252:11345  require(voteWeights[voteId] * 2 >= totalWeights[voteId], \"Not enough votes to close channel\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12959:12961   */\n      0x20\n        /* \"contracts/sis.sol\":11252:11345  require(voteWeights[voteId] * 2 >= totalWeights[voteId], \"Not enough votes to close channel\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12941:12962   */\n      mstore\n        /* \"#utility.yul\":12998:13000   */\n      0x21\n        /* \"#utility.yul\":12978:12996   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12971:13001   */\n      mstore\n        /* \"#utility.yul\":13037:13071   */\n      0x4e6f7420656e6f75676820766f74657320746f20636c6f7365206368616e6e65\n        /* \"#utility.yul\":13017:13035   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13010:13072   */\n      mstore\n      shl(0xfa, 0x1b)\n        /* \"#utility.yul\":13088:13106   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13081:13112   */\n      mstore\n        /* \"#utility.yul\":13129:13148   */\n      0x84\n      add\n        /* \"contracts/sis.sol\":11252:11345  require(voteWeights[voteId] * 2 >= totalWeights[voteId], \"Not enough votes to close channel\") */\n      tag_181\n        /* \"#utility.yul\":12757:13154   */\n      jump\n        /* \"contracts/sis.sol\":11252:11345  require(voteWeights[voteId] * 2 >= totalWeights[voteId], \"Not enough votes to close channel\") */\n    tag_302:\n        /* \"contracts/sis.sol\":11364:11389  voteToParticipant[voteId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":11364:11381  voteToParticipant */\n      0x07\n        /* \"contracts/sis.sol\":11364:11389  voteToParticipant[voteId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":11364:11404  voteToParticipant[voteId] == participant */\n      dup5\n      dup2\n      and\n        /* \"contracts/sis.sol\":11364:11389  voteToParticipant[voteId] */\n      swap2\n      and\n        /* \"contracts/sis.sol\":11364:11404  voteToParticipant[voteId] == participant */\n      eq\n        /* \"contracts/sis.sol\":11356:11443  require(voteToParticipant[voteId] == participant, \"Vote ID does not match participant\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13361:13363   */\n      0x20\n        /* \"contracts/sis.sol\":11356:11443  require(voteToParticipant[voteId] == participant, \"Vote ID does not match participant\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13343:13364   */\n      mstore\n        /* \"#utility.yul\":13400:13402   */\n      0x22\n        /* \"#utility.yul\":13380:13398   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13373:13403   */\n      mstore\n        /* \"#utility.yul\":13439:13473   */\n      0x566f746520494420646f6573206e6f74206d6174636820706172746963697061\n        /* \"#utility.yul\":13419:13437   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13412:13474   */\n      mstore\n      shl(0xf2, 0x1b9d)\n        /* \"#utility.yul\":13490:13508   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13483:13515   */\n      mstore\n        /* \"#utility.yul\":13532:13551   */\n      0x84\n      add\n        /* \"contracts/sis.sol\":11356:11443  require(voteToParticipant[voteId] == participant, \"Vote ID does not match participant\") */\n      tag_181\n        /* \"#utility.yul\":13159:13557   */\n      jump\n        /* \"contracts/sis.sol\":11356:11443  require(voteToParticipant[voteId] == participant, \"Vote ID does not match participant\") */\n    tag_305:\n        /* \"contracts/sis.sol\":11498:11537  _updateBalance(participant, newBalance) */\n      tag_308\n        /* \"contracts/sis.sol\":11513:11524  participant */\n      dup4\n        /* \"contracts/sis.sol\":11526:11536  newBalance */\n      dup4\n        /* \"contracts/sis.sol\":11498:11512  _updateBalance */\n      tag_221\n        /* \"contracts/sis.sol\":11498:11537  _updateBalance(participant, newBalance) */\n      jump\t// in\n    tag_308:\n        /* \"contracts/sis.sol\":11556:11566  pointToken */\n      sload(0x01)\n        /* \"contracts/sis.sol\":11556:11600  pointToken.transfer(participant, newBalance) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9134:9166   */\n      dup6\n      dup2\n      and\n        /* \"contracts/sis.sol\":11556:11600  pointToken.transfer(participant, newBalance) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9116:9167   */\n      mstore\n        /* \"#utility.yul\":9183:9201   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9176:9210   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/sis.sol\":11556:11566  pointToken */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/sis.sol\":11556:11575  pointToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":9089:9107   */\n      0x44\n      add\n        /* \"contracts/sis.sol\":11556:11600  pointToken.transfer(participant, newBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_311\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_311:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_312\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_312:\n        /* \"contracts/sis.sol\":11548:11620  require(pointToken.transfer(participant, newBalance), \"Transfer failed\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_199\n      jump\t// in\n    tag_313:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":11631:11652  balances[participant] */\n      dup4\n      and\n        /* \"contracts/sis.sol\":11655:11656  0 */\n      0x00\n        /* \"contracts/sis.sol\":11631:11652  balances[participant] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":11631:11639  balances */\n      0x02\n        /* \"contracts/sis.sol\":11631:11652  balances[participant] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sis.sol\":11631:11656  balances[participant] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/sis.sol\":11674:11725  ChannelClosedByDAO(participant, newBalance, voteId) */\n      dup2\n      mload\n        /* \"#utility.yul\":13736:13761   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":13777:13795   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":13770:13804   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/sis.sol\":11674:11725  ChannelClosedByDAO(participant, newBalance, voteId) */\n      0x93af0759c861f9140be6d1c461033b560dba0e077676ce380708438f5ee23f62\n      swap2\n        /* \"#utility.yul\":13709:13727   */\n      add\n        /* \"contracts/sis.sol\":11674:11725  ChannelClosedByDAO(participant, newBalance, voteId) */\n    tag_315:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sis.sol\":11124:11733  function closeChannelByDAO(address participant, uint256 newBalance, uint256 voteId) external onlyAdmin whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_318\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/sis.sol\":3066:3127  function pause() public onlyOwner {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_323\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_323:\n        /* \"contracts/sis.sol\":3111:3119  _pause() */\n      tag_266\n        /* \"contracts/sis.sol\":3111:3117  _pause */\n      tag_326\n        /* \"contracts/sis.sol\":3111:3119  _pause() */\n      jump\t// in\n        /* \"contracts/sis.sol\":4904:5135  function changeAdmin(address newAdmin) external onlyOwner whenNotPaused {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_331\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_333\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_333:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":4995:5017  newAdmin != address(0) */\n      dup2\n      and\n        /* \"contracts/sis.sol\":4987:5062  require(newAdmin != address(0), \"New admin address cannot be zero address\") */\n      tag_335\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14017:14019   */\n      0x20\n        /* \"contracts/sis.sol\":4987:5062  require(newAdmin != address(0), \"New admin address cannot be zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13999:14020   */\n      mstore\n        /* \"#utility.yul\":14056:14058   */\n      0x28\n        /* \"#utility.yul\":14036:14054   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14029:14059   */\n      mstore\n        /* \"#utility.yul\":14095:14129   */\n      0x4e65772061646d696e20616464726573732063616e6e6f74206265207a65726f\n        /* \"#utility.yul\":14075:14093   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14068:14130   */\n      mstore\n      shl(0xc0, 0x2061646472657373)\n        /* \"#utility.yul\":14146:14164   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14139:14177   */\n      mstore\n        /* \"#utility.yul\":14194:14213   */\n      0x84\n      add\n        /* \"contracts/sis.sol\":4987:5062  require(newAdmin != address(0), \"New admin address cannot be zero address\") */\n      tag_181\n        /* \"#utility.yul\":13815:14219   */\n      jump\n        /* \"contracts/sis.sol\":4987:5062  require(newAdmin != address(0), \"New admin address cannot be zero address\") */\n    tag_335:\n        /* \"contracts/sis.sol\":5073:5078  admin */\n      0x00\n        /* \"contracts/sis.sol\":5073:5089  admin = newAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"contracts/sis.sol\":5105:5127  AdminChanged(newAdmin) */\n      mload(0x40)\n        /* \"contracts/sis.sol\":5073:5089  admin = newAdmin */\n      swap1\n      swap2\n        /* \"contracts/sis.sol\":5105:5127  AdminChanged(newAdmin) */\n      0x7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c\n      swap2\n      log2\n        /* \"contracts/sis.sol\":4904:5135  function changeAdmin(address newAdmin) external onlyOwner whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":3776:4035  function depositToReserve(uint256 amount) external onlyAdmin whenNotPaused {... */\n    tag_129:\n        /* \"contracts/sis.sol\":4676:4681  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":4660:4681  _msgSender() == admin */\n      and\n      eq\n        /* \"contracts/sis.sol\":4652:4720  require(_msgSender() == admin, \"Only admin can perform this action\") */\n      tag_340\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_343\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_343:\n        /* \"contracts/sis.sol\":3870:3880  pointToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/sis.sol\":3870:3893  pointToken.transferFrom */\n      0x23b872dd\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":3870:3930  pointToken.transferFrom(_msgSender(), address(this), amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14482:14497   */\n      swap1\n      swap2\n      and\n        /* \"contracts/sis.sol\":3870:3930  pointToken.transferFrom(_msgSender(), address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14464:14498   */\n      mstore\n        /* \"contracts/sis.sol\":3916:3920  this */\n      address\n        /* \"#utility.yul\":14514:14532   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14507:14550   */\n      mstore\n        /* \"#utility.yul\":14566:14584   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14559:14593   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14399:14417   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":3870:3930  pointToken.transferFrom(_msgSender(), address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_349\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_349:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_350\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_350:\n        /* \"contracts/sis.sol\":3862:3950  require(pointToken.transferFrom(_msgSender(), address(this), amount), \"Transfer failed\") */\n      tag_351\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_199\n      jump\t// in\n    tag_351:\n        /* \"contracts/sis.sol\":3979:3985  amount */\n      dup1\n        /* \"contracts/sis.sol\":3961:3975  reserveBalance */\n      0x09\n      0x00\n        /* \"contracts/sis.sol\":3961:3985  reserveBalance += amount */\n      dup3\n      dup3\n      sload\n      tag_353\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_353:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/sis.sol\":4001:4027  DepositedToReserve(amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3290:3315   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":4001:4027  DepositedToReserve(amount) */\n      0x372b1a73ea80de8b8f35b0cf88147a1fbc354f7fb9d1409431199a619acd0c98\n      swap1\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"contracts/sis.sol\":4001:4027  DepositedToReserve(amount) */\n      tag_202\n        /* \"#utility.yul\":3144:3321   */\n      jump\n        /* \"contracts/sis.sol\":11933:12366  function batchUpdateChannelbyadmin(address[] calldata participants, uint256[] calldata newBalances) external onlyAdmin whenNotPaused {... */\n    tag_139:\n        /* \"contracts/sis.sol\":4676:4681  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":4660:4681  _msgSender() == admin */\n      and\n      eq\n        /* \"contracts/sis.sol\":4652:4720  require(_msgSender() == admin, \"Only admin can perform this action\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_182\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_361\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_361:\n        /* \"contracts/sis.sol\":12085:12126  participants.length == newBalances.length */\n      dup3\n      dup2\n      eq\n        /* \"contracts/sis.sol\":12077:12155  require(participants.length == newBalances.length, \"Array lengths must match\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14936:14938   */\n      0x20\n        /* \"contracts/sis.sol\":12077:12155  require(participants.length == newBalances.length, \"Array lengths must match\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14918:14939   */\n      mstore\n        /* \"#utility.yul\":14975:14977   */\n      0x18\n        /* \"#utility.yul\":14955:14973   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14948:14978   */\n      mstore\n        /* \"#utility.yul\":15014:15040   */\n      0x4172726179206c656e67746873206d757374206d617463680000000000000000\n        /* \"#utility.yul\":14994:15012   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14987:15041   */\n      mstore\n        /* \"#utility.yul\":15058:15076   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":12077:12155  require(participants.length == newBalances.length, \"Array lengths must match\") */\n      tag_181\n        /* \"#utility.yul\":14734:15082   */\n      jump\n        /* \"contracts/sis.sol\":12077:12155  require(participants.length == newBalances.length, \"Array lengths must match\") */\n    tag_363:\n        /* \"contracts/sis.sol\":12173:12179  uint i */\n      0x00\n        /* \"contracts/sis.sol\":12168:12289  for (uint i = 0; i < participants.length; i++) {... */\n    tag_366:\n        /* \"contracts/sis.sol\":12185:12208  i < participants.length */\n      dup4\n      dup2\n      lt\n        /* \"contracts/sis.sol\":12168:12289  for (uint i = 0; i < participants.length; i++) {... */\n      iszero\n      tag_367\n      jumpi\n        /* \"contracts/sis.sol\":12230:12277  _updateBalance(participants[i], newBalances[i]) */\n      tag_369\n        /* \"contracts/sis.sol\":12245:12257  participants */\n      dup6\n      dup6\n        /* \"contracts/sis.sol\":12258:12259  i */\n      dup4\n        /* \"contracts/sis.sol\":12245:12260  participants[i] */\n      dup2\n      dup2\n      lt\n      tag_371\n      jumpi\n      tag_371\n      tag_217\n      jump\t// in\n    tag_371:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_372\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_372:\n        /* \"contracts/sis.sol\":12262:12273  newBalances */\n      dup5\n      dup5\n        /* \"contracts/sis.sol\":12274:12275  i */\n      dup5\n        /* \"contracts/sis.sol\":12262:12276  newBalances[i] */\n      dup2\n      dup2\n      lt\n      tag_220\n      jumpi\n      tag_220\n      tag_217\n      jump\t// in\n        /* \"contracts/sis.sol\":12230:12277  _updateBalance(participants[i], newBalances[i]) */\n    tag_369:\n        /* \"contracts/sis.sol\":12210:12213  i++ */\n      0x01\n      add\n        /* \"contracts/sis.sol\":12168:12289  for (uint i = 0; i < participants.length; i++) {... */\n      jump(tag_366)\n    tag_367:\n      pop\n        /* \"contracts/sis.sol\":12304:12358  BalancesBatchUpdatedbyadmin(participants, newBalances) */\n      0x9071b044465a4e855aabae9828b35d03eff50e0110996249e9bd9add0d117ed7\n        /* \"contracts/sis.sol\":12332:12344  participants */\n      dup5\n      dup5\n        /* \"contracts/sis.sol\":12346:12357  newBalances */\n      dup5\n      dup5\n        /* \"contracts/sis.sol\":12304:12358  BalancesBatchUpdatedbyadmin(participants, newBalances) */\n      mload(0x40)\n      tag_375\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_375:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/sis.sol\":11933:12366  function batchUpdateChannelbyadmin(address[] calldata participants, uint256[] calldata newBalances) external onlyAdmin whenNotPaused {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":9916:10353  function vote(uint256 voteId, bool approve) external whenNotPaused {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":10027:10028  0 */\n      0x00\n        /* \"contracts/sis.sol\":10002:10024  balances[_msgSender()] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10002:10010  balances */\n      0x02\n        /* \"contracts/sis.sol\":10002:10024  balances[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":9994:10051  require(balances[_msgSender()] > 0, \"No balance to vote\") */\n      tag_380\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15289:15291   */\n      0x20\n        /* \"contracts/sis.sol\":9994:10051  require(balances[_msgSender()] > 0, \"No balance to vote\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15271:15292   */\n      mstore\n        /* \"#utility.yul\":15328:15330   */\n      0x12\n        /* \"#utility.yul\":15308:15326   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15301:15331   */\n      mstore\n      shl(0x70, 0x4e6f2062616c616e636520746f20766f7465)\n        /* \"#utility.yul\":15347:15365   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15340:15388   */\n      mstore\n        /* \"#utility.yul\":15405:15423   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":9994:10051  require(balances[_msgSender()] > 0, \"No balance to vote\") */\n      tag_181\n        /* \"#utility.yul\":15087:15429   */\n      jump\n        /* \"contracts/sis.sol\":9994:10051  require(balances[_msgSender()] > 0, \"No balance to vote\") */\n    tag_380:\n        /* \"contracts/sis.sol\":10071:10084  votes[voteId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10071:10076  votes */\n      0x04\n        /* \"contracts/sis.sol\":10071:10084  votes[voteId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":10071:10098  votes[voteId][_msgSender()] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/sis.sol\":10070:10098  !votes[voteId][_msgSender()] */\n      iszero\n        /* \"contracts/sis.sol\":10062:10116  require(!votes[voteId][_msgSender()], \"Already voted\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15636:15638   */\n      0x20\n        /* \"contracts/sis.sol\":10062:10116  require(!votes[voteId][_msgSender()], \"Already voted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15618:15639   */\n      mstore\n        /* \"#utility.yul\":15675:15677   */\n      0x0d\n        /* \"#utility.yul\":15655:15673   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15648:15678   */\n      mstore\n      shl(0x9a, 0x105b1c9958591e481d9bdd1959)\n        /* \"#utility.yul\":15694:15712   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15687:15730   */\n      mstore\n        /* \"#utility.yul\":15747:15765   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":10062:10116  require(!votes[voteId][_msgSender()], \"Already voted\") */\n      tag_181\n        /* \"#utility.yul\":15434:15771   */\n      jump\n        /* \"contracts/sis.sol\":10062:10116  require(!votes[voteId][_msgSender()], \"Already voted\") */\n    tag_384:\n        /* \"contracts/sis.sol\":10129:10142  votes[voteId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10129:10134  votes */\n      0x04\n        /* \"contracts/sis.sol\":10129:10142  votes[voteId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":10129:10156  votes[voteId][_msgSender()] */\n      dup5\n      mstore\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sis.sol\":10129:10163  votes[voteId][_msgSender()] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/sis.sol\":10159:10163  true */\n      0x01\n        /* \"contracts/sis.sol\":10129:10163  votes[voteId][_msgSender()] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/sis.sol\":10191:10199  balances */\n      0x02\n        /* \"contracts/sis.sol\":10191:10213  balances[_msgSender()] */\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":10224:10293  if (approve) {... */\n      dup2\n      iszero\n      tag_389\n      jumpi\n        /* \"contracts/sis.sol\":10252:10271  voteWeights[voteId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":10252:10263  voteWeights */\n      0x05\n        /* \"contracts/sis.sol\":10252:10271  voteWeights[voteId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/sis.sol\":10252:10281  voteWeights[voteId] += weight */\n      dup1\n      sload\n        /* \"contracts/sis.sol\":10275:10281  weight */\n      dup4\n      swap3\n        /* \"contracts/sis.sol\":10252:10271  voteWeights[voteId] */\n      swap1\n        /* \"contracts/sis.sol\":10252:10281  voteWeights[voteId] += weight */\n      tag_390\n      swap1\n        /* \"contracts/sis.sol\":10275:10281  weight */\n      dup5\n      swap1\n        /* \"contracts/sis.sol\":10252:10281  voteWeights[voteId] += weight */\n      tag_354\n      jump\t// in\n    tag_390:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/sis.sol\":10224:10293  if (approve) {... */\n    tag_389:\n        /* \"contracts/sis.sol\":10310:10345  Voted(voteId, _msgSender(), weight) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13736:13761   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":13792:13794   */\n      0x20\n        /* \"#utility.yul\":13777:13795   */\n      dup2\n      add\n        /* \"#utility.yul\":13770:13804   */\n      dup4\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap2\n        /* \"contracts/sis.sol\":10310:10345  Voted(voteId, _msgSender(), weight) */\n      0x1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e\n      swap2\n        /* \"#utility.yul\":13709:13727   */\n      add\n        /* \"contracts/sis.sol\":10310:10345  Voted(voteId, _msgSender(), weight) */\n      tag_315\n        /* \"#utility.yul\":13562:13810   */\n      jump\n        /* \"contracts/sis.sol\":9333:9775  function closeChannel(uint256 newBalance, uint256 close_nonce, bytes calldata adminSignature) external whenNotPaused {... */\n    tag_158:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_394\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_394:\n        /* \"contracts/sis.sol\":9461:9532  _verifySignature(_msgSender(), newBalance, close_nonce, adminSignature) */\n      tag_396\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":9478:9490  _msgSender() */\n      tag_287\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/sis.sol\":9461:9532  _verifySignature(_msgSender(), newBalance, close_nonce, adminSignature) */\n    tag_396:\n        /* \"contracts/sis.sol\":9545:9585  _updateBalance(_msgSender(), newBalance) */\n      tag_398\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":9560:9572  _msgSender() */\n      tag_290\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/sis.sol\":9545:9585  _updateBalance(_msgSender(), newBalance) */\n    tag_398:\n        /* \"contracts/sis.sol\":9606:9616  pointToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/sis.sol\":9606:9625  pointToken.transfer */\n      0xa9059cbb\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":9606:9651  pointToken.transfer(_msgSender(), newBalance) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9134:9166   */\n      swap1\n      swap2\n      and\n        /* \"contracts/sis.sol\":9606:9651  pointToken.transfer(_msgSender(), newBalance) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9116:9167   */\n      mstore\n        /* \"#utility.yul\":9183:9201   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":9176:9210   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":9089:9107   */\n      0x44\n      add\n        /* \"contracts/sis.sol\":9606:9651  pointToken.transfer(_msgSender(), newBalance) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_403\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_403:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_404\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_404:\n        /* \"contracts/sis.sol\":9598:9671  require(pointToken.transfer(_msgSender(), newBalance), \"Transfer failed\") */\n      tag_405\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_199\n      jump\t// in\n    tag_405:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":9709:9710  0 */\n      0x00\n        /* \"contracts/sis.sol\":9684:9706  balances[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":9684:9692  balances */\n      0x02\n        /* \"contracts/sis.sol\":9684:9706  balances[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/sis.sol\":9684:9710  balances[_msgSender()] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"contracts/sis.sol\":9728:9767  ChannelClosed(_msgSender(), newBalance) */\n      swap1\n      mload\n        /* \"#utility.yul\":3290:3315   */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":9728:9767  ChannelClosed(_msgSender(), newBalance) */\n      0x770342ee36990141b5b1f4b3b41a184d7968647ac7f0dbfd2d86d566c468027d\n      swap2\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"contracts/sis.sol\":9728:9767  ChannelClosed(_msgSender(), newBalance) */\n      tag_292\n        /* \"#utility.yul\":3144:3321   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_411\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_411:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3082:3133   */\n      mstore\n        /* \"#utility.yul\":3055:3073   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      tag_181\n        /* \"#utility.yul\":2921:3139   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_415:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/sis.sol\":5250:5511  function openChannel(uint256 amount) external whenNotPaused {... */\n    tag_170:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_417\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_417:\n        /* \"contracts/sis.sol\":5329:5339  pointToken */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"contracts/sis.sol\":5329:5352  pointToken.transferFrom */\n      0x23b872dd\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":5329:5389  pointToken.transferFrom(_msgSender(), address(this), amount) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14482:14497   */\n      swap1\n      swap2\n      and\n        /* \"contracts/sis.sol\":5329:5389  pointToken.transferFrom(_msgSender(), address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14464:14498   */\n      mstore\n        /* \"contracts/sis.sol\":5375:5379  this */\n      address\n        /* \"#utility.yul\":14514:14532   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14507:14550   */\n      mstore\n        /* \"#utility.yul\":14566:14584   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":14559:14593   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":14399:14417   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":5329:5389  pointToken.transferFrom(_msgSender(), address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_422\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_422:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_423\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_423:\n        /* \"contracts/sis.sol\":5321:5409  require(pointToken.transferFrom(_msgSender(), address(this), amount), \"Transfer failed\") */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_181\n      swap1\n      tag_199\n      jump\t// in\n    tag_424:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"contracts/sis.sol\":5420:5442  balances[_msgSender()] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":5420:5428  balances */\n      0x02\n        /* \"contracts/sis.sol\":5420:5442  balances[_msgSender()] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/sis.sol\":5420:5452  balances[_msgSender()] += amount */\n      dup1\n      sload\n        /* \"contracts/sis.sol\":5446:5452  amount */\n      dup4\n      swap3\n        /* \"contracts/sis.sol\":5420:5442  balances[_msgSender()] */\n      swap1\n        /* \"contracts/sis.sol\":5420:5452  balances[_msgSender()] += amount */\n      tag_427\n      swap1\n        /* \"contracts/sis.sol\":5446:5452  amount */\n      dup5\n      swap1\n        /* \"contracts/sis.sol\":5420:5452  balances[_msgSender()] += amount */\n      tag_354\n      jump\t// in\n    tag_427:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/sis.sol\":5468:5503  ChannelOpened(_msgSender(), amount) */\n      mload(0x40)\n        /* \"#utility.yul\":3290:3315   */\n      dup2\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"contracts/sis.sol\":5468:5503  ChannelOpened(_msgSender(), amount) */\n      0xaf952b0a28349f5ffff2d98aa9050ea845adbe423ff73ac5da5f268834ae3ac0\n      swap1\n        /* \"#utility.yul\":3278:3280   */\n      0x20\n        /* \"#utility.yul\":3263:3281   */\n      add\n        /* \"contracts/sis.sol\":5468:5503  ChannelOpened(_msgSender(), amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/sis.sol\":5250:5511  function openChannel(uint256 amount) external whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_185:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sis.sol\":6593:7010  function _verifyBatchSignature(address[] calldata participants, uint256[] calldata newBalances, uint256 nonce, bytes calldata adminSignature) internal {... */\n    tag_210:\n        /* \"contracts/sis.sol\":6755:6767  bytes32 hash */\n      0x00\n        /* \"contracts/sis.sol\":6797:6809  participants */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":6811:6822  newBalances */\n      dup8\n      dup8\n        /* \"contracts/sis.sol\":6824:6829  nonce */\n      dup8\n        /* \"contracts/sis.sol\":6780:6830  abi.encodePacked(participants, newBalances, nonce) */\n      add(0x20, mload(0x40))\n      tag_435\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_436\n      jump\t// in\n    tag_435:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sis.sol\":6770:6831  keccak256(abi.encodePacked(participants, newBalances, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sis.sol\":6755:6831  bytes32 hash = keccak256(abi.encodePacked(participants, newBalances, nonce)) */\n      swap1\n      pop\n        /* \"contracts/sis.sol\":6859:6887  hash.recover(adminSignature) */\n      tag_437\n        /* \"contracts/sis.sol\":6872:6886  adminSignature */\n      dup4\n      dup4\n        /* \"contracts/sis.sol\":6859:6887  hash.recover(adminSignature) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/sis.sol\":6859:6863  hash */\n      dup6\n      swap4\n        /* \"contracts/sis.sol\":6859:6887  hash.recover(adminSignature) */\n      swap3\n      pop\n      pop\n        /* \"contracts/sis.sol\":6859:6871  hash.recover */\n      tag_438\n        /* \"contracts/sis.sol\":6859:6887  hash.recover(adminSignature) */\n      swap1\n      pop\n      jump\t// in\n    tag_437:\n        /* \"contracts/sis.sol\":6850:6855  admin */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/sis.sol\":6850:6887  admin == hash.recover(adminSignature) */\n      swap2\n      and\n      eq\n        /* \"contracts/sis.sol\":6842:6909  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n      tag_439\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16941:16943   */\n      0x20\n        /* \"contracts/sis.sol\":6842:6909  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16923:16944   */\n      mstore\n        /* \"#utility.yul\":16980:16982   */\n      0x11\n        /* \"#utility.yul\":16960:16978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16953:16983   */\n      mstore\n      shl(0x78, 0x496e76616c6964207369676e6174757265)\n        /* \"#utility.yul\":16999:17017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16992:17039   */\n      mstore\n        /* \"#utility.yul\":17056:17074   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":6842:6909  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n      tag_181\n        /* \"#utility.yul\":16739:17080   */\n      jump\n        /* \"contracts/sis.sol\":6842:6909  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n    tag_439:\n        /* \"contracts/sis.sol\":6929:6945  usedNonces[hash] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":6929:6939  usedNonces */\n      0x03\n        /* \"contracts/sis.sol\":6929:6945  usedNonces[hash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/sis.sol\":6928:6945  !usedNonces[hash] */\n      iszero\n        /* \"contracts/sis.sol\":6920:6968  require(!usedNonces[hash], \"Nonce already used\") */\n      tag_442\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17287:17289   */\n      0x20\n        /* \"contracts/sis.sol\":6920:6968  require(!usedNonces[hash], \"Nonce already used\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17269:17290   */\n      mstore\n        /* \"#utility.yul\":17326:17328   */\n      0x12\n        /* \"#utility.yul\":17306:17324   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17299:17329   */\n      mstore\n      shl(0x72, 0x139bdb98d948185b1c9958591e481d5cd959)\n        /* \"#utility.yul\":17345:17363   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17338:17386   */\n      mstore\n        /* \"#utility.yul\":17403:17421   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":6920:6968  require(!usedNonces[hash], \"Nonce already used\") */\n      tag_181\n        /* \"#utility.yul\":17085:17427   */\n      jump\n        /* \"contracts/sis.sol\":6920:6968  require(!usedNonces[hash], \"Nonce already used\") */\n    tag_442:\n        /* \"contracts/sis.sol\":6979:6995  usedNonces[hash] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":6979:6989  usedNonces */\n      0x03\n        /* \"contracts/sis.sol\":6979:6995  usedNonces[hash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/sis.sol\":6979:7002  usedNonces[hash] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/sis.sol\":6998:7002  true */\n      0x01\n        /* \"contracts/sis.sol\":6979:7002  usedNonces[hash] = true */\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sis.sol\":6593:7010  function _verifyBatchSignature(address[] calldata participants, uint256[] calldata newBalances, uint256 nonce, bytes calldata adminSignature) internal {... */\n      jump\t// out\n        /* \"contracts/sis.sol\":5710:6304  function _updateBalance(address participant, uint256 newBalance) internal {... */\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":5799:5820  balances[participant] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":5799:5807  balances */\n      0x02\n        /* \"contracts/sis.sol\":5799:5820  balances[participant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":5799:5833  balances[participant] < newBalance */\n      dup2\n      gt\n        /* \"contracts/sis.sol\":5795:6297  if (balances[participant] < newBalance) {... */\n      iszero\n      tag_446\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":5883:5904  balances[participant] */\n      dup3\n      and\n        /* \"contracts/sis.sol\":5850:5867  uint256 shortfall */\n      0x00\n        /* \"contracts/sis.sol\":5883:5904  balances[participant] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":5883:5891  balances */\n      0x02\n        /* \"contracts/sis.sol\":5883:5904  balances[participant] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":5870:5904  newBalance - balances[participant] */\n      tag_447\n      swap1\n        /* \"contracts/sis.sol\":5870:5880  newBalance */\n      dup4\n        /* \"contracts/sis.sol\":5870:5904  newBalance - balances[participant] */\n      tag_201\n      jump\t// in\n    tag_447:\n        /* \"contracts/sis.sol\":5850:5904  uint256 shortfall = newBalance - balances[participant] */\n      swap1\n      pop\n        /* \"contracts/sis.sol\":5945:5954  shortfall */\n      dup1\n        /* \"contracts/sis.sol\":5927:5941  reserveBalance */\n      sload(0x09)\n        /* \"contracts/sis.sol\":5927:5954  reserveBalance >= shortfall */\n      lt\n      iszero\n        /* \"contracts/sis.sol\":5919:5985  require(reserveBalance >= shortfall, \"Not enough reserve balance\") */\n      tag_448\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17634:17636   */\n      0x20\n        /* \"contracts/sis.sol\":5919:5985  require(reserveBalance >= shortfall, \"Not enough reserve balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17616:17637   */\n      mstore\n        /* \"#utility.yul\":17673:17675   */\n      0x1a\n        /* \"#utility.yul\":17653:17671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17646:17676   */\n      mstore\n        /* \"#utility.yul\":17712:17740   */\n      0x4e6f7420656e6f75676820726573657276652062616c616e6365000000000000\n        /* \"#utility.yul\":17692:17710   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17685:17741   */\n      mstore\n        /* \"#utility.yul\":17758:17776   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":5919:5985  require(reserveBalance >= shortfall, \"Not enough reserve balance\") */\n      tag_181\n        /* \"#utility.yul\":17432:17782   */\n      jump\n        /* \"contracts/sis.sol\":5919:5985  require(reserveBalance >= shortfall, \"Not enough reserve balance\") */\n    tag_448:\n        /* \"contracts/sis.sol\":6018:6027  shortfall */\n      dup1\n        /* \"contracts/sis.sol\":6000:6014  reserveBalance */\n      0x09\n      0x00\n        /* \"contracts/sis.sol\":6000:6027  reserveBalance -= shortfall */\n      dup3\n      dup3\n      sload\n      tag_451\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_451:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":6042:6063  balances[participant] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":6042:6050  balances */\n      0x02\n        /* \"contracts/sis.sol\":6042:6063  balances[participant] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/sis.sol\":6042:6076  balances[participant] += shortfall */\n      dup1\n      sload\n        /* \"contracts/sis.sol\":6067:6076  shortfall */\n      dup4\n      swap3\n        /* \"contracts/sis.sol\":6042:6063  balances[participant] */\n      swap1\n        /* \"contracts/sis.sol\":6042:6076  balances[participant] += shortfall */\n      tag_452\n      swap1\n        /* \"contracts/sis.sol\":6067:6076  shortfall */\n      dup5\n      swap1\n        /* \"contracts/sis.sol\":6042:6076  balances[participant] += shortfall */\n      tag_354\n      jump\t// in\n    tag_452:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/sis.sol\":5795:6297  if (balances[participant] < newBalance) {... */\n      tag_274\n      swap2\n      pop\n      pop\n      jump\n    tag_446:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":6098:6119  balances[participant] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":6098:6106  balances */\n      0x02\n        /* \"contracts/sis.sol\":6098:6119  balances[participant] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":6098:6132  balances[participant] > newBalance */\n      dup2\n      lt\n        /* \"contracts/sis.sol\":6094:6297  if (balances[participant] > newBalance) {... */\n      iszero\n      tag_274\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":6166:6187  balances[participant] */\n      dup3\n      and\n        /* \"contracts/sis.sol\":6149:6163  uint256 excess */\n      0x00\n        /* \"contracts/sis.sol\":6166:6187  balances[participant] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":6166:6174  balances */\n      0x02\n        /* \"contracts/sis.sol\":6166:6187  balances[participant] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/sis.sol\":6166:6200  balances[participant] - newBalance */\n      tag_455\n      swap1\n        /* \"contracts/sis.sol\":6190:6200  newBalance */\n      dup4\n      swap1\n        /* \"contracts/sis.sol\":6166:6200  balances[participant] - newBalance */\n      tag_201\n      jump\t// in\n    tag_455:\n        /* \"contracts/sis.sol\":6149:6200  uint256 excess = balances[participant] - newBalance */\n      swap1\n      pop\n        /* \"contracts/sis.sol\":6233:6239  excess */\n      dup1\n        /* \"contracts/sis.sol\":6215:6229  reserveBalance */\n      0x09\n      0x00\n        /* \"contracts/sis.sol\":6215:6239  reserveBalance += excess */\n      dup3\n      dup3\n      sload\n      tag_456\n      swap2\n      swap1\n      tag_354\n      jump\t// in\n    tag_456:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/sis.sol\":6254:6275  balances[participant] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":6254:6262  balances */\n      0x02\n        /* \"contracts/sis.sol\":6254:6275  balances[participant] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/sis.sol\":6254:6285  balances[participant] -= excess */\n      dup1\n      sload\n        /* \"contracts/sis.sol\":6279:6285  excess */\n      dup4\n      swap3\n        /* \"contracts/sis.sol\":6254:6275  balances[participant] */\n      swap1\n        /* \"contracts/sis.sol\":6254:6285  balances[participant] -= excess */\n      tag_457\n      swap1\n        /* \"contracts/sis.sol\":6279:6285  excess */\n      dup5\n      swap1\n        /* \"contracts/sis.sol\":6254:6285  balances[participant] -= excess */\n      tag_201\n      jump\t// in\n    tag_457:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/sis.sol\":5710:6304  function _updateBalance(address participant, uint256 newBalance) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":748:807  function __Context_init() internal onlyInitializing {... */\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_461\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_464\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_461\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_464:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_467\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_469\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_461\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_472\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_264:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_478\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n    tag_478:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3082:3133   */\n      mstore\n        /* \"#utility.yul\":3055:3073   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      tag_181\n        /* \"#utility.yul\":2921:3139   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_483\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_484\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_483:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n    tag_487:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3100:3132   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":3082:3133   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3070:3072   */\n      0x20\n        /* \"#utility.yul\":3055:3073   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      tag_202\n        /* \"#utility.yul\":2921:3139   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_490\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_491\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_491:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_490:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sis.sol\":3492:3608  function _authorizeUpgrade(address newImplementation)... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_415\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_264\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_498\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_499\n      swap2\n      dup2\n      add\n      swap1\n      tag_240\n      jump\t// in\n    tag_499:\n      0x01\n    tag_498:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_501\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3100:3132   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3082:3133   */\n      mstore\n        /* \"#utility.yul\":3055:3073   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_181\n        /* \"#utility.yul\":2921:3139   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_501:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_507\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3290:3315   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3263:3281   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_181\n        /* \"#utility.yul\":3144:3321   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_507:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_509\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_510\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_509:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6204:6439  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/sis.sol\":7286:7672  function _verifySignature(address participant, uint256 newBalance, uint256 nonce, bytes calldata adminSignature) internal {... */\n    tag_288:\n        /* \"contracts/sis.sol\":7444:7492  abi.encodePacked(participant, newBalance, nonce) */\n      mload(0x40)\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":18181:18183   */\n      0x60\n        /* \"#utility.yul\":18177:18192   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":18173:18226   */\n      and\n        /* \"contracts/sis.sol\":7444:7492  abi.encodePacked(participant, newBalance, nonce) */\n      0x20\n      dup3\n      add\n        /* \"#utility.yul\":18161:18227   */\n      mstore\n        /* \"#utility.yul\":18243:18255   */\n      0x34\n      dup2\n      add\n        /* \"#utility.yul\":18236:18264   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":18280:18292   */\n      0x54\n      dup2\n      add\n        /* \"#utility.yul\":18273:18301   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/sis.sol\":7419:7431  bytes32 hash */\n      0x00\n      swap1\n        /* \"#utility.yul\":18317:18329   */\n      0x74\n      add\n        /* \"contracts/sis.sol\":7444:7492  abi.encodePacked(participant, newBalance, nonce) */\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/sis.sol\":7434:7493  keccak256(abi.encodePacked(participant, newBalance, nonce)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/sis.sol\":7419:7493  bytes32 hash = keccak256(abi.encodePacked(participant, newBalance, nonce)) */\n      swap1\n      pop\n        /* \"contracts/sis.sol\":7521:7549  hash.recover(adminSignature) */\n      tag_517\n        /* \"contracts/sis.sol\":7534:7548  adminSignature */\n      dup4\n      dup4\n        /* \"contracts/sis.sol\":7521:7549  hash.recover(adminSignature) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/sis.sol\":7521:7525  hash */\n      dup6\n      swap4\n        /* \"contracts/sis.sol\":7521:7549  hash.recover(adminSignature) */\n      swap3\n      pop\n      pop\n        /* \"contracts/sis.sol\":7521:7533  hash.recover */\n      tag_438\n        /* \"contracts/sis.sol\":7521:7549  hash.recover(adminSignature) */\n      swap1\n      pop\n      jump\t// in\n    tag_517:\n        /* \"contracts/sis.sol\":7512:7517  admin */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/sis.sol\":7512:7549  admin == hash.recover(adminSignature) */\n      swap2\n      and\n      eq\n        /* \"contracts/sis.sol\":7504:7571  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n      tag_518\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16941:16943   */\n      0x20\n        /* \"contracts/sis.sol\":7504:7571  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16923:16944   */\n      mstore\n        /* \"#utility.yul\":16980:16982   */\n      0x11\n        /* \"#utility.yul\":16960:16978   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16953:16983   */\n      mstore\n      shl(0x78, 0x496e76616c6964207369676e6174757265)\n        /* \"#utility.yul\":16999:17017   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16992:17039   */\n      mstore\n        /* \"#utility.yul\":17056:17074   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":7504:7571  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n      tag_181\n        /* \"#utility.yul\":16739:17080   */\n      jump\n        /* \"contracts/sis.sol\":7504:7571  require(admin == hash.recover(adminSignature), \"Invalid signature\") */\n    tag_518:\n        /* \"contracts/sis.sol\":7591:7607  usedNonces[hash] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":7591:7601  usedNonces */\n      0x03\n        /* \"contracts/sis.sol\":7591:7607  usedNonces[hash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/sis.sol\":7590:7607  !usedNonces[hash] */\n      iszero\n        /* \"contracts/sis.sol\":7582:7630  require(!usedNonces[hash], \"Nonce already used\") */\n      tag_520\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17287:17289   */\n      0x20\n        /* \"contracts/sis.sol\":7582:7630  require(!usedNonces[hash], \"Nonce already used\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17269:17290   */\n      mstore\n        /* \"#utility.yul\":17326:17328   */\n      0x12\n        /* \"#utility.yul\":17306:17324   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17299:17329   */\n      mstore\n      shl(0x72, 0x139bdb98d948185b1c9958591e481d5cd959)\n        /* \"#utility.yul\":17345:17363   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17338:17386   */\n      mstore\n        /* \"#utility.yul\":17403:17421   */\n      0x64\n      add\n        /* \"contracts/sis.sol\":7582:7630  require(!usedNonces[hash], \"Nonce already used\") */\n      tag_181\n        /* \"#utility.yul\":17085:17427   */\n      jump\n        /* \"contracts/sis.sol\":7582:7630  require(!usedNonces[hash], \"Nonce already used\") */\n    tag_520:\n        /* \"contracts/sis.sol\":7641:7657  usedNonces[hash] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/sis.sol\":7641:7651  usedNonces */\n      0x03\n        /* \"contracts/sis.sol\":7641:7657  usedNonces[hash] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/sis.sol\":7641:7664  usedNonces[hash] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/sis.sol\":7660:7664  true */\n      0x01\n        /* \"contracts/sis.sol\":7641:7664  usedNonces[hash] = true */\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/sis.sol\":7286:7672  function _verifySignature(address participant, uint256 newBalance, uint256 nonce, bytes calldata adminSignature) internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_321:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      dup2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      dup2\n      and\n      swap2\n      dup3\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      swap3\n      and\n      swap2\n      dup3\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_326:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_525\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_185\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_525:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_487\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3702:3957  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3780:3787  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3800:3817  address recovered */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3819:3837  RecoverError error */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3839:3855  bytes32 errorArg */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3859:3886  tryRecover(hash, signature) */\n      tag_532\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3870:3874  hash */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3876:3885  signature */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3859:3869  tryRecover */\n      tag_533\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3859:3886  tryRecover(hash, signature) */\n      jump\t// in\n    tag_532:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3799:3886  (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3896:3924  _throwError(error, errorArg) */\n      tag_534\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3908:3913  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3915:3923  errorArg */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3896:3907  _throwError */\n      tag_535\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3896:3924  _throwError(error, errorArg) */\n      jump\t// in\n    tag_534:\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3941:3950  recovered */\n      swap1\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":3702:3957  function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {... */\n    tag_531:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_461:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_467:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_541\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_461\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_541:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_472:\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_411\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_461\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_484:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_510:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_557\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_558\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_557:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_559\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_509\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_561\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_559:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_274\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_564\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n    tag_533:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2210:2217  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2219:2231  RecoverError */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2233:2240  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2256:2265  signature */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2256:2272  signature.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2276:2278  65 */\n      0x41\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2256:2278  signature.length == 65 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n      tag_566\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2592:2596  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2577:2597  add(signature, 0x20) */\n      dup5\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2571:2598  mload(add(signature, 0x20)) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2641:2645  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2626:2646  add(signature, 0x40) */\n      dup6\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2620:2647  mload(add(signature, 0x40)) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2698:2702  0x60 */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2683:2703  add(signature, 0x60) */\n      dup7\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2677:2704  mload(add(signature, 0x60)) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2294:2303  bytes32 r */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2669:2705  byte(0, mload(add(signature, 0x60))) */\n      byte\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      tag_567\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2750:2754  hash */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2669:2705  byte(0, mload(add(signature, 0x60))) */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2571:2598  mload(add(signature, 0x20)) */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2620:2647  mload(add(signature, 0x40)) */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2739:2749  tryRecover */\n      tag_568\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2739:2764  tryRecover(hash, v, r, s) */\n      jump\t// in\n    tag_567:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2732:2764  return tryRecover(hash, v, r, s) */\n      swap6\n      pop\n      swap6\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      jump(tag_569)\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n    tag_566:\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2860:2876  signature.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2811:2812  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2815:2850  RecoverError.InvalidSignatureLength */\n      0x02\n      swap1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2252:2889  if (signature.length == 65) {... */\n    tag_569:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":2129:2895  function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError, bytes32) {... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n    tag_535:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7291:7311  RecoverError.NoError */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7282:7287  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7282:7311  error == RecoverError.NoError */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_575\n      jumpi\n      tag_575\n      tag_573\n      jump\t// in\n    tag_575:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n      tag_576\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7196:7728  function _throwError(RecoverError error, bytes32 errorArg) private pure {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7278:7722  if (error == RecoverError.NoError) {... */\n    tag_576:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7387:7416  RecoverError.InvalidSignature */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7378:7383  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7378:7416  error == RecoverError.InvalidSignature */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_581\n      jumpi\n      tag_581\n      tag_573\n      jump\t// in\n    tag_581:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n      tag_582\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7439:7462  ECDSAInvalidSignature() */\n      mload(0x40)\n      shl(0xe0, 0xf645eedf)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7374:7722  if (error == RecoverError.InvalidSignature) {... */\n    tag_582:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7492:7527  RecoverError.InvalidSignatureLength */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7483:7488  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7483:7527  error == RecoverError.InvalidSignatureLength */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_587\n      jumpi\n      tag_587\n      tag_573\n      jump\t// in\n    tag_587:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n      tag_588\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      mload(0x40)\n      shl(0xe0, 0xfce698f7)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3290:3315   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3263:3281   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7550:7596  ECDSAInvalidSignatureLength(uint256(errorArg)) */\n      tag_181\n        /* \"#utility.yul\":3144:3321   */\n      jump\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7479:7722  if (error == RecoverError.InvalidSignatureLength) {... */\n    tag_588:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7626:7656  RecoverError.InvalidSignatureS */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7617:7622  error */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7617:7656  error == RecoverError.InvalidSignatureS */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_594\n      jumpi\n      tag_594\n      tag_573\n      jump\t// in\n    tag_594:\n      sub\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7613:7722  if (error == RecoverError.InvalidSignatureS) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      mload(0x40)\n      shl(0xe2, 0x35e2f383)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3290:3315   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3263:3281   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":7679:7711  ECDSAInvalidSignatureS(errorArg) */\n      tag_181\n        /* \"#utility.yul\":3144:3321   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_558:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_601\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3100:3132   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3082:3133   */\n      mstore\n        /* \"#utility.yul\":3055:3073   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_181\n        /* \"#utility.yul\":2921:3139   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_601:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_561:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_605\n      swap2\n      swap1\n      tag_606\n      jump\t// in\n    tag_605:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_609\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_608)\n    tag_609:\n      0x60\n      swap2\n      pop\n    tag_608:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_610\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_611\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_610:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_564:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_568:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5266:5273  address */\n      0x00\n      dup1\n      dup1\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6199:6265  0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      0x7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6186:6265  uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 */\n      dup5\n      gt\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n      iszero\n      tag_615\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6297:6298  0 */\n      0x00\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6301:6331  RecoverError.InvalidSignatureS */\n      0x03\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6333:6334  s */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6281:6335  return (address(0), RecoverError.InvalidSignatureS, s) */\n      jump(tag_614)\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6182:6346  if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {... */\n    tag_615:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x40\n      dup1\n      mload\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6440:6454  address signer */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      dup5\n      mstore\n        /* \"#utility.yul\":19005:19030   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":19078:19082   */\n      0xff\n        /* \"#utility.yul\":19066:19083   */\n      dup10\n      and\n        /* \"#utility.yul\":19046:19064   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":19039:19084   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":19100:19118   */\n      0x60\n      dup2\n      add\n        /* \"#utility.yul\":19093:19127   */\n      dup8\n      swap1\n      mstore\n        /* \"#utility.yul\":19143:19161   */\n      0x80\n      dup2\n      add\n        /* \"#utility.yul\":19136:19170   */\n      dup7\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x01\n      swap1\n        /* \"#utility.yul\":18977:18996   */\n      0xa0\n      add\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6457:6481  ecrecover(hash, v, r, s) */\n      0x20\n      mload(0x40)\n      0x20\n      dup2\n      sub\n      swap1\n      dup1\n      dup5\n      sub\n      swap1\n      dup6\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_619\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_619:\n      pop\n      pop\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6495:6515  signer == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n      tag_620\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      0x00\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6551:6580  RecoverError.InvalidSignature */\n      0x01\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6547:6548  0 */\n      dup3\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6531:6593  return (address(0), RecoverError.InvalidSignature, bytes32(0)) */\n      jump(tag_614)\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6491:6604  if (signer == address(0)) {... */\n    tag_620:\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6622:6628  signer */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":6630:6650  RecoverError.NoError */\n      0x00\n      swap2\n      pop\n      dup2\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":5140:6670  function tryRecover(... */\n    tag_614:\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_611:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_622\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_623\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_624\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_623:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_625)\n    tag_622:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_626\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_626:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_627\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3100:3132   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3082:3133   */\n      mstore\n        /* \"#utility.yul\":3055:3073   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_181\n        /* \"#utility.yul\":2921:3139   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_627:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_625:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_624:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_630\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_630:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:194   */\n    tag_42:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_640:\n      pop\n        /* \"#utility.yul\":165:188   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:194   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":199:566   */\n    tag_632:\n        /* \"#utility.yul\":262:270   */\n      0x00\n        /* \"#utility.yul\":272:278   */\n      dup1\n        /* \"#utility.yul\":326:329   */\n      dup4\n        /* \"#utility.yul\":319:323   */\n      0x1f\n        /* \"#utility.yul\":311:317   */\n      dup5\n        /* \"#utility.yul\":307:324   */\n      add\n        /* \"#utility.yul\":303:330   */\n      slt\n        /* \"#utility.yul\":293:348   */\n      tag_642\n      jumpi\n        /* \"#utility.yul\":344:345   */\n      0x00\n        /* \"#utility.yul\":341:342   */\n      dup1\n        /* \"#utility.yul\":334:346   */\n      revert\n        /* \"#utility.yul\":293:348   */\n    tag_642:\n      pop\n        /* \"#utility.yul\":367:387   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":410:428   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":399:429   */\n      dup2\n      gt\n        /* \"#utility.yul\":396:446   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":442:443   */\n      0x00\n        /* \"#utility.yul\":439:440   */\n      dup1\n        /* \"#utility.yul\":432:444   */\n      revert\n        /* \"#utility.yul\":396:446   */\n    tag_643:\n        /* \"#utility.yul\":479:483   */\n      0x20\n        /* \"#utility.yul\":471:477   */\n      dup4\n        /* \"#utility.yul\":467:484   */\n      add\n        /* \"#utility.yul\":455:484   */\n      swap2\n      pop\n        /* \"#utility.yul\":539:542   */\n      dup4\n        /* \"#utility.yul\":532:536   */\n      0x20\n        /* \"#utility.yul\":522:528   */\n      dup3\n        /* \"#utility.yul\":519:520   */\n      0x05\n        /* \"#utility.yul\":515:529   */\n      shl\n        /* \"#utility.yul\":507:513   */\n      dup6\n        /* \"#utility.yul\":503:530   */\n      add\n        /* \"#utility.yul\":499:537   */\n      add\n        /* \"#utility.yul\":496:543   */\n      gt\n        /* \"#utility.yul\":493:560   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":556:557   */\n      0x00\n        /* \"#utility.yul\":553:554   */\n      dup1\n        /* \"#utility.yul\":546:558   */\n      revert\n        /* \"#utility.yul\":493:560   */\n    tag_644:\n        /* \"#utility.yul\":199:566   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":571:918   */\n    tag_633:\n        /* \"#utility.yul\":622:630   */\n      0x00\n        /* \"#utility.yul\":632:638   */\n      dup1\n        /* \"#utility.yul\":686:689   */\n      dup4\n        /* \"#utility.yul\":679:683   */\n      0x1f\n        /* \"#utility.yul\":671:677   */\n      dup5\n        /* \"#utility.yul\":667:684   */\n      add\n        /* \"#utility.yul\":663:690   */\n      slt\n        /* \"#utility.yul\":653:708   */\n      tag_646\n      jumpi\n        /* \"#utility.yul\":704:705   */\n      0x00\n        /* \"#utility.yul\":701:702   */\n      dup1\n        /* \"#utility.yul\":694:706   */\n      revert\n        /* \"#utility.yul\":653:708   */\n    tag_646:\n      pop\n        /* \"#utility.yul\":727:747   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":770:788   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":759:789   */\n      dup2\n      gt\n        /* \"#utility.yul\":756:806   */\n      iszero\n      tag_647\n      jumpi\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":799:800   */\n      dup1\n        /* \"#utility.yul\":792:804   */\n      revert\n        /* \"#utility.yul\":756:806   */\n    tag_647:\n        /* \"#utility.yul\":839:843   */\n      0x20\n        /* \"#utility.yul\":831:837   */\n      dup4\n        /* \"#utility.yul\":827:844   */\n      add\n        /* \"#utility.yul\":815:844   */\n      swap2\n      pop\n        /* \"#utility.yul\":891:894   */\n      dup4\n        /* \"#utility.yul\":884:888   */\n      0x20\n        /* \"#utility.yul\":875:881   */\n      dup3\n        /* \"#utility.yul\":867:873   */\n      dup6\n        /* \"#utility.yul\":863:882   */\n      add\n        /* \"#utility.yul\":859:889   */\n      add\n        /* \"#utility.yul\":856:895   */\n      gt\n        /* \"#utility.yul\":853:912   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":908:909   */\n      0x00\n        /* \"#utility.yul\":905:906   */\n      dup1\n        /* \"#utility.yul\":898:910   */\n      revert\n        /* \"#utility.yul\":923:2052   */\n    tag_47:\n        /* \"#utility.yul\":1074:1080   */\n      0x00\n        /* \"#utility.yul\":1082:1088   */\n      dup1\n        /* \"#utility.yul\":1090:1096   */\n      0x00\n        /* \"#utility.yul\":1098:1104   */\n      dup1\n        /* \"#utility.yul\":1106:1112   */\n      0x00\n        /* \"#utility.yul\":1114:1120   */\n      dup1\n        /* \"#utility.yul\":1122:1128   */\n      0x00\n        /* \"#utility.yul\":1175:1178   */\n      0x80\n        /* \"#utility.yul\":1163:1172   */\n      dup9\n        /* \"#utility.yul\":1154:1161   */\n      dup11\n        /* \"#utility.yul\":1150:1173   */\n      sub\n        /* \"#utility.yul\":1146:1179   */\n      slt\n        /* \"#utility.yul\":1143:1196   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":1192:1193   */\n      0x00\n        /* \"#utility.yul\":1189:1190   */\n      dup1\n        /* \"#utility.yul\":1182:1194   */\n      revert\n        /* \"#utility.yul\":1143:1196   */\n    tag_650:\n        /* \"#utility.yul\":1232:1241   */\n      dup8\n        /* \"#utility.yul\":1219:1242   */\n      calldataload\n        /* \"#utility.yul\":1261:1279   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1302:1304   */\n      dup1\n        /* \"#utility.yul\":1294:1300   */\n      dup3\n        /* \"#utility.yul\":1291:1305   */\n      gt\n        /* \"#utility.yul\":1288:1322   */\n      iszero\n      tag_651\n      jumpi\n        /* \"#utility.yul\":1318:1319   */\n      0x00\n        /* \"#utility.yul\":1315:1316   */\n      dup1\n        /* \"#utility.yul\":1308:1320   */\n      revert\n        /* \"#utility.yul\":1288:1322   */\n    tag_651:\n        /* \"#utility.yul\":1357:1427   */\n      tag_652\n        /* \"#utility.yul\":1419:1426   */\n      dup12\n        /* \"#utility.yul\":1410:1416   */\n      dup4\n        /* \"#utility.yul\":1399:1408   */\n      dup13\n        /* \"#utility.yul\":1395:1417   */\n      add\n        /* \"#utility.yul\":1357:1427   */\n      tag_632\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":1446:1454   */\n      swap1\n      swap10\n      pop\n        /* \"#utility.yul\":1331:1427   */\n      swap8\n      pop\n        /* \"#utility.yul\":1534:1536   */\n      0x20\n        /* \"#utility.yul\":1519:1537   */\n      dup11\n      add\n        /* \"#utility.yul\":1506:1538   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1550:1566   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1547:1583   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":1579:1580   */\n      0x00\n        /* \"#utility.yul\":1576:1577   */\n      dup1\n        /* \"#utility.yul\":1569:1581   */\n      revert\n        /* \"#utility.yul\":1547:1583   */\n    tag_653:\n        /* \"#utility.yul\":1618:1690   */\n      tag_654\n        /* \"#utility.yul\":1682:1689   */\n      dup12\n        /* \"#utility.yul\":1671:1679   */\n      dup4\n        /* \"#utility.yul\":1660:1669   */\n      dup13\n        /* \"#utility.yul\":1656:1680   */\n      add\n        /* \"#utility.yul\":1618:1690   */\n      tag_632\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":1709:1717   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":1592:1690   */\n      swap6\n      pop\n        /* \"#utility.yul\":1791:1793   */\n      0x40\n        /* \"#utility.yul\":1776:1794   */\n      dup11\n      add\n        /* \"#utility.yul\":1763:1795   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1848:1850   */\n      0x60\n        /* \"#utility.yul\":1833:1851   */\n      dup11\n      add\n        /* \"#utility.yul\":1820:1852   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1864:1880   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":1861:1897   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":1893:1894   */\n      0x00\n        /* \"#utility.yul\":1890:1891   */\n      dup1\n        /* \"#utility.yul\":1883:1895   */\n      revert\n        /* \"#utility.yul\":1861:1897   */\n    tag_655:\n      pop\n        /* \"#utility.yul\":1932:1992   */\n      tag_656\n        /* \"#utility.yul\":1984:1991   */\n      dup11\n        /* \"#utility.yul\":1973:1981   */\n      dup3\n        /* \"#utility.yul\":1962:1971   */\n      dup12\n        /* \"#utility.yul\":1958:1982   */\n      add\n        /* \"#utility.yul\":1932:1992   */\n      tag_633\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":923:2052   */\n      swap9\n      swap12\n      swap8\n      swap11\n      pop\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      swap3\n      swap6\n        /* \"#utility.yul\":1906:1992   */\n      swap3\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":923:2052   */\n      jump\t// out\n        /* \"#utility.yul\":2057:2188   */\n    tag_634:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2132:2163   */\n      dup2\n      and\n        /* \"#utility.yul\":2122:2164   */\n      dup2\n      eq\n        /* \"#utility.yul\":2112:2182   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":2178:2179   */\n      0x00\n        /* \"#utility.yul\":2175:2176   */\n      dup1\n        /* \"#utility.yul\":2168:2180   */\n      revert\n        /* \"#utility.yul\":2193:2440   */\n    tag_52:\n        /* \"#utility.yul\":2252:2258   */\n      0x00\n        /* \"#utility.yul\":2305:2307   */\n      0x20\n        /* \"#utility.yul\":2293:2302   */\n      dup3\n        /* \"#utility.yul\":2284:2291   */\n      dup5\n        /* \"#utility.yul\":2280:2303   */\n      sub\n        /* \"#utility.yul\":2276:2308   */\n      slt\n        /* \"#utility.yul\":2273:2325   */\n      iszero\n      tag_660\n      jumpi\n        /* \"#utility.yul\":2321:2322   */\n      0x00\n        /* \"#utility.yul\":2318:2319   */\n      dup1\n        /* \"#utility.yul\":2311:2323   */\n      revert\n        /* \"#utility.yul\":2273:2325   */\n    tag_660:\n        /* \"#utility.yul\":2360:2369   */\n      dup2\n        /* \"#utility.yul\":2347:2370   */\n      calldataload\n        /* \"#utility.yul\":2379:2410   */\n      tag_625\n        /* \"#utility.yul\":2404:2409   */\n      dup2\n        /* \"#utility.yul\":2379:2410   */\n      tag_634\n      jump\t// in\n        /* \"#utility.yul\":2445:2916   */\n    tag_57:\n        /* \"#utility.yul\":2537:2543   */\n      0x00\n        /* \"#utility.yul\":2545:2551   */\n      dup1\n        /* \"#utility.yul\":2553:2559   */\n      0x00\n        /* \"#utility.yul\":2606:2608   */\n      0x60\n        /* \"#utility.yul\":2594:2603   */\n      dup5\n        /* \"#utility.yul\":2585:2592   */\n      dup7\n        /* \"#utility.yul\":2581:2604   */\n      sub\n        /* \"#utility.yul\":2577:2609   */\n      slt\n        /* \"#utility.yul\":2574:2626   */\n      iszero\n      tag_663\n      jumpi\n        /* \"#utility.yul\":2622:2623   */\n      0x00\n        /* \"#utility.yul\":2619:2620   */\n      dup1\n        /* \"#utility.yul\":2612:2624   */\n      revert\n        /* \"#utility.yul\":2574:2626   */\n    tag_663:\n        /* \"#utility.yul\":2661:2670   */\n      dup4\n        /* \"#utility.yul\":2648:2671   */\n      calldataload\n        /* \"#utility.yul\":2680:2711   */\n      tag_664\n        /* \"#utility.yul\":2705:2710   */\n      dup2\n        /* \"#utility.yul\":2680:2711   */\n      tag_634\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":2730:2735   */\n      swap3\n      pop\n        /* \"#utility.yul\":2787:2789   */\n      0x20\n        /* \"#utility.yul\":2772:2790   */\n      dup5\n      add\n        /* \"#utility.yul\":2759:2791   */\n      calldataload\n        /* \"#utility.yul\":2800:2833   */\n      tag_665\n        /* \"#utility.yul\":2759:2791   */\n      dup2\n        /* \"#utility.yul\":2800:2833   */\n      tag_634\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":2445:2916   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2852:2859   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2906:2908   */\n      0x40\n        /* \"#utility.yul\":2891:2909   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2878:2910   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2445:2916   */\n      jump\t// out\n        /* \"#utility.yul\":3326:3453   */\n    tag_635:\n        /* \"#utility.yul\":3387:3397   */\n      0x4e487b71\n        /* \"#utility.yul\":3382:3385   */\n      0xe0\n        /* \"#utility.yul\":3378:3398   */\n      shl\n        /* \"#utility.yul\":3375:3376   */\n      0x00\n        /* \"#utility.yul\":3368:3399   */\n      mstore\n        /* \"#utility.yul\":3418:3422   */\n      0x41\n        /* \"#utility.yul\":3415:3416   */\n      0x04\n        /* \"#utility.yul\":3408:3423   */\n      mstore\n        /* \"#utility.yul\":3442:3446   */\n      0x24\n        /* \"#utility.yul\":3439:3440   */\n      0x00\n        /* \"#utility.yul\":3432:3447   */\n      revert\n        /* \"#utility.yul\":3458:4514   */\n    tag_75:\n        /* \"#utility.yul\":3535:3541   */\n      0x00\n        /* \"#utility.yul\":3543:3549   */\n      dup1\n        /* \"#utility.yul\":3596:3598   */\n      0x40\n        /* \"#utility.yul\":3584:3593   */\n      dup4\n        /* \"#utility.yul\":3575:3582   */\n      dup6\n        /* \"#utility.yul\":3571:3594   */\n      sub\n        /* \"#utility.yul\":3567:3599   */\n      slt\n        /* \"#utility.yul\":3564:3616   */\n      iszero\n      tag_670\n      jumpi\n        /* \"#utility.yul\":3612:3613   */\n      0x00\n        /* \"#utility.yul\":3609:3610   */\n      dup1\n        /* \"#utility.yul\":3602:3614   */\n      revert\n        /* \"#utility.yul\":3564:3616   */\n    tag_670:\n        /* \"#utility.yul\":3651:3660   */\n      dup3\n        /* \"#utility.yul\":3638:3661   */\n      calldataload\n        /* \"#utility.yul\":3670:3701   */\n      tag_671\n        /* \"#utility.yul\":3695:3700   */\n      dup2\n        /* \"#utility.yul\":3670:3701   */\n      tag_634\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":3720:3725   */\n      swap2\n      pop\n        /* \"#utility.yul\":3776:3778   */\n      0x20\n        /* \"#utility.yul\":3761:3779   */\n      dup4\n      add\n        /* \"#utility.yul\":3748:3780   */\n      calldataload\n        /* \"#utility.yul\":3799:3817   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3829:3843   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3826:3860   */\n      iszero\n      tag_672\n      jumpi\n        /* \"#utility.yul\":3856:3857   */\n      0x00\n        /* \"#utility.yul\":3853:3854   */\n      dup1\n        /* \"#utility.yul\":3846:3858   */\n      revert\n        /* \"#utility.yul\":3826:3860   */\n    tag_672:\n        /* \"#utility.yul\":3894:3900   */\n      dup2\n        /* \"#utility.yul\":3883:3892   */\n      dup6\n        /* \"#utility.yul\":3879:3901   */\n      add\n        /* \"#utility.yul\":3869:3901   */\n      swap2\n      pop\n        /* \"#utility.yul\":3939:3946   */\n      dup6\n        /* \"#utility.yul\":3932:3936   */\n      0x1f\n        /* \"#utility.yul\":3928:3930   */\n      dup4\n        /* \"#utility.yul\":3924:3937   */\n      add\n        /* \"#utility.yul\":3920:3947   */\n      slt\n        /* \"#utility.yul\":3910:3965   */\n      tag_673\n      jumpi\n        /* \"#utility.yul\":3961:3962   */\n      0x00\n        /* \"#utility.yul\":3958:3959   */\n      dup1\n        /* \"#utility.yul\":3951:3963   */\n      revert\n        /* \"#utility.yul\":3910:3965   */\n    tag_673:\n        /* \"#utility.yul\":3997:3999   */\n      dup2\n        /* \"#utility.yul\":3984:4000   */\n      calldataload\n        /* \"#utility.yul\":4019:4021   */\n      dup2\n        /* \"#utility.yul\":4015:4017   */\n      dup2\n        /* \"#utility.yul\":4012:4022   */\n      gt\n        /* \"#utility.yul\":4009:4045   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":4025:4043   */\n      tag_675\n      tag_635\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":4100:4102   */\n      0x40\n        /* \"#utility.yul\":4094:4103   */\n      mload\n        /* \"#utility.yul\":4068:4070   */\n      0x1f\n        /* \"#utility.yul\":4154:4167   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4150:4172   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4174:4176   */\n      0x3f\n        /* \"#utility.yul\":4146:4177   */\n      add\n        /* \"#utility.yul\":4142:4182   */\n      and\n        /* \"#utility.yul\":4130:4183   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4198:4216   */\n      dup4\n      dup3\n      gt\n        /* \"#utility.yul\":4218:4240   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":4195:4241   */\n      or\n        /* \"#utility.yul\":4192:4264   */\n      iszero\n      tag_677\n      jumpi\n        /* \"#utility.yul\":4244:4262   */\n      tag_677\n      tag_635\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":4284:4294   */\n      dup2\n        /* \"#utility.yul\":4280:4282   */\n      0x40\n        /* \"#utility.yul\":4273:4295   */\n      mstore\n        /* \"#utility.yul\":4319:4321   */\n      dup3\n        /* \"#utility.yul\":4311:4317   */\n      dup2\n        /* \"#utility.yul\":4304:4322   */\n      mstore\n        /* \"#utility.yul\":4359:4366   */\n      dup9\n        /* \"#utility.yul\":4354:4356   */\n      0x20\n        /* \"#utility.yul\":4349:4351   */\n      dup5\n        /* \"#utility.yul\":4345:4347   */\n      dup8\n        /* \"#utility.yul\":4341:4352   */\n      add\n        /* \"#utility.yul\":4337:4357   */\n      add\n        /* \"#utility.yul\":4334:4367   */\n      gt\n        /* \"#utility.yul\":4331:4384   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":4380:4381   */\n      0x00\n        /* \"#utility.yul\":4377:4378   */\n      dup1\n        /* \"#utility.yul\":4370:4382   */\n      revert\n        /* \"#utility.yul\":4331:4384   */\n    tag_678:\n        /* \"#utility.yul\":4436:4438   */\n      dup3\n        /* \"#utility.yul\":4431:4433   */\n      0x20\n        /* \"#utility.yul\":4427:4429   */\n      dup7\n        /* \"#utility.yul\":4423:4434   */\n      add\n        /* \"#utility.yul\":4418:4420   */\n      0x20\n        /* \"#utility.yul\":4410:4416   */\n      dup4\n        /* \"#utility.yul\":4406:4421   */\n      add\n        /* \"#utility.yul\":4393:4439   */\n      calldatacopy\n        /* \"#utility.yul\":4481:4482   */\n      0x00\n        /* \"#utility.yul\":4476:4478   */\n      0x20\n        /* \"#utility.yul\":4471:4473   */\n      dup5\n        /* \"#utility.yul\":4463:4469   */\n      dup4\n        /* \"#utility.yul\":4459:4474   */\n      add\n        /* \"#utility.yul\":4455:4479   */\n      add\n        /* \"#utility.yul\":4448:4483   */\n      mstore\n        /* \"#utility.yul\":4502:4508   */\n      dup1\n        /* \"#utility.yul\":4492:4508   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3458:4514   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4893:5438   */\n    tag_95:\n        /* \"#utility.yul\":4981:4987   */\n      0x00\n        /* \"#utility.yul\":4989:4995   */\n      dup1\n        /* \"#utility.yul\":4997:5003   */\n      0x00\n        /* \"#utility.yul\":5005:5011   */\n      dup1\n        /* \"#utility.yul\":5058:5060   */\n      0x60\n        /* \"#utility.yul\":5046:5055   */\n      dup6\n        /* \"#utility.yul\":5037:5044   */\n      dup8\n        /* \"#utility.yul\":5033:5056   */\n      sub\n        /* \"#utility.yul\":5029:5061   */\n      slt\n        /* \"#utility.yul\":5026:5078   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":5074:5075   */\n      0x00\n        /* \"#utility.yul\":5071:5072   */\n      dup1\n        /* \"#utility.yul\":5064:5076   */\n      revert\n        /* \"#utility.yul\":5026:5078   */\n    tag_682:\n        /* \"#utility.yul\":5110:5119   */\n      dup5\n        /* \"#utility.yul\":5097:5120   */\n      calldataload\n        /* \"#utility.yul\":5087:5120   */\n      swap4\n      pop\n        /* \"#utility.yul\":5167:5169   */\n      0x20\n        /* \"#utility.yul\":5156:5165   */\n      dup6\n        /* \"#utility.yul\":5152:5170   */\n      add\n        /* \"#utility.yul\":5139:5171   */\n      calldataload\n        /* \"#utility.yul\":5129:5171   */\n      swap3\n      pop\n        /* \"#utility.yul\":5222:5224   */\n      0x40\n        /* \"#utility.yul\":5211:5220   */\n      dup6\n        /* \"#utility.yul\":5207:5225   */\n      add\n        /* \"#utility.yul\":5194:5226   */\n      calldataload\n        /* \"#utility.yul\":5249:5267   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5241:5247   */\n      dup2\n        /* \"#utility.yul\":5238:5268   */\n      gt\n        /* \"#utility.yul\":5235:5285   */\n      iszero\n      tag_683\n      jumpi\n        /* \"#utility.yul\":5281:5282   */\n      0x00\n        /* \"#utility.yul\":5278:5279   */\n      dup1\n        /* \"#utility.yul\":5271:5283   */\n      revert\n        /* \"#utility.yul\":5235:5285   */\n    tag_683:\n        /* \"#utility.yul\":5320:5378   */\n      tag_684\n        /* \"#utility.yul\":5370:5377   */\n      dup8\n        /* \"#utility.yul\":5361:5367   */\n      dup3\n        /* \"#utility.yul\":5350:5359   */\n      dup9\n        /* \"#utility.yul\":5346:5368   */\n      add\n        /* \"#utility.yul\":5320:5378   */\n      tag_633\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":4893:5438   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n        /* \"#utility.yul\":5397:5405   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4893:5438   */\n      jump\t// out\n        /* \"#utility.yul\":5443:5826   */\n    tag_100:\n        /* \"#utility.yul\":5520:5526   */\n      0x00\n        /* \"#utility.yul\":5528:5534   */\n      dup1\n        /* \"#utility.yul\":5536:5542   */\n      0x00\n        /* \"#utility.yul\":5589:5591   */\n      0x60\n        /* \"#utility.yul\":5577:5586   */\n      dup5\n        /* \"#utility.yul\":5568:5575   */\n      dup7\n        /* \"#utility.yul\":5564:5587   */\n      sub\n        /* \"#utility.yul\":5560:5592   */\n      slt\n        /* \"#utility.yul\":5557:5609   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":5605:5606   */\n      0x00\n        /* \"#utility.yul\":5602:5603   */\n      dup1\n        /* \"#utility.yul\":5595:5607   */\n      revert\n        /* \"#utility.yul\":5557:5609   */\n    tag_686:\n        /* \"#utility.yul\":5644:5653   */\n      dup4\n        /* \"#utility.yul\":5631:5654   */\n      calldataload\n        /* \"#utility.yul\":5663:5694   */\n      tag_687\n        /* \"#utility.yul\":5688:5693   */\n      dup2\n        /* \"#utility.yul\":5663:5694   */\n      tag_634\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":5713:5718   */\n      swap6\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"#utility.yul\":5750:5768   */\n      dup6\n      add\n        /* \"#utility.yul\":5737:5769   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5816:5818   */\n      0x40\n        /* \"#utility.yul\":5801:5819   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5788:5820   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":5443:5826   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6039:6457   */\n    tag_125:\n        /* \"#utility.yul\":6188:6190   */\n      0x20\n        /* \"#utility.yul\":6177:6186   */\n      dup2\n        /* \"#utility.yul\":6170:6191   */\n      mstore\n        /* \"#utility.yul\":6151:6155   */\n      0x00\n        /* \"#utility.yul\":6220:6226   */\n      dup3\n        /* \"#utility.yul\":6214:6227   */\n      mload\n        /* \"#utility.yul\":6263:6269   */\n      dup1\n        /* \"#utility.yul\":6258:6260   */\n      0x20\n        /* \"#utility.yul\":6247:6256   */\n      dup5\n        /* \"#utility.yul\":6243:6261   */\n      add\n        /* \"#utility.yul\":6236:6270   */\n      mstore\n        /* \"#utility.yul\":6322:6328   */\n      dup1\n        /* \"#utility.yul\":6317:6319   */\n      0x20\n        /* \"#utility.yul\":6309:6315   */\n      dup6\n        /* \"#utility.yul\":6305:6320   */\n      add\n        /* \"#utility.yul\":6300:6302   */\n      0x40\n        /* \"#utility.yul\":6289:6298   */\n      dup6\n        /* \"#utility.yul\":6285:6303   */\n      add\n        /* \"#utility.yul\":6279:6329   */\n      mcopy\n        /* \"#utility.yul\":6378:6379   */\n      0x00\n        /* \"#utility.yul\":6373:6375   */\n      0x40\n        /* \"#utility.yul\":6364:6370   */\n      dup3\n        /* \"#utility.yul\":6353:6362   */\n      dup6\n        /* \"#utility.yul\":6349:6371   */\n      add\n        /* \"#utility.yul\":6345:6376   */\n      add\n        /* \"#utility.yul\":6338:6380   */\n      mstore\n        /* \"#utility.yul\":6448:6450   */\n      0x40\n        /* \"#utility.yul\":6441:6443   */\n      0x1f\n        /* \"#utility.yul\":6437:6444   */\n      not\n        /* \"#utility.yul\":6432:6434   */\n      0x1f\n        /* \"#utility.yul\":6424:6430   */\n      dup4\n        /* \"#utility.yul\":6420:6435   */\n      add\n        /* \"#utility.yul\":6416:6445   */\n      and\n        /* \"#utility.yul\":6405:6414   */\n      dup5\n        /* \"#utility.yul\":6401:6446   */\n      add\n        /* \"#utility.yul\":6397:6451   */\n      add\n        /* \"#utility.yul\":6389:6451   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6039:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6462:7235   */\n    tag_138:\n        /* \"#utility.yul\":6584:6590   */\n      0x00\n        /* \"#utility.yul\":6592:6598   */\n      dup1\n        /* \"#utility.yul\":6600:6606   */\n      0x00\n        /* \"#utility.yul\":6608:6614   */\n      dup1\n        /* \"#utility.yul\":6661:6663   */\n      0x40\n        /* \"#utility.yul\":6649:6658   */\n      dup6\n        /* \"#utility.yul\":6640:6647   */\n      dup8\n        /* \"#utility.yul\":6636:6659   */\n      sub\n        /* \"#utility.yul\":6632:6664   */\n      slt\n        /* \"#utility.yul\":6629:6681   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":6677:6678   */\n      0x00\n        /* \"#utility.yul\":6674:6675   */\n      dup1\n        /* \"#utility.yul\":6667:6679   */\n      revert\n        /* \"#utility.yul\":6629:6681   */\n    tag_691:\n        /* \"#utility.yul\":6717:6726   */\n      dup5\n        /* \"#utility.yul\":6704:6727   */\n      calldataload\n        /* \"#utility.yul\":6746:6764   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6787:6789   */\n      dup1\n        /* \"#utility.yul\":6779:6785   */\n      dup3\n        /* \"#utility.yul\":6776:6790   */\n      gt\n        /* \"#utility.yul\":6773:6807   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":6803:6804   */\n      0x00\n        /* \"#utility.yul\":6800:6801   */\n      dup1\n        /* \"#utility.yul\":6793:6805   */\n      revert\n        /* \"#utility.yul\":6773:6807   */\n    tag_692:\n        /* \"#utility.yul\":6842:6912   */\n      tag_693\n        /* \"#utility.yul\":6904:6911   */\n      dup9\n        /* \"#utility.yul\":6895:6901   */\n      dup4\n        /* \"#utility.yul\":6884:6893   */\n      dup10\n        /* \"#utility.yul\":6880:6902   */\n      add\n        /* \"#utility.yul\":6842:6912   */\n      tag_632\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":6931:6939   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":6816:6912   */\n      swap5\n      pop\n        /* \"#utility.yul\":7019:7021   */\n      0x20\n        /* \"#utility.yul\":7004:7022   */\n      dup8\n      add\n        /* \"#utility.yul\":6991:7023   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7035:7051   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":7032:7068   */\n      iszero\n      tag_694\n      jumpi\n        /* \"#utility.yul\":7064:7065   */\n      0x00\n        /* \"#utility.yul\":7061:7062   */\n      dup1\n        /* \"#utility.yul\":7054:7066   */\n      revert\n        /* \"#utility.yul\":7032:7068   */\n    tag_694:\n      pop\n        /* \"#utility.yul\":7103:7175   */\n      tag_684\n        /* \"#utility.yul\":7167:7174   */\n      dup8\n        /* \"#utility.yul\":7156:7164   */\n      dup3\n        /* \"#utility.yul\":7145:7154   */\n      dup9\n        /* \"#utility.yul\":7141:7165   */\n      add\n        /* \"#utility.yul\":7103:7175   */\n      tag_632\n      jump\t// in\n        /* \"#utility.yul\":7240:7358   */\n    tag_636:\n        /* \"#utility.yul\":7326:7331   */\n      dup1\n        /* \"#utility.yul\":7319:7332   */\n      iszero\n        /* \"#utility.yul\":7312:7333   */\n      iszero\n        /* \"#utility.yul\":7305:7310   */\n      dup2\n        /* \"#utility.yul\":7302:7334   */\n      eq\n        /* \"#utility.yul\":7292:7352   */\n      tag_415\n      jumpi\n        /* \"#utility.yul\":7348:7349   */\n      0x00\n        /* \"#utility.yul\":7345:7346   */\n      dup1\n        /* \"#utility.yul\":7338:7350   */\n      revert\n        /* \"#utility.yul\":7363:7672   */\n    tag_143:\n        /* \"#utility.yul\":7428:7434   */\n      0x00\n        /* \"#utility.yul\":7436:7442   */\n      dup1\n        /* \"#utility.yul\":7489:7491   */\n      0x40\n        /* \"#utility.yul\":7477:7486   */\n      dup4\n        /* \"#utility.yul\":7468:7475   */\n      dup6\n        /* \"#utility.yul\":7464:7487   */\n      sub\n        /* \"#utility.yul\":7460:7492   */\n      slt\n        /* \"#utility.yul\":7457:7509   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":7505:7506   */\n      0x00\n        /* \"#utility.yul\":7502:7503   */\n      dup1\n        /* \"#utility.yul\":7495:7507   */\n      revert\n        /* \"#utility.yul\":7457:7509   */\n    tag_699:\n        /* \"#utility.yul\":7541:7550   */\n      dup3\n        /* \"#utility.yul\":7528:7551   */\n      calldataload\n        /* \"#utility.yul\":7518:7551   */\n      swap2\n      pop\n        /* \"#utility.yul\":7601:7603   */\n      0x20\n        /* \"#utility.yul\":7590:7599   */\n      dup4\n        /* \"#utility.yul\":7586:7604   */\n      add\n        /* \"#utility.yul\":7573:7605   */\n      calldataload\n        /* \"#utility.yul\":7614:7642   */\n      tag_700\n        /* \"#utility.yul\":7636:7641   */\n      dup2\n        /* \"#utility.yul\":7614:7642   */\n      tag_636\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":7661:7666   */\n      dup1\n        /* \"#utility.yul\":7651:7666   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7363:7672   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7677:7992   */\n    tag_148:\n        /* \"#utility.yul\":7745:7751   */\n      0x00\n        /* \"#utility.yul\":7753:7759   */\n      dup1\n        /* \"#utility.yul\":7806:7808   */\n      0x40\n        /* \"#utility.yul\":7794:7803   */\n      dup4\n        /* \"#utility.yul\":7785:7792   */\n      dup6\n        /* \"#utility.yul\":7781:7804   */\n      sub\n        /* \"#utility.yul\":7777:7809   */\n      slt\n        /* \"#utility.yul\":7774:7826   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":7822:7823   */\n      0x00\n        /* \"#utility.yul\":7819:7820   */\n      dup1\n        /* \"#utility.yul\":7812:7824   */\n      revert\n        /* \"#utility.yul\":7774:7826   */\n    tag_702:\n        /* \"#utility.yul\":7858:7867   */\n      dup3\n        /* \"#utility.yul\":7845:7868   */\n      calldataload\n        /* \"#utility.yul\":7835:7868   */\n      swap2\n      pop\n        /* \"#utility.yul\":7918:7920   */\n      0x20\n        /* \"#utility.yul\":7907:7916   */\n      dup4\n        /* \"#utility.yul\":7903:7921   */\n      add\n        /* \"#utility.yul\":7890:7922   */\n      calldataload\n        /* \"#utility.yul\":7931:7962   */\n      tag_700\n        /* \"#utility.yul\":7956:7961   */\n      dup2\n        /* \"#utility.yul\":7931:7962   */\n      tag_634\n      jump\t// in\n        /* \"#utility.yul\":8182:8580   */\n    tag_182:\n        /* \"#utility.yul\":8384:8386   */\n      0x20\n        /* \"#utility.yul\":8366:8387   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8423:8425   */\n      0x22\n        /* \"#utility.yul\":8403:8421   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8396:8426   */\n      mstore\n        /* \"#utility.yul\":8462:8496   */\n      0x4f6e6c792061646d696e2063616e20706572666f726d20746869732061637469\n        /* \"#utility.yul\":8457:8459   */\n      0x40\n        /* \"#utility.yul\":8442:8460   */\n      dup3\n      add\n        /* \"#utility.yul\":8435:8497   */\n      mstore\n      shl(0xf1, 0x37b7)\n        /* \"#utility.yul\":8528:8530   */\n      0x60\n        /* \"#utility.yul\":8513:8531   */\n      dup3\n      add\n        /* \"#utility.yul\":8506:8538   */\n      mstore\n        /* \"#utility.yul\":8570:8573   */\n      0x80\n        /* \"#utility.yul\":8555:8574   */\n      add\n      swap1\n        /* \"#utility.yul\":8182:8580   */\n      jump\t// out\n        /* \"#utility.yul\":9221:9466   */\n    tag_196:\n        /* \"#utility.yul\":9288:9294   */\n      0x00\n        /* \"#utility.yul\":9341:9343   */\n      0x20\n        /* \"#utility.yul\":9329:9338   */\n      dup3\n        /* \"#utility.yul\":9320:9327   */\n      dup5\n        /* \"#utility.yul\":9316:9339   */\n      sub\n        /* \"#utility.yul\":9312:9344   */\n      slt\n        /* \"#utility.yul\":9309:9361   */\n      iszero\n      tag_710\n      jumpi\n        /* \"#utility.yul\":9357:9358   */\n      0x00\n        /* \"#utility.yul\":9354:9355   */\n      dup1\n        /* \"#utility.yul\":9347:9359   */\n      revert\n        /* \"#utility.yul\":9309:9361   */\n    tag_710:\n        /* \"#utility.yul\":9389:9398   */\n      dup2\n        /* \"#utility.yul\":9383:9399   */\n      mload\n        /* \"#utility.yul\":9408:9436   */\n      tag_625\n        /* \"#utility.yul\":9430:9435   */\n      dup2\n        /* \"#utility.yul\":9408:9436   */\n      tag_636\n      jump\t// in\n        /* \"#utility.yul\":9471:9810   */\n    tag_199:\n        /* \"#utility.yul\":9673:9675   */\n      0x20\n        /* \"#utility.yul\":9655:9676   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9712:9714   */\n      0x0f\n        /* \"#utility.yul\":9692:9710   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9685:9715   */\n      mstore\n      shl(0x8a, 0x151c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":9746:9748   */\n      0x40\n        /* \"#utility.yul\":9731:9749   */\n      dup3\n      add\n        /* \"#utility.yul\":9724:9769   */\n      mstore\n        /* \"#utility.yul\":9801:9803   */\n      0x60\n        /* \"#utility.yul\":9786:9804   */\n      add\n      swap1\n        /* \"#utility.yul\":9471:9810   */\n      jump\t// out\n        /* \"#utility.yul\":9815:9942   */\n    tag_637:\n        /* \"#utility.yul\":9876:9886   */\n      0x4e487b71\n        /* \"#utility.yul\":9871:9874   */\n      0xe0\n        /* \"#utility.yul\":9867:9887   */\n      shl\n        /* \"#utility.yul\":9864:9865   */\n      0x00\n        /* \"#utility.yul\":9857:9888   */\n      mstore\n        /* \"#utility.yul\":9907:9911   */\n      0x11\n        /* \"#utility.yul\":9904:9905   */\n      0x04\n        /* \"#utility.yul\":9897:9912   */\n      mstore\n        /* \"#utility.yul\":9931:9935   */\n      0x24\n        /* \"#utility.yul\":9928:9929   */\n      0x00\n        /* \"#utility.yul\":9921:9936   */\n      revert\n        /* \"#utility.yul\":9947:10075   */\n    tag_201:\n        /* \"#utility.yul\":10014:10023   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":10035:10046   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":10032:10069   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":10049:10067   */\n      tag_531\n      tag_637\n      jump\t// in\n        /* \"#utility.yul\":10495:10622   */\n    tag_217:\n        /* \"#utility.yul\":10556:10566   */\n      0x4e487b71\n        /* \"#utility.yul\":10551:10554   */\n      0xe0\n        /* \"#utility.yul\":10547:10567   */\n      shl\n        /* \"#utility.yul\":10544:10545   */\n      0x00\n        /* \"#utility.yul\":10537:10568   */\n      mstore\n        /* \"#utility.yul\":10587:10591   */\n      0x32\n        /* \"#utility.yul\":10584:10585   */\n      0x04\n        /* \"#utility.yul\":10577:10592   */\n      mstore\n        /* \"#utility.yul\":10611:10615   */\n      0x24\n        /* \"#utility.yul\":10608:10609   */\n      0x00\n        /* \"#utility.yul\":10601:10616   */\n      revert\n        /* \"#utility.yul\":10627:11686   */\n    tag_223:\n        /* \"#utility.yul\":10915:10917   */\n      0x40\n        /* \"#utility.yul\":10927:10948   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10900:10918   */\n      dup2\n      add\n        /* \"#utility.yul\":10983:11005   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":10867:10871   */\n      0x00\n        /* \"#utility.yul\":11062:11068   */\n      dup6\n        /* \"#utility.yul\":11036:11038   */\n      0x60\n        /* \"#utility.yul\":11021:11039   */\n      dup4\n      add\n        /* \"#utility.yul\":10867:10871   */\n      dup3\n        /* \"#utility.yul\":11096:11400   */\n    tag_720:\n        /* \"#utility.yul\":11110:11116   */\n      dup8\n        /* \"#utility.yul\":11107:11108   */\n      dup2\n        /* \"#utility.yul\":11104:11117   */\n      lt\n        /* \"#utility.yul\":11096:11400   */\n      iszero\n      tag_722\n      jumpi\n        /* \"#utility.yul\":11185:11191   */\n      dup3\n        /* \"#utility.yul\":11172:11192   */\n      calldataload\n        /* \"#utility.yul\":11205:11236   */\n      tag_723\n        /* \"#utility.yul\":11230:11235   */\n      dup2\n        /* \"#utility.yul\":11205:11236   */\n      tag_634\n      jump\t// in\n    tag_723:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11261:11292   */\n      and\n        /* \"#utility.yul\":11249:11293   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11316:11320   */\n      0x20\n        /* \"#utility.yul\":11375:11390   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":11340:11352   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":11289:11290   */\n      0x01\n        /* \"#utility.yul\":11125:11134   */\n      add\n        /* \"#utility.yul\":11096:11400   */\n      jump(tag_720)\n    tag_722:\n      pop\n        /* \"#utility.yul\":11438:11457   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":11431:11435   */\n      0x20\n        /* \"#utility.yul\":11416:11436   */\n      dup6\n      add\n        /* \"#utility.yul\":11409:11458   */\n      mstore\n        /* \"#utility.yul\":11467:11486   */\n      dup5\n      dup2\n      mstore\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":11498:11529   */\n      dup6\n      gt\n        /* \"#utility.yul\":11495:11546   */\n      iszero\n      tag_724\n      jumpi\n        /* \"#utility.yul\":11542:11543   */\n      0x00\n        /* \"#utility.yul\":11539:11540   */\n      dup1\n        /* \"#utility.yul\":11532:11544   */\n      revert\n        /* \"#utility.yul\":11495:11546   */\n    tag_724:\n        /* \"#utility.yul\":11576:11582   */\n      dup5\n        /* \"#utility.yul\":11573:11574   */\n      0x05\n        /* \"#utility.yul\":11569:11583   */\n      shl\n        /* \"#utility.yul\":11555:11583   */\n      swap2\n      pop\n        /* \"#utility.yul\":11629:11635   */\n      dup2\n        /* \"#utility.yul\":11621:11627   */\n      dup7\n        /* \"#utility.yul\":11614:11618   */\n      0x20\n        /* \"#utility.yul\":11609:11612   */\n      dup4\n        /* \"#utility.yul\":11605:11619   */\n      add\n        /* \"#utility.yul\":11592:11636   */\n      calldatacopy\n        /* \"#utility.yul\":11657:11673   */\n      add\n        /* \"#utility.yul\":11675:11679   */\n      0x20\n        /* \"#utility.yul\":11653:11680   */\n      add\n      swap7\n        /* \"#utility.yul\":10627:11686   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12041:12176   */\n    tag_235:\n        /* \"#utility.yul\":12080:12083   */\n      0x00\n        /* \"#utility.yul\":12101:12118   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":12098:12141   */\n      tag_728\n      jumpi\n        /* \"#utility.yul\":12121:12139   */\n      tag_728\n      tag_637\n      jump\t// in\n    tag_728:\n      pop\n        /* \"#utility.yul\":12168:12169   */\n      0x01\n        /* \"#utility.yul\":12157:12170   */\n      add\n      swap1\n        /* \"#utility.yul\":12041:12176   */\n      jump\t// out\n        /* \"#utility.yul\":12181:12365   */\n    tag_240:\n        /* \"#utility.yul\":12251:12257   */\n      0x00\n        /* \"#utility.yul\":12304:12306   */\n      0x20\n        /* \"#utility.yul\":12292:12301   */\n      dup3\n        /* \"#utility.yul\":12283:12290   */\n      dup5\n        /* \"#utility.yul\":12279:12302   */\n      sub\n        /* \"#utility.yul\":12275:12307   */\n      slt\n        /* \"#utility.yul\":12272:12324   */\n      iszero\n      tag_730\n      jumpi\n        /* \"#utility.yul\":12320:12321   */\n      0x00\n        /* \"#utility.yul\":12317:12318   */\n      dup1\n        /* \"#utility.yul\":12310:12322   */\n      revert\n        /* \"#utility.yul\":12272:12324   */\n    tag_730:\n      pop\n        /* \"#utility.yul\":12343:12359   */\n      mload\n      swap2\n        /* \"#utility.yul\":12181:12365   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12584:12752   */\n    tag_301:\n        /* \"#utility.yul\":12657:12666   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":12688:12697   */\n      dup2\n      iszero\n        /* \"#utility.yul\":12705:12720   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":12699:12721   */\n      dup5\n      eq\n        /* \"#utility.yul\":12685:12722   */\n      or\n        /* \"#utility.yul\":12675:12746   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":12726:12744   */\n      tag_531\n      tag_637\n      jump\t// in\n        /* \"#utility.yul\":14604:14729   */\n    tag_354:\n        /* \"#utility.yul\":14669:14678   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14690:14700   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14687:14723   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":14703:14721   */\n      tag_531\n      tag_637\n      jump\t// in\n        /* \"#utility.yul\":15776:16734   */\n    tag_436:\n        /* \"#utility.yul\":16063:16066   */\n      0x00\n        /* \"#utility.yul\":16094:16097   */\n      dup2\n        /* \"#utility.yul\":16141:16147   */\n      dup8\n        /* \"#utility.yul\":16063:16066   */\n      dup3\n        /* \"#utility.yul\":16175:16485   */\n    tag_747:\n        /* \"#utility.yul\":16189:16195   */\n      dup9\n        /* \"#utility.yul\":16186:16187   */\n      dup2\n        /* \"#utility.yul\":16183:16196   */\n      lt\n        /* \"#utility.yul\":16175:16485   */\n      iszero\n      tag_749\n      jumpi\n        /* \"#utility.yul\":16264:16270   */\n      dup2\n        /* \"#utility.yul\":16251:16271   */\n      calldataload\n        /* \"#utility.yul\":16284:16315   */\n      tag_750\n        /* \"#utility.yul\":16309:16314   */\n      dup2\n        /* \"#utility.yul\":16284:16315   */\n      tag_634\n      jump\t// in\n    tag_750:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":16342:16373   */\n      and\n        /* \"#utility.yul\":16328:16374   */\n      dup4\n      mstore\n        /* \"#utility.yul\":16397:16401   */\n      0x20\n        /* \"#utility.yul\":16423:16437   */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"#utility.yul\":16460:16475   */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":16370:16371   */\n      0x01\n        /* \"#utility.yul\":16204:16213   */\n      add\n        /* \"#utility.yul\":16175:16485   */\n      jump(tag_747)\n    tag_749:\n      pop\n      pop\n      sub(shl(0xfb, 0x01), 0x01)\n        /* \"#utility.yul\":16497:16528   */\n      dup6\n      gt\n        /* \"#utility.yul\":16494:16545   */\n      iszero\n      tag_751\n      jumpi\n        /* \"#utility.yul\":16541:16542   */\n      0x00\n        /* \"#utility.yul\":16538:16539   */\n      dup1\n        /* \"#utility.yul\":16531:16543   */\n      revert\n        /* \"#utility.yul\":16494:16545   */\n    tag_751:\n        /* \"#utility.yul\":16575:16581   */\n      dup5\n        /* \"#utility.yul\":16572:16573   */\n      0x05\n        /* \"#utility.yul\":16568:16582   */\n      shl\n        /* \"#utility.yul\":16619:16625   */\n      dup1\n        /* \"#utility.yul\":16611:16617   */\n      dup8\n        /* \"#utility.yul\":16604:16609   */\n      dup4\n        /* \"#utility.yul\":16591:16626   */\n      calldatacopy\n        /* \"#utility.yul\":16648:16666   */\n      add\n        /* \"#utility.yul\":16675:16696   */\n      swap3\n      dup4\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":16723:16727   */\n      0x20\n        /* \"#utility.yul\":16712:16728   */\n      add\n      swap5\n        /* \"#utility.yul\":15776:16734   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18340:18467   */\n    tag_573:\n        /* \"#utility.yul\":18401:18411   */\n      0x4e487b71\n        /* \"#utility.yul\":18396:18399   */\n      0xe0\n        /* \"#utility.yul\":18392:18412   */\n      shl\n        /* \"#utility.yul\":18389:18390   */\n      0x00\n        /* \"#utility.yul\":18382:18413   */\n      mstore\n        /* \"#utility.yul\":18432:18436   */\n      0x21\n        /* \"#utility.yul\":18429:18430   */\n      0x04\n        /* \"#utility.yul\":18422:18437   */\n      mstore\n        /* \"#utility.yul\":18456:18460   */\n      0x24\n        /* \"#utility.yul\":18453:18454   */\n      0x00\n        /* \"#utility.yul\":18446:18461   */\n      revert\n        /* \"#utility.yul\":18472:18773   */\n    tag_606:\n        /* \"#utility.yul\":18601:18604   */\n      0x00\n        /* \"#utility.yul\":18639:18645   */\n      dup3\n        /* \"#utility.yul\":18633:18646   */\n      mload\n        /* \"#utility.yul\":18685:18691   */\n      dup1\n        /* \"#utility.yul\":18678:18682   */\n      0x20\n        /* \"#utility.yul\":18670:18676   */\n      dup6\n        /* \"#utility.yul\":18666:18683   */\n      add\n        /* \"#utility.yul\":18661:18664   */\n      dup5\n        /* \"#utility.yul\":18655:18692   */\n      mcopy\n        /* \"#utility.yul\":18747:18748   */\n      0x00\n        /* \"#utility.yul\":18711:18727   */\n      swap3\n      add\n        /* \"#utility.yul\":18736:18749   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":18711:18727   */\n      swap2\n        /* \"#utility.yul\":18472:18773   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n\n    auxdata: 0xa2646970667358221220c01f56be0deb1eeb812719acea6b0ad2c3b45f58ac5e0a164bd2ec817d02e3a164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2098": {
									"entryPoint": null,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_416": {
									"entryPoint": 33,
									"id": 416,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:13",
										"nodeType": "YulBlock",
										"src": "0:216:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:13",
													"nodeType": "YulBlock",
													"src": "113:101:13",
													"statements": [
														{
															"nativeSrc": "123:26:13",
															"nodeType": "YulAssignment",
															"src": "123:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:13",
																		"nodeType": "YulLiteral",
																		"src": "146:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:13"
																},
																"nativeSrc": "131:18:13",
																"nodeType": "YulFunctionCall",
																"src": "131:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:13",
																								"nodeType": "YulLiteral",
																								"src": "196:2:13",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:13",
																								"nodeType": "YulLiteral",
																								"src": "200:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:13"
																						},
																						"nativeSrc": "192:10:13",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:13",
																						"nodeType": "YulLiteral",
																						"src": "204:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:13"
																				},
																				"nativeSrc": "188:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:13"
																		},
																		"nativeSrc": "176:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:13"
																},
																"nativeSrc": "158:50:13",
																"nodeType": "YulFunctionCall",
																"src": "158:50:13"
															},
															"nativeSrc": "158:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:13",
														"nodeType": "YulTypedName",
														"src": "82:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:13",
														"nodeType": "YulTypedName",
														"src": "93:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:13",
														"nodeType": "YulTypedName",
														"src": "104:4:13",
														"type": ""
													}
												],
												"src": "14:200:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516127036100f95f395f81816118710152818161189a01526119de01526127035ff3fe6080604052600436106101c5575f3560e01c80638da5cb5b116100f2578063c9d27afe11610092578063f2fde38b11610062578063f2fde38b14610559578063f851a44014610578578063fd85b1a714610596578063feb61724146105b5575f80fd5b8063c9d27afe146104cd578063d23254b4146104ec578063e207d04d14610525578063eecbbb721461053a575f80fd5b8063ad3cb1cc116100cd578063ad3cb1cc14610427578063b17d718e14610464578063b62e1efc14610483578063c6b0da1b146104ae575f80fd5b80638da5cb5b146103b75780638f283970146103f3578063a10954fe14610412575f80fd5b80634f1ef2861161016857806368f257341161013857806368f25734146103515780636e631a4d14610370578063715018a61461038f5780638456cb59146103a3575f80fd5b80634f1ef286146102d057806352d1902d146102e357806356f40aa2146102f75780635c975abb14610322575f80fd5b80631794bb3c116101a35780631794bb3c146102285780632251d3f01461024757806327e235e3146102835780633f4ba83a146102bc575f80fd5b80630a8bcdb9146101c95780631145a4ff146101ea57806314068e9414610209575b5f80fd5b3480156101d4575f80fd5b506101e86101e3366004612082565b6105e3565b005b3480156101f5575f80fd5b506101e861020436600461211f565b610761565b348015610214575f80fd5b506101e86102233660046121cf565b61087f565b348015610233575f80fd5b506101e86102423660046121ea565b610a00565b348015610252575f80fd5b50600154610266906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561028e575f80fd5b506102ae61029d3660046121cf565b60026020525f908152604090205481565b60405190815260200161027a565b3480156102c7575f80fd5b506101e8610b5f565b6101e86102de36600461223c565b610b71565b3480156102ee575f80fd5b506102ae610b90565b348015610302575f80fd5b506102ae610311366004612082565b60056020525f908152604090205481565b34801561032d575f80fd5b505f805160206126ae8339815191525460ff165b604051901515815260200161027a565b34801561035c575f80fd5b506101e861036b3660046122fa565b610bab565b34801561037b575f80fd5b506101e861038a366004612349565b610c08565b34801561039a575f80fd5b506101e8610e26565b3480156103ae575f80fd5b506101e8610e37565b3480156103c2575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610266565b3480156103fe575f80fd5b506101e861040d3660046121cf565b610e47565b34801561041d575f80fd5b506102ae60095481565b348015610432575f80fd5b50610457604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161027a919061237b565b34801561046f575f80fd5b506101e861047e366004612082565b610f05565b34801561048e575f80fd5b506102ae61049d366004612082565b60066020525f908152604090205481565b3480156104b9575f80fd5b506101e86104c83660046123b0565b611027565b3480156104d8575f80fd5b506101e86104e7366004612418565b611142565b3480156104f7575f80fd5b50610341610506366004612446565b600460209081525f928352604080842090915290825290205460ff1681565b348015610530575f80fd5b506102ae60085481565b348015610545575f80fd5b506101e86105543660046122fa565b61127f565b348015610564575f80fd5b506101e86105733660046121cf565b611377565b348015610583575f80fd5b505f54610266906001600160a01b031681565b3480156105a1575f80fd5b506101e86105b0366004612082565b6113b4565b3480156105c0575f80fd5b506103416105cf366004612082565b60036020525f908152604090205460ff1681565b5f546001600160a01b0316336001600160a01b03161461061e5760405162461bcd60e51b815260040161061590612469565b60405180910390fd5b6106266114b9565b8060095410156106785760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420726573657276652062616c616e6365000000006044820152606401610615565b6001546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af11580156106d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f891906124ab565b6107145760405162461bcd60e51b8152600401610615906124c6565b8060095f8282546107259190612503565b90915550506040518181527f252f4762677e3c294cdba42d776da4a2c5a1259438ea5224c3bea5b27c8f04dc906020015b60405180910390a150565b6107696114b9565b8584146107cf5760405162461bcd60e51b815260206004820152602e60248201527f5061727469636970616e747320616e64206e657742616c616e636573206c656e60448201526d0cee8d040daeae6e840dac2e8c6d60931b6064820152608401610615565b6107de878787878787876114e9565b5f5b86811015610838576108308888838181106107fd576107fd612516565b905060200201602081019061081291906121cf565b87878481811061082457610824612516565b90506020020135611620565b6001016107e0565b507f1989b1fe93256bb3b4c6348f76f6f506f926f635cfa802ca3af4826159c5874b8787878760405161086e949392919061252a565b60405180910390a150505050505050565b5f546001600160a01b0316336001600160a01b0316146108b15760405162461bcd60e51b815260040161061590612469565b6108b96114b9565b6001600160a01b0381165f908152600260205260409020546109155760405162461bcd60e51b81526020600482015260156024820152744e6f2062616c616e636520746f206469737075746560581b6044820152606401610615565b600880545f9182610925836125a6565b909155506001546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa158015610970573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099491906125be565b5f82815260066020908152604080832093909355600781529082902080546001600160a01b0319166001600160a01b03861690811790915591518381527f8610d91e9f8a63773d7a3c13aa8bb8407203532a61bb703c06fce895f9622d0d910160405180910390a25050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610a455750825b90505f8267ffffffffffffffff166001148015610a615750303b155b905081158015610a6f575080155b15610a8d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ab757845460ff60401b1916600160401b1785555b610abf611789565b610ac7611791565b610ad0886117a1565b610ad8611789565b5f80546001600160a01b03808b166001600160a01b03199283161790925560018054928a169290911691909117815560085560098690558315610b5557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610b676117b2565b610b6f61180d565b565b610b79611866565b610b828261190a565b610b8c8282611912565b5050565b5f610b996119d3565b505f8051602061268e83398151915290565b610bb36114b9565b610bc1335b85858585611a1c565b610bcc335b85611620565b60405184815233907f7200cd3d0176b58ea53053a648b9a9cfb0d0d13a52488e14a16e0037b2241d21906020015b60405180910390a250505050565b5f546001600160a01b0316336001600160a01b031614610c3a5760405162461bcd60e51b815260040161061590612469565b610c426114b9565b5f81815260066020908152604080832054600590925290912054610c679060026125d5565b1015610cbf5760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f75676820766f74657320746f20636c6f7365206368616e6e656044820152601b60fa1b6064820152608401610615565b5f818152600760205260409020546001600160a01b03848116911614610d325760405162461bcd60e51b815260206004820152602260248201527f566f746520494420646f6573206e6f74206d61746368207061727469636970616044820152611b9d60f21b6064820152608401610615565b610d3c8383611620565b60015460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303815f875af1158015610d8c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db091906124ab565b610dcc5760405162461bcd60e51b8152600401610615906124c6565b6001600160a01b0383165f8181526002602090815260408083209290925581518581529081018490527f93af0759c861f9140be6d1c461033b560dba0e077676ce380708438f5ee23f6291015b60405180910390a2505050565b610e2e6117b2565b610b6f5f611b66565b610e3f6117b2565b610b6f611bd6565b610e4f6117b2565b610e576114b9565b6001600160a01b038116610ebe5760405162461bcd60e51b815260206004820152602860248201527f4e65772061646d696e20616464726573732063616e6e6f74206265207a65726f604482015267206164647265737360c01b6064820152608401610615565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c91a250565b5f546001600160a01b0316336001600160a01b031614610f375760405162461bcd60e51b815260040161061590612469565b610f3f6114b9565b6001546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064016020604051808303815f875af1158015610fa1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc591906124ab565b610fe15760405162461bcd60e51b8152600401610615906124c6565b8060095f828254610ff291906125ec565b90915550506040518181527f372b1a73ea80de8b8f35b0cf88147a1fbc354f7fb9d1409431199a619acd0c9890602001610756565b5f546001600160a01b0316336001600160a01b0316146110595760405162461bcd60e51b815260040161061590612469565b6110616114b9565b8281146110b05760405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d6174636800000000000000006044820152606401610615565b5f5b838110156110fe576110f68585838181106110cf576110cf612516565b90506020020160208101906110e491906121cf565b84848481811061082457610824612516565b6001016110b2565b507f9071b044465a4e855aabae9828b35d03eff50e0110996249e9bd9add0d117ed784848484604051611134949392919061252a565b60405180910390a150505050565b61114a6114b9565b335f9081526002602052604090205461119a5760405162461bcd60e51b81526020600482015260126024820152714e6f2062616c616e636520746f20766f746560701b6044820152606401610615565b5f82815260046020908152604080832033845290915290205460ff16156111f35760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606401610615565b5f8281526004602090815260408083203384528252808320805460ff1916600117905560029091529020548115611247575f83815260056020526040812080548392906112419084906125ec565b90915550505b604080518481526020810183905233917f1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e9101610e19565b6112876114b9565b61129033610bb8565b61129933610bc6565b6001546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303815f875af11580156112f5573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061131991906124ab565b6113355760405162461bcd60e51b8152600401610615906124c6565b335f8181526002602090815260408083209290925590518681527f770342ee36990141b5b1f4b3b41a184d7968647ac7f0dbfd2d86d566c468027d9101610bfa565b61137f6117b2565b6001600160a01b0381166113a857604051631e4fbdf760e01b81525f6004820152602401610615565b6113b181611b66565b50565b6113bc6114b9565b6001546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064016020604051808303815f875af115801561141e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061144291906124ab565b61145e5760405162461bcd60e51b8152600401610615906124c6565b335f908152600260205260408120805483929061147c9084906125ec565b909155505060405181815233907faf952b0a28349f5ffff2d98aa9050ea845adbe423ff73ac5da5f268834ae3ac09060200160405180910390a250565b5f805160206126ae8339815191525460ff1615610b6f5760405163d93c066560e01b815260040160405180910390fd5b5f87878787876040516020016115039594939291906125ff565b60405160208183030381529060405280519060200120905061155c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508593925050611c1e9050565b5f546001600160a01b039081169116146115ac5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610615565b5f8181526003602052604090205460ff16156115ff5760405162461bcd60e51b8152602060048201526012602482015271139bdb98d948185b1c9958591e481d5cd95960721b6044820152606401610615565b5f908152600360205260409020805460ff1916600117905550505050505050565b6001600160a01b0382165f908152600260205260409020548111156116fe576001600160a01b0382165f908152600260205260408120546116619083612503565b90508060095410156116b55760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f75676820726573657276652062616c616e63650000000000006044820152606401610615565b8060095f8282546116c69190612503565b90915550506001600160a01b0383165f90815260026020526040812080548392906116f29084906125ec565b90915550610b8c915050565b6001600160a01b0382165f90815260026020526040902054811015610b8c576001600160a01b0382165f90815260026020526040812054611740908390612503565b90508060095f82825461175391906125ec565b90915550506001600160a01b0383165f908152600260205260408120805483929061177f908490612503565b9091555050505050565b610b6f611c48565b611799611c48565b610b6f611c91565b6117a9611c48565b6113b181611cb1565b336117e47f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610b6f5760405163118cdaa760e01b8152336004820152602401610615565b611815611cb9565b5f805160206126ae833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610756565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806118ec57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166118e05f8051602061268e833981519152546001600160a01b031690565b6001600160a01b031614155b15610b6f5760405163703e46dd60e11b815260040160405180910390fd5b6113b16117b2565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561196c575060408051601f3d908101601f19168201909252611969918101906125be565b60015b61199457604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610615565b5f8051602061268e83398151915281146119c457604051632a87526960e21b815260048101829052602401610615565b6119ce8383611ce8565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b6f5760405163703e46dd60e11b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052605481018490525f90607401604051602081830303815290604052805190602001209050611aa483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508593925050611c1e9050565b5f546001600160a01b03908116911614611af45760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610615565b5f8181526003602052604090205460ff1615611b475760405162461bcd60e51b8152602060048201526012602482015271139bdb98d948185b1c9958591e481d5cd95960721b6044820152606401610615565b5f908152600360205260409020805460ff191660011790555050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b611bde6114b9565b5f805160206126ae833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361184e565b5f805f80611c2c8686611d3d565b925092509250611c3c8282611d86565b50909150505b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610b6f57604051631afcd79f60e31b815260040160405180910390fd5b611c99611c48565b5f805160206126ae833981519152805460ff19169055565b61137f611c48565b5f805160206126ae8339815191525460ff16610b6f57604051638dfc202b60e01b815260040160405180910390fd5b611cf182611e3e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611d35576119ce8282611ea1565b610b8c611f13565b5f805f8351604103611d74576020840151604085015160608601515f1a611d6688828585611f32565b955095509550505050611d7f565b505081515f91506002905b9250925092565b5f826003811115611d9957611d99612663565b03611da2575050565b6001826003811115611db657611db6612663565b03611dd45760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611de857611de8612663565b03611e095760405163fce698f760e01b815260048101829052602401610615565b6003826003811115611e1d57611e1d612663565b03610b8c576040516335e2f38360e21b815260048101829052602401610615565b806001600160a01b03163b5f03611e7357604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610615565b5f8051602061268e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611ebd9190612677565b5f60405180830381855af49150503d805f8114611ef5576040519150601f19603f3d011682016040523d82523d5f602084013e611efa565b606091505b5091509150611f0a858383611ffa565b95945050505050565b3415610b6f5760405163b398979f60e01b815260040160405180910390fd5b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611f6b57505f91506003905082611ff0565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611fbc573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611fe757505f925060019150829050611ff0565b92505f91508190505b9450945094915050565b60608261200f5761200a82612059565b612052565b815115801561202657506001600160a01b0384163b155b1561204f57604051639996b31560e01b81526001600160a01b0385166004820152602401610615565b50805b9392505050565b8051156120695780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215612092575f80fd5b5035919050565b5f8083601f8401126120a9575f80fd5b50813567ffffffffffffffff8111156120c0575f80fd5b6020830191508360208260051b85010111156120da575f80fd5b9250929050565b5f8083601f8401126120f1575f80fd5b50813567ffffffffffffffff811115612108575f80fd5b6020830191508360208285010111156120da575f80fd5b5f805f805f805f6080888a031215612135575f80fd5b873567ffffffffffffffff8082111561214c575f80fd5b6121588b838c01612099565b909950975060208a0135915080821115612170575f80fd5b61217c8b838c01612099565b909750955060408a0135945060608a013591508082111561219b575f80fd5b506121a88a828b016120e1565b989b979a50959850939692959293505050565b6001600160a01b03811681146113b1575f80fd5b5f602082840312156121df575f80fd5b8135612052816121bb565b5f805f606084860312156121fc575f80fd5b8335612207816121bb565b92506020840135612217816121bb565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f806040838503121561224d575f80fd5b8235612258816121bb565b9150602083013567ffffffffffffffff80821115612274575f80fd5b818501915085601f830112612287575f80fd5b81358181111561229957612299612228565b604051601f8201601f19908116603f011681019083821181831017156122c1576122c1612228565b816040528281528860208487010111156122d9575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f805f806060858703121561230d575f80fd5b8435935060208501359250604085013567ffffffffffffffff811115612331575f80fd5b61233d878288016120e1565b95989497509550505050565b5f805f6060848603121561235b575f80fd5b8335612366816121bb565b95602085013595506040909401359392505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f805f80604085870312156123c3575f80fd5b843567ffffffffffffffff808211156123da575f80fd5b6123e688838901612099565b909650945060208701359150808211156123fe575f80fd5b5061233d87828801612099565b80151581146113b1575f80fd5b5f8060408385031215612429575f80fd5b82359150602083013561243b8161240b565b809150509250929050565b5f8060408385031215612457575f80fd5b82359150602083013561243b816121bb565b60208082526022908201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960408201526137b760f11b606082015260800190565b5f602082840312156124bb575f80fd5b81516120528161240b565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115611c4257611c426124ef565b634e487b7160e01b5f52603260045260245ffd5b604080825281018490525f8560608301825b8781101561256c57823561254f816121bb565b6001600160a01b031682526020928301929091019060010161253c565b5083810360208501528481526001600160fb1b0385111561258b575f80fd5b8460051b915081866020830137016020019695505050505050565b5f600182016125b7576125b76124ef565b5060010190565b5f602082840312156125ce575f80fd5b5051919050565b8082028115828204841417611c4257611c426124ef565b80820180821115611c4257611c426124ef565b5f8187825b88811015612635578135612617816121bb565b6001600160a01b031683526020928301929190910190600101612604565b50506001600160fb1b0385111561264a575f80fd5b8460051b80878337019283525050602001949350505050565b634e487b7160e01b5f52602160045260245ffd5b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220c01f56be0deb1eeb812719acea6b0ad2c3b45f58ac5e0a164bd2ec817d02e3a164736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x2703 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1871 ADD MSTORE DUP2 DUP2 PUSH2 0x189A ADD MSTORE PUSH2 0x19DE ADD MSTORE PUSH2 0x2703 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xC9D27AFE GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xFD85B1A7 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xFEB61724 EQ PUSH2 0x5B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xD23254B4 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xE207D04D EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xEECBBB72 EQ PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB17D718E EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xB62E1EFC EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xC6B0DA1B EQ PUSH2 0x4AE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA10954FE EQ PUSH2 0x412 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x68F25734 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x68F25734 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x6E631A4D EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x56F40AA2 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1794BB3C GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x2251D3F0 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8BCDB9 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1145A4FF EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x14068E94 EQ PUSH2 0x209 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x21EA JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x223C JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xB90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xE26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xE37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x266 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x457 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x49D CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B0 JUMP JUMPDEST PUSH2 0x1027 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2418 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x554 CALLDATASIZE PUSH1 0x4 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x127F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x573 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x1377 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x13B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x5CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x626 PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x9 SLOAD LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420726573657276652062616C616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x252F4762677E3C294CDBA42D776DA4A2C5A1259438EA5224C3BEA5B27C8F04DC SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x769 PUSH2 0x14B9 JUMP JUMPDEST DUP6 DUP5 EQ PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E747320616E64206E657742616C616E636573206C656E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0xCEE8D040DAEAE6E840DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x7DE DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14E9 JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x838 JUMPI PUSH2 0x830 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x7FD JUMPI PUSH2 0x7FD PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x824 JUMPI PUSH2 0x824 PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x7E0 JUMP JUMPDEST POP PUSH32 0x1989B1FE93256BB3B4C6348F76F6F506F926F635CFA802CA3AF4826159C5874B DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x86E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F2062616C616E636520746F2064697370757465 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x925 DUP4 PUSH2 0x25A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP4 DUP2 MSTORE PUSH32 0x8610D91E9F8A63773D7A3C13AA8BB8407203532A61BB703C06FCE895F9622D0D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xA45 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA61 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xAB7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xABF PUSH2 0x1789 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0xAD0 DUP9 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x1789 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xB55 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB67 PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x180D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB79 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0xB82 DUP3 PUSH2 0x190A JUMP JUMPDEST PUSH2 0xB8C DUP3 DUP3 PUSH2 0x1912 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB99 PUSH2 0x19D3 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xBB3 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xBC1 CALLER JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1A1C JUMP JUMPDEST PUSH2 0xBCC CALLER JUMPDEST DUP6 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7200CD3D0176B58EA53053A648B9A9CFB0D0D13A52488E14A16E0037B2241D21 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0xC42 PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xC67 SWAP1 PUSH1 0x2 PUSH2 0x25D5 JUMP JUMPDEST LT ISZERO PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F74657320746F20636C6F7365206368616E6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746520494420646F6573206E6F74206D6174636820706172746963697061 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B9D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0xD3C DUP4 DUP4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x93AF0759C861F9140BE6D1C461033B560DBA0E077676CE380708438F5EE23F62 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xB6F PUSH0 PUSH2 0x1B66 JUMP JUMPDEST PUSH2 0xE3F PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x1BD6 JUMP JUMPDEST PUSH2 0xE4F PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xE57 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772061646D696E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x7CE7EC0B50378FB6C0186FFB5F48325F6593FCB4CA4386F21861AF3129188F5C SWAP2 LOG2 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0xF3F PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFF2 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x372B1A73EA80DE8B8F35B0CF88147A1FBC354F7FB9D1409431199A619ACD0C98 SWAP1 PUSH1 0x20 ADD PUSH2 0x756 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1059 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x1061 PUSH2 0x14B9 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E67746873206D757374206D617463680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10F6 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x10CF JUMPI PUSH2 0x10CF PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x824 JUMPI PUSH2 0x824 PUSH2 0x2516 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10B2 JUMP JUMPDEST POP PUSH32 0x9071B044465A4E855AABAE9828B35D03EFF50E0110996249E9BD9ADD0D117ED7 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1134 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x114A PUSH2 0x14B9 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x119A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2062616C616E636520746F20766F7465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 ISZERO PUSH2 0x1247 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1241 SWAP1 DUP5 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP2 ADD PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x1287 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0x1290 CALLER PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x1299 CALLER PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP7 DUP2 MSTORE PUSH32 0x770342EE36990141B5B1F4B3B41A184D7968647AC7F0DBFD2D86D566C468027D SWAP2 ADD PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x137F PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x1B66 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13BC PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x141E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1442 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x147C SWAP1 DUP5 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAF952B0A28349F5FFFF2D98AA9050EA845ADBE423FF73AC5DA5F268834AE3AC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1503 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x155C DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1C1E SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x15AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDB98D948185B1C9958591E481D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x16FE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1661 SWAP1 DUP4 PUSH2 0x2503 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 SLOAD LT ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820726573657276652062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x16C6 SWAP2 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x16F2 SWAP1 DUP5 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB8C SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1740 SWAP1 DUP4 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x177F SWAP1 DUP5 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x1799 PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x17A9 PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x1CB1 JUMP JUMPDEST CALLER PUSH2 0x17E4 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x1815 PUSH2 0x1CB9 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x756 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x18EC JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18E0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B1 PUSH2 0x17B2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x196C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1969 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1994 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x19C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x19CE DUP4 DUP4 PUSH2 0x1CE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1AA4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1C1E SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDB98D948185B1C9958591E481D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1BDE PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x184E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1C2C DUP7 DUP7 PUSH2 0x1D3D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C3C DUP3 DUP3 PUSH2 0x1D86 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C99 PUSH2 0x1C48 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x137F PUSH2 0x1C48 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CF1 DUP3 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x19CE DUP3 DUP3 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0xB8C PUSH2 0x1F13 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x1D74 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH0 BYTE PUSH2 0x1D66 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1F32 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1D7F JUMP JUMPDEST POP POP DUP2 MLOAD PUSH0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D99 PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0x1DA2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB6 PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0x1DD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE8 PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0x1E09 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1D PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1EBD SWAP2 SWAP1 PUSH2 0x2677 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1EF5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F0A DUP6 DUP4 DUP4 PUSH2 0x1FFA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1F6B JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FE7 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1FF0 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x200F JUMPI PUSH2 0x200A DUP3 PUSH2 0x2059 JUMP JUMPDEST PUSH2 0x2052 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2026 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x204F JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2069 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2092 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2108 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2135 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x214C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2158 DUP12 DUP4 DUP13 ADD PUSH2 0x2099 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2170 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x217C DUP12 DUP4 DUP13 ADD PUSH2 0x2099 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x219B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A8 DUP11 DUP3 DUP12 ADD PUSH2 0x20E1 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2052 DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2207 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2217 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2258 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2274 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2287 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2299 JUMPI PUSH2 0x2299 PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x22C1 JUMPI PUSH2 0x22C1 PUSH2 0x2228 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x22D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x230D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2331 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x233D DUP8 DUP3 DUP9 ADD PUSH2 0x20E1 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x235B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2366 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x23DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x23E6 DUP9 DUP4 DUP10 ADD PUSH2 0x2099 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x23FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233D DUP8 DUP3 DUP9 ADD PUSH2 0x2099 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2429 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x243B DUP2 PUSH2 0x240B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2457 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x243B DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x37B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2052 DUP2 PUSH2 0x240B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C42 PUSH2 0x24EF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 DUP6 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x256C JUMPI DUP3 CALLDATALOAD PUSH2 0x254F DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x253C JUMP JUMPDEST POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0x258B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL SWAP2 POP DUP2 DUP7 PUSH1 0x20 DUP4 ADD CALLDATACOPY ADD PUSH1 0x20 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x25B7 JUMPI PUSH2 0x25B7 PUSH2 0x24EF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C42 JUMPI PUSH2 0x1C42 PUSH2 0x24EF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C42 PUSH2 0x24EF JUMP JUMPDEST PUSH0 DUP2 DUP8 DUP3 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x2635 JUMPI DUP2 CALLDATALOAD PUSH2 0x2617 DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2604 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0x264A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL DUP1 DUP8 DUP4 CALLDATACOPY ADD SWAP3 DUP4 MSTORE POP POP PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCCD5ED15C6E187E77E9AEE8 DUP2 DUP5 0xC2 0x1F 0x4F 0x21 DUP3 0xAB PC 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220C01F56BE0DEB1EEB812719ACEA PUSH12 0xAD2C3B45F58AC5E0A164BD2 0xEC DUP2 PUSH30 0x2E3A164736F6C6343000819003300000000000000000000000000000000 ",
							"sourceMap": "734:11635:12:-:0;;;1171:4:2;1128:48;;2287:55:12;;;;;;;;;-1:-1:-1;2312:22:12;:20;:22::i;:::-;734:11635;;7711:422:1;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:1;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:1;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:1;-1:-1:-1;;;;;8035:33:1;;;;;8087:29;;158:50:13;;;8087:29:1;;146:2:13;131:18;8087:29:1;;;;;;;7981:146;7760:373;7711:422::o;14:200:13:-;734:11635:12;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": null,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Context_init_643": {
									"entryPoint": 6025,
									"id": 643,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 6049,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 7345,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_728": {
									"entryPoint": 6033,
									"id": 728,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_746": {
									"entryPoint": 7313,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_502": {
									"entryPoint": null,
									"id": 502,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2171": {
									"entryPoint": 6410,
									"id": 2171,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 7240,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1164": {
									"entryPoint": 7955,
									"id": 1164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 6611,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 6066,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 6246,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_447": {
									"entryPoint": null,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_702": {
									"entryPoint": null,
									"id": 702,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": null,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_658": {
									"entryPoint": null,
									"id": 658,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_827": {
									"entryPoint": 7126,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_790": {
									"entryPoint": 5305,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_803": {
									"entryPoint": 7353,
									"id": 803,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1427": {
									"entryPoint": 8281,
									"id": 1427,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_950": {
									"entryPoint": 7742,
									"id": 950,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_throwError_1963": {
									"entryPoint": 7558,
									"id": 1963,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 7014,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_851": {
									"entryPoint": 6157,
									"id": 851,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_updateBalance_2384": {
									"entryPoint": 5664,
									"id": 2384,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 6418,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_verifyBatchSignature_2434": {
									"entryPoint": 5353,
									"id": 2434,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@_verifySignature_2482": {
									"entryPoint": 6684,
									"id": 2482,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@admin_1989": {
									"entryPoint": null,
									"id": 1989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balances_1996": {
									"entryPoint": null,
									"id": 1996,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@batchUpdateBalances_2575": {
									"entryPoint": 1889,
									"id": 2575,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@batchUpdateChannelbyadmin_2851": {
									"entryPoint": 4135,
									"id": 2851,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@changeAdmin_2282": {
									"entryPoint": 3655,
									"id": 2282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@closeChannelByDAO_2800": {
									"entryPoint": 3080,
									"id": 2800,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@closeChannel_2625": {
									"entryPoint": 4735,
									"id": 2625,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@depositToReserve_2204": {
									"entryPoint": 3845,
									"id": 2204,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1347": {
									"entryPoint": 7841,
									"id": 1347,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1460": {
									"entryPoint": null,
									"id": 1460,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_923": {
									"entryPoint": null,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2141": {
									"entryPoint": 2560,
									"id": 2141,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@nextVoteId_2020": {
									"entryPoint": null,
									"id": 2020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@openChannel_2318": {
									"entryPoint": 5044,
									"id": 2318,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@owner_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2151": {
									"entryPoint": 3639,
									"id": 2151,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_778": {
									"entryPoint": null,
									"id": 778,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pointToken_1992": {
									"entryPoint": null,
									"id": 1992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_520": {
									"entryPoint": 2960,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recover_1720": {
									"entryPoint": 7198,
									"id": 1720,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 3622,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reserveBalance_2022": {
									"entryPoint": null,
									"id": 2022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startVoteToCloseChannel_2737": {
									"entryPoint": 2175,
									"id": 2737,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalWeights_2014": {
									"entryPoint": null,
									"id": 2014,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_164": {
									"entryPoint": 4983,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@tryRecover_1690": {
									"entryPoint": 7485,
									"id": 1690,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"@tryRecover_1878": {
									"entryPoint": 7986,
									"id": 1878,
									"parameterSlots": 4,
									"returnSlots": 3
								},
								"@unpause_2161": {
									"entryPoint": 2911,
									"id": 2161,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateChannelState_2515": {
									"entryPoint": 2987,
									"id": 2515,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 2929,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_984": {
									"entryPoint": 7400,
									"id": 984,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@usedNonces_2000": {
									"entryPoint": null,
									"id": 2000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1387": {
									"entryPoint": 8186,
									"id": 1387,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@voteWeights_2010": {
									"entryPoint": null,
									"id": 2010,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_2689": {
									"entryPoint": 4418,
									"id": 2689,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@votes_2006": {
									"entryPoint": null,
									"id": 2006,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawFromReserve_2240": {
									"entryPoint": 1507,
									"id": 2240,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 8764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_contract$_IERC20_$1616t_uint256": {
									"entryPoint": 8682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 9033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 9136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr": {
									"entryPoint": 8479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 9662,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 9286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 9240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9727,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9514,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1616__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01b7243a7d5ac4926aa4b8edd925f323ef46b29f8435a6cb760a9a29dbd3c7a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9414,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b475f01e907c8525284c2d962568bfcaa3133ce2261739c842efe49e2028bae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_43cf30ad8871b8fdb545799d22ae3c145590332663f589142a539e605733a294__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a8f561be9ca21da69ebbb77e3440ef8a669abee74649c7cad3f33822531bfca__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5509bdfbe4e3f1d17f2a454d6154d7d42696933e08c3c25f4cc9185a4540710__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cdf9e6197a88065780004678deea3b846694aaad5855c66c624a70732fc50f1f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dc387dc8a8bac95ec07bd7e65ff92ab7538d5bf2063a4a9ea89449f96be68218__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e1444ea02ac7bea8c9a5338acf01dba24983a5f35c670a40db58e1ba7f985f65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9455,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 9827,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9494,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 9227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19178:13",
										"nodeType": "YulBlock",
										"src": "0:19178:13",
										"statements": [
											{
												"nativeSrc": "6:3:13",
												"nodeType": "YulBlock",
												"src": "6:3:13",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:110:13",
													"nodeType": "YulBlock",
													"src": "84:110:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:13",
																"nodeType": "YulBlock",
																"src": "130:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:13",
																					"nodeType": "YulLiteral",
																					"src": "139:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:13",
																					"nodeType": "YulLiteral",
																					"src": "142:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:13"
																			},
																			"nativeSrc": "132:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:13"
																		},
																		"nativeSrc": "132:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:13"
																		},
																		"nativeSrc": "101:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:13"
																},
																"nativeSrc": "97:32:13",
																"nodeType": "YulFunctionCall",
																"src": "97:32:13"
															},
															"nativeSrc": "94:52:13",
															"nodeType": "YulIf",
															"src": "94:52:13"
														},
														{
															"nativeSrc": "155:33:13",
															"nodeType": "YulAssignment",
															"src": "155:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "178:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "165:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:13"
																},
																"nativeSrc": "165:23:13",
																"nodeType": "YulFunctionCall",
																"src": "165:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "155:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:13",
														"nodeType": "YulTypedName",
														"src": "50:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:13",
														"nodeType": "YulTypedName",
														"src": "61:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:13",
														"nodeType": "YulTypedName",
														"src": "73:6:13",
														"type": ""
													}
												],
												"src": "14:180:13"
											},
											{
												"body": {
													"nativeSrc": "283:283:13",
													"nodeType": "YulBlock",
													"src": "283:283:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "332:16:13",
																"nodeType": "YulBlock",
																"src": "332:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "341:1:13",
																					"nodeType": "YulLiteral",
																					"src": "341:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "344:1:13",
																					"nodeType": "YulLiteral",
																					"src": "344:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "334:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "334:6:13"
																			},
																			"nativeSrc": "334:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "334:12:13"
																		},
																		"nativeSrc": "334:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "334:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "311:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "311:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "319:4:13",
																						"nodeType": "YulLiteral",
																						"src": "319:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "307:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "307:3:13"
																				},
																				"nativeSrc": "307:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "307:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "326:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "326:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "303:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "303:3:13"
																		},
																		"nativeSrc": "303:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "303:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "296:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "296:6:13"
																},
																"nativeSrc": "296:35:13",
																"nodeType": "YulFunctionCall",
																"src": "296:35:13"
															},
															"nativeSrc": "293:55:13",
															"nodeType": "YulIf",
															"src": "293:55:13"
														},
														{
															"nativeSrc": "357:30:13",
															"nodeType": "YulAssignment",
															"src": "357:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "380:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "380:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "367:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "367:12:13"
																},
																"nativeSrc": "367:20:13",
																"nodeType": "YulFunctionCall",
																"src": "367:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "357:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "357:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "430:16:13",
																"nodeType": "YulBlock",
																"src": "430:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "439:1:13",
																					"nodeType": "YulLiteral",
																					"src": "439:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "442:1:13",
																					"nodeType": "YulLiteral",
																					"src": "442:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "432:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "432:6:13"
																			},
																			"nativeSrc": "432:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "432:12:13"
																		},
																		"nativeSrc": "432:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "432:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "402:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:18:13",
																		"nodeType": "YulLiteral",
																		"src": "410:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "399:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:2:13"
																},
																"nativeSrc": "399:30:13",
																"nodeType": "YulFunctionCall",
																"src": "399:30:13"
															},
															"nativeSrc": "396:50:13",
															"nodeType": "YulIf",
															"src": "396:50:13"
														},
														{
															"nativeSrc": "455:29:13",
															"nodeType": "YulAssignment",
															"src": "455:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "471:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "471:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "479:4:13",
																		"nodeType": "YulLiteral",
																		"src": "479:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "467:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "467:3:13"
																},
																"nativeSrc": "467:17:13",
																"nodeType": "YulFunctionCall",
																"src": "467:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "455:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "455:8:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "544:16:13",
																"nodeType": "YulBlock",
																"src": "544:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "553:1:13",
																					"nodeType": "YulLiteral",
																					"src": "553:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "556:1:13",
																					"nodeType": "YulLiteral",
																					"src": "556:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "546:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "546:6:13"
																			},
																			"nativeSrc": "546:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "546:12:13"
																		},
																		"nativeSrc": "546:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "546:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "507:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "507:6:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "519:1:13",
																								"nodeType": "YulLiteral",
																								"src": "519:1:13",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "522:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "522:6:13"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "515:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "515:3:13"
																						},
																						"nativeSrc": "515:14:13",
																						"nodeType": "YulFunctionCall",
																						"src": "515:14:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "503:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:13"
																				},
																				"nativeSrc": "503:27:13",
																				"nodeType": "YulFunctionCall",
																				"src": "503:27:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "532:4:13",
																				"nodeType": "YulLiteral",
																				"src": "532:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:13"
																		},
																		"nativeSrc": "499:38:13",
																		"nodeType": "YulFunctionCall",
																		"src": "499:38:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "539:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "539:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "496:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "496:2:13"
																},
																"nativeSrc": "496:47:13",
																"nodeType": "YulFunctionCall",
																"src": "496:47:13"
															},
															"nativeSrc": "493:67:13",
															"nodeType": "YulIf",
															"src": "493:67:13"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "199:367:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "246:6:13",
														"nodeType": "YulTypedName",
														"src": "246:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "254:3:13",
														"nodeType": "YulTypedName",
														"src": "254:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "262:8:13",
														"nodeType": "YulTypedName",
														"src": "262:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "272:6:13",
														"nodeType": "YulTypedName",
														"src": "272:6:13",
														"type": ""
													}
												],
												"src": "199:367:13"
											},
											{
												"body": {
													"nativeSrc": "643:275:13",
													"nodeType": "YulBlock",
													"src": "643:275:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "692:16:13",
																"nodeType": "YulBlock",
																"src": "692:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "701:1:13",
																					"nodeType": "YulLiteral",
																					"src": "701:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "704:1:13",
																					"nodeType": "YulLiteral",
																					"src": "704:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "694:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "694:6:13"
																			},
																			"nativeSrc": "694:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "694:12:13"
																		},
																		"nativeSrc": "694:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "694:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "671:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "671:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "679:4:13",
																						"nodeType": "YulLiteral",
																						"src": "679:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "667:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "667:3:13"
																				},
																				"nativeSrc": "667:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "667:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "686:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "686:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "663:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "663:3:13"
																		},
																		"nativeSrc": "663:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "663:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:13"
																},
																"nativeSrc": "656:35:13",
																"nodeType": "YulFunctionCall",
																"src": "656:35:13"
															},
															"nativeSrc": "653:55:13",
															"nodeType": "YulIf",
															"src": "653:55:13"
														},
														{
															"nativeSrc": "717:30:13",
															"nodeType": "YulAssignment",
															"src": "717:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "740:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "727:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "727:12:13"
																},
																"nativeSrc": "727:20:13",
																"nodeType": "YulFunctionCall",
																"src": "727:20:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "717:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "717:6:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "790:16:13",
																"nodeType": "YulBlock",
																"src": "790:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "799:1:13",
																					"nodeType": "YulLiteral",
																					"src": "799:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "802:1:13",
																					"nodeType": "YulLiteral",
																					"src": "802:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "792:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "792:6:13"
																			},
																			"nativeSrc": "792:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "792:12:13"
																		},
																		"nativeSrc": "792:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "792:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "762:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "762:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "770:18:13",
																		"nodeType": "YulLiteral",
																		"src": "770:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "759:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "759:2:13"
																},
																"nativeSrc": "759:30:13",
																"nodeType": "YulFunctionCall",
																"src": "759:30:13"
															},
															"nativeSrc": "756:50:13",
															"nodeType": "YulIf",
															"src": "756:50:13"
														},
														{
															"nativeSrc": "815:29:13",
															"nodeType": "YulAssignment",
															"src": "815:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "831:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "831:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "839:4:13",
																		"nodeType": "YulLiteral",
																		"src": "839:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "827:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "827:3:13"
																},
																"nativeSrc": "827:17:13",
																"nodeType": "YulFunctionCall",
																"src": "827:17:13"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "815:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "815:8:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "896:16:13",
																"nodeType": "YulBlock",
																"src": "896:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "905:1:13",
																					"nodeType": "YulLiteral",
																					"src": "905:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "908:1:13",
																					"nodeType": "YulLiteral",
																					"src": "908:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "898:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "898:6:13"
																			},
																			"nativeSrc": "898:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "898:12:13"
																		},
																		"nativeSrc": "898:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "898:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "867:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "867:6:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "875:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "875:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "863:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "863:3:13"
																				},
																				"nativeSrc": "863:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "863:19:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "884:4:13",
																				"nodeType": "YulLiteral",
																				"src": "884:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "859:3:13"
																		},
																		"nativeSrc": "859:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "859:30:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "891:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "891:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "856:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "856:2:13"
																},
																"nativeSrc": "856:39:13",
																"nodeType": "YulFunctionCall",
																"src": "856:39:13"
															},
															"nativeSrc": "853:59:13",
															"nodeType": "YulIf",
															"src": "853:59:13"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nativeSrc": "571:347:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "606:6:13",
														"nodeType": "YulTypedName",
														"src": "606:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "614:3:13",
														"nodeType": "YulTypedName",
														"src": "614:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "622:8:13",
														"nodeType": "YulTypedName",
														"src": "622:8:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "632:6:13",
														"nodeType": "YulTypedName",
														"src": "632:6:13",
														"type": ""
													}
												],
												"src": "571:347:13"
											},
											{
												"body": {
													"nativeSrc": "1133:919:13",
													"nodeType": "YulBlock",
													"src": "1133:919:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1180:16:13",
																"nodeType": "YulBlock",
																"src": "1180:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1189:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1189:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1192:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1192:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1182:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1182:6:13"
																			},
																			"nativeSrc": "1182:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1182:12:13"
																		},
																		"nativeSrc": "1182:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1182:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1154:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1154:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1163:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1163:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1150:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1150:3:13"
																		},
																		"nativeSrc": "1150:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1150:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1175:3:13",
																		"nodeType": "YulLiteral",
																		"src": "1175:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1146:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1146:3:13"
																},
																"nativeSrc": "1146:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1146:33:13"
															},
															"nativeSrc": "1143:53:13",
															"nodeType": "YulIf",
															"src": "1143:53:13"
														},
														{
															"nativeSrc": "1205:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1205:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1232:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1232:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1219:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1219:12:13"
																},
																"nativeSrc": "1219:23:13",
																"nodeType": "YulFunctionCall",
																"src": "1219:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1209:6:13",
																	"nodeType": "YulTypedName",
																	"src": "1209:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1251:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1251:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1261:18:13",
																"nodeType": "YulLiteral",
																"src": "1261:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1255:2:13",
																	"nodeType": "YulTypedName",
																	"src": "1255:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1306:16:13",
																"nodeType": "YulBlock",
																"src": "1306:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1315:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1315:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1318:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1318:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1308:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1308:6:13"
																			},
																			"nativeSrc": "1308:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1308:12:13"
																		},
																		"nativeSrc": "1308:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1308:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1294:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1294:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1302:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1302:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1291:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1291:2:13"
																},
																"nativeSrc": "1291:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1291:14:13"
															},
															"nativeSrc": "1288:34:13",
															"nodeType": "YulIf",
															"src": "1288:34:13"
														},
														{
															"nativeSrc": "1331:96:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1331:96:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1399:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1399:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1410:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1410:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1395:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1395:3:13"
																		},
																		"nativeSrc": "1395:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1395:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1419:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1419:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "1357:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1357:37:13"
																},
																"nativeSrc": "1357:70:13",
																"nodeType": "YulFunctionCall",
																"src": "1357:70:13"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "1335:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1335:8:13",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "1345:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1345:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1436:18:13",
															"nodeType": "YulAssignment",
															"src": "1436:18:13",
															"value": {
																"name": "value0_1",
																"nativeSrc": "1446:8:13",
																"nodeType": "YulIdentifier",
																"src": "1446:8:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1436:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1436:6:13"
																}
															]
														},
														{
															"nativeSrc": "1463:18:13",
															"nodeType": "YulAssignment",
															"src": "1463:18:13",
															"value": {
																"name": "value1_1",
																"nativeSrc": "1473:8:13",
																"nodeType": "YulIdentifier",
																"src": "1473:8:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:13"
																}
															]
														},
														{
															"nativeSrc": "1490:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1490:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1523:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1523:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1534:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1534:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1519:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1519:3:13"
																		},
																		"nativeSrc": "1519:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1519:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1506:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1506:12:13"
																},
																"nativeSrc": "1506:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1506:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1494:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1494:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1567:16:13",
																"nodeType": "YulBlock",
																"src": "1567:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1576:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1576:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1579:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1579:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1569:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1569:6:13"
																			},
																			"nativeSrc": "1569:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1569:12:13"
																		},
																		"nativeSrc": "1569:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1569:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1553:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1553:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1563:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1563:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1550:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1550:2:13"
																},
																"nativeSrc": "1550:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1550:16:13"
															},
															"nativeSrc": "1547:36:13",
															"nodeType": "YulIf",
															"src": "1547:36:13"
														},
														{
															"nativeSrc": "1592:98:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1592:98:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1660:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1660:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1671:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1671:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1656:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1656:3:13"
																		},
																		"nativeSrc": "1656:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1656:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1682:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1682:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "1618:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1618:37:13"
																},
																"nativeSrc": "1618:72:13",
																"nodeType": "YulFunctionCall",
																"src": "1618:72:13"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "1596:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1596:8:13",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "1606:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1606:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1699:18:13",
															"nodeType": "YulAssignment",
															"src": "1699:18:13",
															"value": {
																"name": "value2_1",
																"nativeSrc": "1709:8:13",
																"nodeType": "YulIdentifier",
																"src": "1709:8:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1699:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1699:6:13"
																}
															]
														},
														{
															"nativeSrc": "1726:18:13",
															"nodeType": "YulAssignment",
															"src": "1726:18:13",
															"value": {
																"name": "value3_1",
																"nativeSrc": "1736:8:13",
																"nodeType": "YulIdentifier",
																"src": "1736:8:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1726:6:13"
																}
															]
														},
														{
															"nativeSrc": "1753:42:13",
															"nodeType": "YulAssignment",
															"src": "1753:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1780:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1780:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1791:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1791:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1776:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1776:3:13"
																		},
																		"nativeSrc": "1776:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1776:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1763:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1763:12:13"
																},
																"nativeSrc": "1763:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1763:32:13"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1753:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1753:6:13"
																}
															]
														},
														{
															"nativeSrc": "1804:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1804:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1837:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1837:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1848:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1848:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1833:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:13"
																		},
																		"nativeSrc": "1833:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1820:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1820:12:13"
																},
																"nativeSrc": "1820:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1820:32:13"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nativeSrc": "1808:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1808:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1881:16:13",
																"nodeType": "YulBlock",
																"src": "1881:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1890:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1890:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1893:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1893:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1883:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1883:6:13"
																			},
																			"nativeSrc": "1883:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1883:12:13"
																		},
																		"nativeSrc": "1883:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1883:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nativeSrc": "1867:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "1867:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "1877:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "1877:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1864:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1864:2:13"
																},
																"nativeSrc": "1864:16:13",
																"nodeType": "YulFunctionCall",
																"src": "1864:16:13"
															},
															"nativeSrc": "1861:36:13",
															"nodeType": "YulIf",
															"src": "1861:36:13"
														},
														{
															"nativeSrc": "1906:86:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1906:86:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:13"
																			},
																			{
																				"name": "offset_2",
																				"nativeSrc": "1973:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "1973:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1958:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1958:3:13"
																		},
																		"nativeSrc": "1958:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1958:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1984:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "1984:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "1932:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "1932:25:13"
																},
																"nativeSrc": "1932:60:13",
																"nodeType": "YulFunctionCall",
																"src": "1932:60:13"
															},
															"variables": [
																{
																	"name": "value5_1",
																	"nativeSrc": "1910:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1910:8:13",
																	"type": ""
																},
																{
																	"name": "value6_1",
																	"nativeSrc": "1920:8:13",
																	"nodeType": "YulTypedName",
																	"src": "1920:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2001:18:13",
															"nodeType": "YulAssignment",
															"src": "2001:18:13",
															"value": {
																"name": "value5_1",
																"nativeSrc": "2011:8:13",
																"nodeType": "YulIdentifier",
																"src": "2011:8:13"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "2001:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:13"
																}
															]
														},
														{
															"nativeSrc": "2028:18:13",
															"nodeType": "YulAssignment",
															"src": "2028:18:13",
															"value": {
																"name": "value6_1",
																"nativeSrc": "2038:8:13",
																"nodeType": "YulIdentifier",
																"src": "2038:8:13"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nativeSrc": "2028:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr",
												"nativeSrc": "923:1129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1051:9:13",
														"nodeType": "YulTypedName",
														"src": "1051:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1062:7:13",
														"nodeType": "YulTypedName",
														"src": "1062:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1074:6:13",
														"nodeType": "YulTypedName",
														"src": "1074:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1082:6:13",
														"nodeType": "YulTypedName",
														"src": "1082:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1090:6:13",
														"nodeType": "YulTypedName",
														"src": "1090:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1098:6:13",
														"nodeType": "YulTypedName",
														"src": "1098:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "1106:6:13",
														"nodeType": "YulTypedName",
														"src": "1106:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "1114:6:13",
														"nodeType": "YulTypedName",
														"src": "1114:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "1122:6:13",
														"nodeType": "YulTypedName",
														"src": "1122:6:13",
														"type": ""
													}
												],
												"src": "923:1129:13"
											},
											{
												"body": {
													"nativeSrc": "2102:86:13",
													"nodeType": "YulBlock",
													"src": "2102:86:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2166:16:13",
																"nodeType": "YulBlock",
																"src": "2166:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2175:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2175:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2178:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2178:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2168:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2168:6:13"
																			},
																			"nativeSrc": "2168:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2168:12:13"
																		},
																		"nativeSrc": "2168:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2168:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2125:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2125:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2136:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2136:5:13"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2151:3:13",
																										"nodeType": "YulLiteral",
																										"src": "2151:3:13",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2156:1:13",
																										"nodeType": "YulLiteral",
																										"src": "2156:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2147:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "2147:3:13"
																								},
																								"nativeSrc": "2147:11:13",
																								"nodeType": "YulFunctionCall",
																								"src": "2147:11:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2160:1:13",
																								"nodeType": "YulLiteral",
																								"src": "2160:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2143:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "2143:3:13"
																						},
																						"nativeSrc": "2143:19:13",
																						"nodeType": "YulFunctionCall",
																						"src": "2143:19:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2132:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2132:3:13"
																				},
																				"nativeSrc": "2132:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2132:31:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2122:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2122:2:13"
																		},
																		"nativeSrc": "2122:42:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:42:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2115:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2115:6:13"
																},
																"nativeSrc": "2115:50:13",
																"nodeType": "YulFunctionCall",
																"src": "2115:50:13"
															},
															"nativeSrc": "2112:70:13",
															"nodeType": "YulIf",
															"src": "2112:70:13"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "2057:131:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2091:5:13",
														"nodeType": "YulTypedName",
														"src": "2091:5:13",
														"type": ""
													}
												],
												"src": "2057:131:13"
											},
											{
												"body": {
													"nativeSrc": "2263:177:13",
													"nodeType": "YulBlock",
													"src": "2263:177:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2309:16:13",
																"nodeType": "YulBlock",
																"src": "2309:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2318:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2318:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2321:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2321:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2311:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2311:6:13"
																			},
																			"nativeSrc": "2311:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2311:12:13"
																		},
																		"nativeSrc": "2311:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2311:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2284:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2284:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2293:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2293:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2280:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2280:3:13"
																		},
																		"nativeSrc": "2280:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2280:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2305:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2305:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2276:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2276:3:13"
																},
																"nativeSrc": "2276:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2276:32:13"
															},
															"nativeSrc": "2273:52:13",
															"nodeType": "YulIf",
															"src": "2273:52:13"
														},
														{
															"nativeSrc": "2334:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2334:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2360:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2360:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2347:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2347:12:13"
																},
																"nativeSrc": "2347:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2347:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2338:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2338:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2404:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2379:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "2379:24:13"
																},
																"nativeSrc": "2379:31:13",
																"nodeType": "YulFunctionCall",
																"src": "2379:31:13"
															},
															"nativeSrc": "2379:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "2379:31:13"
														},
														{
															"nativeSrc": "2419:15:13",
															"nodeType": "YulAssignment",
															"src": "2419:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2429:5:13",
																"nodeType": "YulIdentifier",
																"src": "2429:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2419:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2419:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2193:247:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2229:9:13",
														"nodeType": "YulTypedName",
														"src": "2229:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2240:7:13",
														"nodeType": "YulTypedName",
														"src": "2240:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2252:6:13",
														"nodeType": "YulTypedName",
														"src": "2252:6:13",
														"type": ""
													}
												],
												"src": "2193:247:13"
											},
											{
												"body": {
													"nativeSrc": "2564:352:13",
													"nodeType": "YulBlock",
													"src": "2564:352:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2610:16:13",
																"nodeType": "YulBlock",
																"src": "2610:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2619:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2619:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2622:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2622:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2612:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2612:6:13"
																			},
																			"nativeSrc": "2612:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2612:12:13"
																		},
																		"nativeSrc": "2612:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2612:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2585:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2585:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2594:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2594:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2581:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2581:3:13"
																		},
																		"nativeSrc": "2581:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2581:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2606:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2606:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2577:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2577:3:13"
																},
																"nativeSrc": "2577:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2577:32:13"
															},
															"nativeSrc": "2574:52:13",
															"nodeType": "YulIf",
															"src": "2574:52:13"
														},
														{
															"nativeSrc": "2635:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2635:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2661:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2661:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2648:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2648:12:13"
																},
																"nativeSrc": "2648:23:13",
																"nodeType": "YulFunctionCall",
																"src": "2648:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2639:5:13",
																	"nodeType": "YulTypedName",
																	"src": "2639:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2705:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2705:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2680:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "2680:24:13"
																},
																"nativeSrc": "2680:31:13",
																"nodeType": "YulFunctionCall",
																"src": "2680:31:13"
															},
															"nativeSrc": "2680:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "2680:31:13"
														},
														{
															"nativeSrc": "2720:15:13",
															"nodeType": "YulAssignment",
															"src": "2720:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "2730:5:13",
																"nodeType": "YulIdentifier",
																"src": "2730:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2720:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:13"
																}
															]
														},
														{
															"nativeSrc": "2744:47:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2744:47:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2776:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2776:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2787:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2787:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2772:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2772:3:13"
																		},
																		"nativeSrc": "2772:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2772:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2759:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2759:12:13"
																},
																"nativeSrc": "2759:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2759:32:13"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2748:7:13",
																	"nodeType": "YulTypedName",
																	"src": "2748:7:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2825:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "2825:7:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2800:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "2800:24:13"
																},
																"nativeSrc": "2800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2800:33:13"
															},
															"nativeSrc": "2800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2800:33:13"
														},
														{
															"nativeSrc": "2842:17:13",
															"nodeType": "YulAssignment",
															"src": "2842:17:13",
															"value": {
																"name": "value_1",
																"nativeSrc": "2852:7:13",
																"nodeType": "YulIdentifier",
																"src": "2852:7:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2842:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:13"
																}
															]
														},
														{
															"nativeSrc": "2868:42:13",
															"nodeType": "YulAssignment",
															"src": "2868:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2895:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2895:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2906:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2906:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2891:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2891:3:13"
																		},
																		"nativeSrc": "2891:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2891:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2878:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2878:12:13"
																},
																"nativeSrc": "2878:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2878:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2868:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2868:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_contract$_IERC20_$1616t_uint256",
												"nativeSrc": "2445:471:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2514:9:13",
														"nodeType": "YulTypedName",
														"src": "2514:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2525:7:13",
														"nodeType": "YulTypedName",
														"src": "2525:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2537:6:13",
														"nodeType": "YulTypedName",
														"src": "2537:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2545:6:13",
														"nodeType": "YulTypedName",
														"src": "2545:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2553:6:13",
														"nodeType": "YulTypedName",
														"src": "2553:6:13",
														"type": ""
													}
												],
												"src": "2445:471:13"
											},
											{
												"body": {
													"nativeSrc": "3037:102:13",
													"nodeType": "YulBlock",
													"src": "3037:102:13",
													"statements": [
														{
															"nativeSrc": "3047:26:13",
															"nodeType": "YulAssignment",
															"src": "3047:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3059:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3059:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3070:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3070:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:13"
																},
																"nativeSrc": "3055:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3055:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3047:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3047:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3089:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3089:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3104:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3104:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3120:3:13",
																								"nodeType": "YulLiteral",
																								"src": "3120:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3125:1:13",
																								"nodeType": "YulLiteral",
																								"src": "3125:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3116:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "3116:3:13"
																						},
																						"nativeSrc": "3116:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "3116:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3129:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3129:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3112:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3112:3:13"
																				},
																				"nativeSrc": "3112:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3112:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3100:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3100:3:13"
																		},
																		"nativeSrc": "3100:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3100:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3082:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:13"
																},
																"nativeSrc": "3082:51:13",
																"nodeType": "YulFunctionCall",
																"src": "3082:51:13"
															},
															"nativeSrc": "3082:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "3082:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1616__to_t_address__fromStack_reversed",
												"nativeSrc": "2921:218:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3006:9:13",
														"nodeType": "YulTypedName",
														"src": "3006:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3017:6:13",
														"nodeType": "YulTypedName",
														"src": "3017:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3028:4:13",
														"nodeType": "YulTypedName",
														"src": "3028:4:13",
														"type": ""
													}
												],
												"src": "2921:218:13"
											},
											{
												"body": {
													"nativeSrc": "3245:76:13",
													"nodeType": "YulBlock",
													"src": "3245:76:13",
													"statements": [
														{
															"nativeSrc": "3255:26:13",
															"nodeType": "YulAssignment",
															"src": "3255:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3267:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3267:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3278:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3278:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3263:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3263:3:13"
																},
																"nativeSrc": "3263:18:13",
																"nodeType": "YulFunctionCall",
																"src": "3263:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3255:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "3255:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3297:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3297:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3308:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3308:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3290:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3290:6:13"
																},
																"nativeSrc": "3290:25:13",
																"nodeType": "YulFunctionCall",
																"src": "3290:25:13"
															},
															"nativeSrc": "3290:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "3290:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3144:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3214:9:13",
														"nodeType": "YulTypedName",
														"src": "3214:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3225:6:13",
														"nodeType": "YulTypedName",
														"src": "3225:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3236:4:13",
														"nodeType": "YulTypedName",
														"src": "3236:4:13",
														"type": ""
													}
												],
												"src": "3144:177:13"
											},
											{
												"body": {
													"nativeSrc": "3358:95:13",
													"nodeType": "YulBlock",
													"src": "3358:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3375:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3375:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3382:3:13",
																				"nodeType": "YulLiteral",
																				"src": "3382:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3387:10:13",
																				"nodeType": "YulLiteral",
																				"src": "3387:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3378:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3378:3:13"
																		},
																		"nativeSrc": "3378:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3378:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3368:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:13"
																},
																"nativeSrc": "3368:31:13",
																"nodeType": "YulFunctionCall",
																"src": "3368:31:13"
															},
															"nativeSrc": "3368:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "3368:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3415:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3415:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3418:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3418:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3408:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3408:6:13"
																},
																"nativeSrc": "3408:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3408:15:13"
															},
															"nativeSrc": "3408:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3408:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3439:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3439:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3442:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3442:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3432:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3432:6:13"
																},
																"nativeSrc": "3432:15:13",
																"nodeType": "YulFunctionCall",
																"src": "3432:15:13"
															},
															"nativeSrc": "3432:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "3432:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3326:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "3326:127:13"
											},
											{
												"body": {
													"nativeSrc": "3554:960:13",
													"nodeType": "YulBlock",
													"src": "3554:960:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3600:16:13",
																"nodeType": "YulBlock",
																"src": "3600:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3609:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3609:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3612:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3612:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3602:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3602:6:13"
																			},
																			"nativeSrc": "3602:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3602:12:13"
																		},
																		"nativeSrc": "3602:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3602:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3575:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3575:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3584:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3584:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3571:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3571:3:13"
																		},
																		"nativeSrc": "3571:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3571:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3596:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3596:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3567:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3567:3:13"
																},
																"nativeSrc": "3567:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3567:32:13"
															},
															"nativeSrc": "3564:52:13",
															"nodeType": "YulIf",
															"src": "3564:52:13"
														},
														{
															"nativeSrc": "3625:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3625:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3651:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3651:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3638:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3638:12:13"
																},
																"nativeSrc": "3638:23:13",
																"nodeType": "YulFunctionCall",
																"src": "3638:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3629:5:13",
																	"nodeType": "YulTypedName",
																	"src": "3629:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3695:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3695:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3670:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "3670:24:13"
																},
																"nativeSrc": "3670:31:13",
																"nodeType": "YulFunctionCall",
																"src": "3670:31:13"
															},
															"nativeSrc": "3670:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "3670:31:13"
														},
														{
															"nativeSrc": "3710:15:13",
															"nodeType": "YulAssignment",
															"src": "3710:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "3720:5:13",
																"nodeType": "YulIdentifier",
																"src": "3720:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3710:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:13"
																}
															]
														},
														{
															"nativeSrc": "3734:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3734:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3765:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3765:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3776:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3776:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3761:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3761:3:13"
																		},
																		"nativeSrc": "3761:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3761:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3748:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3748:12:13"
																},
																"nativeSrc": "3748:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3748:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3738:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3738:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3789:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3789:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "3799:18:13",
																"nodeType": "YulLiteral",
																"src": "3799:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3793:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3793:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3844:16:13",
																"nodeType": "YulBlock",
																"src": "3844:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3853:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3853:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3856:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3856:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3846:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3846:6:13"
																			},
																			"nativeSrc": "3846:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3846:12:13"
																		},
																		"nativeSrc": "3846:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3846:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3832:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3832:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3840:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3840:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3829:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3829:2:13"
																},
																"nativeSrc": "3829:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3829:14:13"
															},
															"nativeSrc": "3826:34:13",
															"nodeType": "YulIf",
															"src": "3826:34:13"
														},
														{
															"nativeSrc": "3869:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3869:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3883:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "3883:9:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3894:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3894:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3879:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3879:3:13"
																},
																"nativeSrc": "3879:22:13",
																"nodeType": "YulFunctionCall",
																"src": "3879:22:13"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "3873:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3873:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3949:16:13",
																"nodeType": "YulBlock",
																"src": "3949:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3958:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3958:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3961:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3961:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3951:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3951:6:13"
																			},
																			"nativeSrc": "3951:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3951:12:13"
																		},
																		"nativeSrc": "3951:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3951:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "3928:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "3928:2:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3932:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3932:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3924:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3924:3:13"
																				},
																				"nativeSrc": "3924:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3924:13:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3939:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3939:7:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3920:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3920:3:13"
																		},
																		"nativeSrc": "3920:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3920:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3913:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3913:6:13"
																},
																"nativeSrc": "3913:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3913:35:13"
															},
															"nativeSrc": "3910:55:13",
															"nodeType": "YulIf",
															"src": "3910:55:13"
														},
														{
															"nativeSrc": "3974:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3974:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "3997:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "3997:2:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3984:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3984:12:13"
																},
																"nativeSrc": "3984:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3984:16:13"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "3978:2:13",
																	"nodeType": "YulTypedName",
																	"src": "3978:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4023:22:13",
																"nodeType": "YulBlock",
																"src": "4023:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4025:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4025:16:13"
																			},
																			"nativeSrc": "4025:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4025:18:13"
																		},
																		"nativeSrc": "4025:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4025:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "4015:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "4015:2:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4019:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "4019:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4012:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4012:2:13"
																},
																"nativeSrc": "4012:10:13",
																"nodeType": "YulFunctionCall",
																"src": "4012:10:13"
															},
															"nativeSrc": "4009:36:13",
															"nodeType": "YulIf",
															"src": "4009:36:13"
														},
														{
															"nativeSrc": "4054:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4054:17:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4068:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4068:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4064:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4064:3:13"
																},
																"nativeSrc": "4064:7:13",
																"nodeType": "YulFunctionCall",
																"src": "4064:7:13"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "4058:2:13",
																	"nodeType": "YulTypedName",
																	"src": "4058:2:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4080:23:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4080:23:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4100:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4100:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4094:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4094:5:13"
																},
																"nativeSrc": "4094:9:13",
																"nodeType": "YulFunctionCall",
																"src": "4094:9:13"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4084:6:13",
																	"nodeType": "YulTypedName",
																	"src": "4084:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4112:71:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4112:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4134:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4134:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nativeSrc": "4158:2:13",
																										"nodeType": "YulIdentifier",
																										"src": "4158:2:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4162:4:13",
																										"nodeType": "YulLiteral",
																										"src": "4162:4:13",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4154:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "4154:3:13"
																								},
																								"nativeSrc": "4154:13:13",
																								"nodeType": "YulFunctionCall",
																								"src": "4154:13:13"
																							},
																							{
																								"name": "_4",
																								"nativeSrc": "4169:2:13",
																								"nodeType": "YulIdentifier",
																								"src": "4169:2:13"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4150:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "4150:3:13"
																						},
																						"nativeSrc": "4150:22:13",
																						"nodeType": "YulFunctionCall",
																						"src": "4150:22:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4174:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4174:2:13",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4146:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4146:3:13"
																				},
																				"nativeSrc": "4146:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4146:31:13"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "4179:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4179:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4142:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4142:3:13"
																		},
																		"nativeSrc": "4142:40:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4142:40:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4130:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4130:3:13"
																},
																"nativeSrc": "4130:53:13",
																"nodeType": "YulFunctionCall",
																"src": "4130:53:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4116:10:13",
																	"nodeType": "YulTypedName",
																	"src": "4116:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4242:22:13",
																"nodeType": "YulBlock",
																"src": "4242:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4244:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4244:16:13"
																			},
																			"nativeSrc": "4244:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4244:18:13"
																		},
																		"nativeSrc": "4244:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4244:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4201:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "4201:10:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "4213:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4213:2:13"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4198:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4198:2:13"
																		},
																		"nativeSrc": "4198:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4198:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4221:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "4221:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4233:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4233:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4218:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4218:2:13"
																		},
																		"nativeSrc": "4218:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4218:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4195:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4195:2:13"
																},
																"nativeSrc": "4195:46:13",
																"nodeType": "YulFunctionCall",
																"src": "4195:46:13"
															},
															"nativeSrc": "4192:72:13",
															"nodeType": "YulIf",
															"src": "4192:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4280:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4280:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4284:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "4284:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4273:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4273:6:13"
																},
																"nativeSrc": "4273:22:13",
																"nodeType": "YulFunctionCall",
																"src": "4273:22:13"
															},
															"nativeSrc": "4273:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "4273:22:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4311:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4311:6:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4319:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "4319:2:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4304:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4304:6:13"
																},
																"nativeSrc": "4304:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4304:18:13"
															},
															"nativeSrc": "4304:18:13",
															"nodeType": "YulExpressionStatement",
															"src": "4304:18:13"
														},
														{
															"body": {
																"nativeSrc": "4368:16:13",
																"nodeType": "YulBlock",
																"src": "4368:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4377:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4377:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4380:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4380:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4370:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4370:6:13"
																			},
																			"nativeSrc": "4370:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4370:12:13"
																		},
																		"nativeSrc": "4370:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4370:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "4345:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4345:2:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4349:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4349:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4341:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4341:3:13"
																				},
																				"nativeSrc": "4341:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4341:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4354:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4354:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4337:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4337:3:13"
																		},
																		"nativeSrc": "4337:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4337:20:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4359:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "4359:7:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4334:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4334:2:13"
																},
																"nativeSrc": "4334:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4334:33:13"
															},
															"nativeSrc": "4331:53:13",
															"nodeType": "YulIf",
															"src": "4331:53:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4410:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4410:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4418:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4418:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4406:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4406:3:13"
																		},
																		"nativeSrc": "4406:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4406:15:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "4427:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:2:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4431:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4431:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4423:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4423:3:13"
																		},
																		"nativeSrc": "4423:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4423:11:13"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "4436:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "4436:2:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4393:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4393:12:13"
																},
																"nativeSrc": "4393:46:13",
																"nodeType": "YulFunctionCall",
																"src": "4393:46:13"
															},
															"nativeSrc": "4393:46:13",
															"nodeType": "YulExpressionStatement",
															"src": "4393:46:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4463:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4463:6:13"
																					},
																					{
																						"name": "_3",
																						"nativeSrc": "4471:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4471:2:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4459:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4459:3:13"
																				},
																				"nativeSrc": "4459:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4459:15:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4476:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4476:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4455:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4455:3:13"
																		},
																		"nativeSrc": "4455:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4455:24:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4481:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4481:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4448:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4448:6:13"
																},
																"nativeSrc": "4448:35:13",
																"nodeType": "YulFunctionCall",
																"src": "4448:35:13"
															},
															"nativeSrc": "4448:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "4448:35:13"
														},
														{
															"nativeSrc": "4492:16:13",
															"nodeType": "YulAssignment",
															"src": "4492:16:13",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4502:6:13",
																"nodeType": "YulIdentifier",
																"src": "4502:6:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4492:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4492:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3458:1056:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3512:9:13",
														"nodeType": "YulTypedName",
														"src": "3512:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3523:7:13",
														"nodeType": "YulTypedName",
														"src": "3523:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3535:6:13",
														"nodeType": "YulTypedName",
														"src": "3535:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3543:6:13",
														"nodeType": "YulTypedName",
														"src": "3543:6:13",
														"type": ""
													}
												],
												"src": "3458:1056:13"
											},
											{
												"body": {
													"nativeSrc": "4620:76:13",
													"nodeType": "YulBlock",
													"src": "4620:76:13",
													"statements": [
														{
															"nativeSrc": "4630:26:13",
															"nodeType": "YulAssignment",
															"src": "4630:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:13"
																},
																"nativeSrc": "4638:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4672:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4672:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4683:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4683:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4665:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4665:6:13"
																},
																"nativeSrc": "4665:25:13",
																"nodeType": "YulFunctionCall",
																"src": "4665:25:13"
															},
															"nativeSrc": "4665:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "4665:25:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "4519:177:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4589:9:13",
														"nodeType": "YulTypedName",
														"src": "4589:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4600:6:13",
														"nodeType": "YulTypedName",
														"src": "4600:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4611:4:13",
														"nodeType": "YulTypedName",
														"src": "4611:4:13",
														"type": ""
													}
												],
												"src": "4519:177:13"
											},
											{
												"body": {
													"nativeSrc": "4796:92:13",
													"nodeType": "YulBlock",
													"src": "4796:92:13",
													"statements": [
														{
															"nativeSrc": "4806:26:13",
															"nodeType": "YulAssignment",
															"src": "4806:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4818:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4818:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4829:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4829:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4814:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4814:3:13"
																},
																"nativeSrc": "4814:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4814:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4806:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4806:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4848:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4848:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "4873:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4873:6:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4866:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4866:6:13"
																				},
																				"nativeSrc": "4866:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4866:14:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4859:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4859:6:13"
																		},
																		"nativeSrc": "4859:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4859:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4841:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4841:6:13"
																},
																"nativeSrc": "4841:41:13",
																"nodeType": "YulFunctionCall",
																"src": "4841:41:13"
															},
															"nativeSrc": "4841:41:13",
															"nodeType": "YulExpressionStatement",
															"src": "4841:41:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4701:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4765:9:13",
														"nodeType": "YulTypedName",
														"src": "4765:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4776:6:13",
														"nodeType": "YulTypedName",
														"src": "4776:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4787:4:13",
														"nodeType": "YulTypedName",
														"src": "4787:4:13",
														"type": ""
													}
												],
												"src": "4701:187:13"
											},
											{
												"body": {
													"nativeSrc": "5016:422:13",
													"nodeType": "YulBlock",
													"src": "5016:422:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5062:16:13",
																"nodeType": "YulBlock",
																"src": "5062:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5071:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5071:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5074:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5074:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5064:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5064:6:13"
																			},
																			"nativeSrc": "5064:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5064:12:13"
																		},
																		"nativeSrc": "5064:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5064:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5037:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5037:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5046:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5046:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5033:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5033:3:13"
																		},
																		"nativeSrc": "5033:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5033:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5058:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5058:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5029:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5029:3:13"
																},
																"nativeSrc": "5029:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5029:32:13"
															},
															"nativeSrc": "5026:52:13",
															"nodeType": "YulIf",
															"src": "5026:52:13"
														},
														{
															"nativeSrc": "5087:33:13",
															"nodeType": "YulAssignment",
															"src": "5087:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5110:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5110:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5097:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5097:12:13"
																},
																"nativeSrc": "5097:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5097:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5087:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:13"
																}
															]
														},
														{
															"nativeSrc": "5129:42:13",
															"nodeType": "YulAssignment",
															"src": "5129:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5156:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5156:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5167:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5167:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5152:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5152:3:13"
																		},
																		"nativeSrc": "5152:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5152:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5139:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5139:12:13"
																},
																"nativeSrc": "5139:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5139:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5129:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5129:6:13"
																}
															]
														},
														{
															"nativeSrc": "5180:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5180:46:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5211:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5211:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5222:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5222:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5207:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5207:3:13"
																		},
																		"nativeSrc": "5207:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5207:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5194:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5194:12:13"
																},
																"nativeSrc": "5194:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5194:32:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5184:6:13",
																	"nodeType": "YulTypedName",
																	"src": "5184:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5269:16:13",
																"nodeType": "YulBlock",
																"src": "5269:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5278:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5278:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5281:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5281:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5271:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5271:6:13"
																			},
																			"nativeSrc": "5271:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5271:12:13"
																		},
																		"nativeSrc": "5271:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5271:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5241:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5241:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5249:18:13",
																		"nodeType": "YulLiteral",
																		"src": "5249:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5238:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5238:2:13"
																},
																"nativeSrc": "5238:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5238:30:13"
															},
															"nativeSrc": "5235:50:13",
															"nodeType": "YulIf",
															"src": "5235:50:13"
														},
														{
															"nativeSrc": "5294:84:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5294:84:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5350:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5350:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5361:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5361:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5346:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5346:3:13"
																		},
																		"nativeSrc": "5346:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5346:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5370:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5370:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nativeSrc": "5320:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "5320:25:13"
																},
																"nativeSrc": "5320:58:13",
																"nodeType": "YulFunctionCall",
																"src": "5320:58:13"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "5298:8:13",
																	"nodeType": "YulTypedName",
																	"src": "5298:8:13",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "5308:8:13",
																	"nodeType": "YulTypedName",
																	"src": "5308:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5387:18:13",
															"nodeType": "YulAssignment",
															"src": "5387:18:13",
															"value": {
																"name": "value2_1",
																"nativeSrc": "5397:8:13",
																"nodeType": "YulIdentifier",
																"src": "5397:8:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5387:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5387:6:13"
																}
															]
														},
														{
															"nativeSrc": "5414:18:13",
															"nodeType": "YulAssignment",
															"src": "5414:18:13",
															"value": {
																"name": "value3_1",
																"nativeSrc": "5424:8:13",
																"nodeType": "YulIdentifier",
																"src": "5424:8:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5414:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5414:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr",
												"nativeSrc": "4893:545:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4958:9:13",
														"nodeType": "YulTypedName",
														"src": "4958:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4969:7:13",
														"nodeType": "YulTypedName",
														"src": "4969:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4981:6:13",
														"nodeType": "YulTypedName",
														"src": "4981:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4989:6:13",
														"nodeType": "YulTypedName",
														"src": "4989:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4997:6:13",
														"nodeType": "YulTypedName",
														"src": "4997:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5005:6:13",
														"nodeType": "YulTypedName",
														"src": "5005:6:13",
														"type": ""
													}
												],
												"src": "4893:545:13"
											},
											{
												"body": {
													"nativeSrc": "5547:279:13",
													"nodeType": "YulBlock",
													"src": "5547:279:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5593:16:13",
																"nodeType": "YulBlock",
																"src": "5593:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5602:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5602:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5605:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5605:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5595:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5595:6:13"
																			},
																			"nativeSrc": "5595:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5595:12:13"
																		},
																		"nativeSrc": "5595:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5595:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5568:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5568:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5577:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5577:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5564:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5564:3:13"
																		},
																		"nativeSrc": "5564:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5564:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5589:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5560:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:13"
																},
																"nativeSrc": "5560:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5560:32:13"
															},
															"nativeSrc": "5557:52:13",
															"nodeType": "YulIf",
															"src": "5557:52:13"
														},
														{
															"nativeSrc": "5618:36:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5618:36:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5644:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5644:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5631:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5631:12:13"
																},
																"nativeSrc": "5631:23:13",
																"nodeType": "YulFunctionCall",
																"src": "5631:23:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5622:5:13",
																	"nodeType": "YulTypedName",
																	"src": "5622:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5688:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5688:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5663:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "5663:24:13"
																},
																"nativeSrc": "5663:31:13",
																"nodeType": "YulFunctionCall",
																"src": "5663:31:13"
															},
															"nativeSrc": "5663:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "5663:31:13"
														},
														{
															"nativeSrc": "5703:15:13",
															"nodeType": "YulAssignment",
															"src": "5703:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "5713:5:13",
																"nodeType": "YulIdentifier",
																"src": "5713:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5703:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5703:6:13"
																}
															]
														},
														{
															"nativeSrc": "5727:42:13",
															"nodeType": "YulAssignment",
															"src": "5727:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5754:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5754:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5765:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5765:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5750:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5750:3:13"
																		},
																		"nativeSrc": "5750:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5750:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5737:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5737:12:13"
																},
																"nativeSrc": "5737:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5737:32:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5727:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5727:6:13"
																}
															]
														},
														{
															"nativeSrc": "5778:42:13",
															"nodeType": "YulAssignment",
															"src": "5778:42:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5805:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5805:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5816:2:13",
																				"nodeType": "YulLiteral",
																				"src": "5816:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5801:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5801:3:13"
																		},
																		"nativeSrc": "5801:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5801:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5788:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5788:12:13"
																},
																"nativeSrc": "5788:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5788:32:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5778:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5778:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "5443:383:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5497:9:13",
														"nodeType": "YulTypedName",
														"src": "5497:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5508:7:13",
														"nodeType": "YulTypedName",
														"src": "5508:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5520:6:13",
														"nodeType": "YulTypedName",
														"src": "5520:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5528:6:13",
														"nodeType": "YulTypedName",
														"src": "5528:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5536:6:13",
														"nodeType": "YulTypedName",
														"src": "5536:6:13",
														"type": ""
													}
												],
												"src": "5443:383:13"
											},
											{
												"body": {
													"nativeSrc": "5932:102:13",
													"nodeType": "YulBlock",
													"src": "5932:102:13",
													"statements": [
														{
															"nativeSrc": "5942:26:13",
															"nodeType": "YulAssignment",
															"src": "5942:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5954:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5954:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5965:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5950:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5950:3:13"
																},
																"nativeSrc": "5950:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5950:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5942:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5942:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5984:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5984:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5999:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5999:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6015:3:13",
																								"nodeType": "YulLiteral",
																								"src": "6015:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6020:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6020:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6011:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6011:3:13"
																						},
																						"nativeSrc": "6011:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6011:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6024:1:13",
																						"nodeType": "YulLiteral",
																						"src": "6024:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6007:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6007:3:13"
																				},
																				"nativeSrc": "6007:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6007:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5995:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5995:3:13"
																		},
																		"nativeSrc": "5995:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5995:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5977:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:13"
																},
																"nativeSrc": "5977:51:13",
																"nodeType": "YulFunctionCall",
																"src": "5977:51:13"
															},
															"nativeSrc": "5977:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "5977:51:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5831:203:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5901:9:13",
														"nodeType": "YulTypedName",
														"src": "5901:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5912:6:13",
														"nodeType": "YulTypedName",
														"src": "5912:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5923:4:13",
														"nodeType": "YulTypedName",
														"src": "5923:4:13",
														"type": ""
													}
												],
												"src": "5831:203:13"
											},
											{
												"body": {
													"nativeSrc": "6160:297:13",
													"nodeType": "YulBlock",
													"src": "6160:297:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6177:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6177:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6188:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6188:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6170:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6170:6:13"
																},
																"nativeSrc": "6170:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6170:21:13"
															},
															"nativeSrc": "6170:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "6170:21:13"
														},
														{
															"nativeSrc": "6200:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6200:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6220:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6220:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6214:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6214:5:13"
																},
																"nativeSrc": "6214:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6214:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6204:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6204:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6247:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6247:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6258:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6258:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6243:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6243:3:13"
																		},
																		"nativeSrc": "6243:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6243:18:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6263:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6263:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6236:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:13"
																},
																"nativeSrc": "6236:34:13",
																"nodeType": "YulFunctionCall",
																"src": "6236:34:13"
															},
															"nativeSrc": "6236:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "6236:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6289:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6289:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6300:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6300:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6285:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6285:3:13"
																		},
																		"nativeSrc": "6285:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6285:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6309:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6309:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6317:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6317:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6305:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6305:3:13"
																		},
																		"nativeSrc": "6305:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6305:15:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6322:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6322:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "6279:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6279:5:13"
																},
																"nativeSrc": "6279:50:13",
																"nodeType": "YulFunctionCall",
																"src": "6279:50:13"
															},
															"nativeSrc": "6279:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "6279:50:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6353:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6353:9:13"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "6364:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6364:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6349:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6349:3:13"
																				},
																				"nativeSrc": "6349:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6349:22:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6373:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6373:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6345:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6345:3:13"
																		},
																		"nativeSrc": "6345:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:31:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6378:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6338:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6338:6:13"
																},
																"nativeSrc": "6338:42:13",
																"nodeType": "YulFunctionCall",
																"src": "6338:42:13"
															},
															"nativeSrc": "6338:42:13",
															"nodeType": "YulExpressionStatement",
															"src": "6338:42:13"
														},
														{
															"nativeSrc": "6389:62:13",
															"nodeType": "YulAssignment",
															"src": "6389:62:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6405:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6405:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "6424:6:13",
																								"nodeType": "YulIdentifier",
																								"src": "6424:6:13"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6432:2:13",
																								"nodeType": "YulLiteral",
																								"src": "6432:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "6420:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6420:3:13"
																						},
																						"nativeSrc": "6420:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6420:15:13"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6441:2:13",
																								"nodeType": "YulLiteral",
																								"src": "6441:2:13",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "6437:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6437:3:13"
																						},
																						"nativeSrc": "6437:7:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6437:7:13"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "6416:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6416:3:13"
																				},
																				"nativeSrc": "6416:29:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6416:29:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6401:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6401:3:13"
																		},
																		"nativeSrc": "6401:45:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6401:45:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6448:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6448:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6397:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6397:3:13"
																},
																"nativeSrc": "6397:54:13",
																"nodeType": "YulFunctionCall",
																"src": "6397:54:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6389:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6389:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6039:418:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6129:9:13",
														"nodeType": "YulTypedName",
														"src": "6129:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6140:6:13",
														"nodeType": "YulTypedName",
														"src": "6140:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6151:4:13",
														"nodeType": "YulTypedName",
														"src": "6151:4:13",
														"type": ""
													}
												],
												"src": "6039:418:13"
											},
											{
												"body": {
													"nativeSrc": "6619:616:13",
													"nodeType": "YulBlock",
													"src": "6619:616:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6665:16:13",
																"nodeType": "YulBlock",
																"src": "6665:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6674:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6674:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6677:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6667:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6667:6:13"
																			},
																			"nativeSrc": "6667:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6667:12:13"
																		},
																		"nativeSrc": "6667:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6667:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6640:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6640:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6649:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6649:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6636:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6636:3:13"
																		},
																		"nativeSrc": "6636:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6636:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6661:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6661:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6632:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6632:3:13"
																},
																"nativeSrc": "6632:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6632:32:13"
															},
															"nativeSrc": "6629:52:13",
															"nodeType": "YulIf",
															"src": "6629:52:13"
														},
														{
															"nativeSrc": "6690:37:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6690:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6717:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6717:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6704:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6704:12:13"
																},
																"nativeSrc": "6704:23:13",
																"nodeType": "YulFunctionCall",
																"src": "6704:23:13"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6694:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6694:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6736:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6736:28:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6746:18:13",
																"nodeType": "YulLiteral",
																"src": "6746:18:13",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6740:2:13",
																	"nodeType": "YulTypedName",
																	"src": "6740:2:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6791:16:13",
																"nodeType": "YulBlock",
																"src": "6791:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6800:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6800:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6803:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6803:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6793:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6793:6:13"
																			},
																			"nativeSrc": "6793:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6793:12:13"
																		},
																		"nativeSrc": "6793:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6793:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6779:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6779:6:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6787:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "6787:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6776:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6776:2:13"
																},
																"nativeSrc": "6776:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6776:14:13"
															},
															"nativeSrc": "6773:34:13",
															"nodeType": "YulIf",
															"src": "6773:34:13"
														},
														{
															"nativeSrc": "6816:96:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6816:96:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6884:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6884:9:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "6895:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6895:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6880:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:13"
																		},
																		"nativeSrc": "6880:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6880:22:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6904:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "6904:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "6842:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "6842:37:13"
																},
																"nativeSrc": "6842:70:13",
																"nodeType": "YulFunctionCall",
																"src": "6842:70:13"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nativeSrc": "6820:8:13",
																	"nodeType": "YulTypedName",
																	"src": "6820:8:13",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nativeSrc": "6830:8:13",
																	"nodeType": "YulTypedName",
																	"src": "6830:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6921:18:13",
															"nodeType": "YulAssignment",
															"src": "6921:18:13",
															"value": {
																"name": "value0_1",
																"nativeSrc": "6931:8:13",
																"nodeType": "YulIdentifier",
																"src": "6931:8:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6921:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6921:6:13"
																}
															]
														},
														{
															"nativeSrc": "6948:18:13",
															"nodeType": "YulAssignment",
															"src": "6948:18:13",
															"value": {
																"name": "value1_1",
																"nativeSrc": "6958:8:13",
																"nodeType": "YulIdentifier",
																"src": "6958:8:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6948:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6948:6:13"
																}
															]
														},
														{
															"nativeSrc": "6975:48:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6975:48:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7008:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7008:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7019:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7019:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7004:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7004:3:13"
																		},
																		"nativeSrc": "7004:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7004:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6991:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "6991:12:13"
																},
																"nativeSrc": "6991:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6991:32:13"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "6979:8:13",
																	"nodeType": "YulTypedName",
																	"src": "6979:8:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7052:16:13",
																"nodeType": "YulBlock",
																"src": "7052:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7061:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7061:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7064:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7064:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7054:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7054:6:13"
																			},
																			"nativeSrc": "7054:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7054:12:13"
																		},
																		"nativeSrc": "7054:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7054:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "7038:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "7038:8:13"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "7048:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "7048:2:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7035:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7035:2:13"
																},
																"nativeSrc": "7035:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7035:16:13"
															},
															"nativeSrc": "7032:36:13",
															"nodeType": "YulIf",
															"src": "7032:36:13"
														},
														{
															"nativeSrc": "7077:98:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7077:98:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7145:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7145:9:13"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "7156:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "7156:8:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7141:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:13"
																		},
																		"nativeSrc": "7141:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7141:24:13"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "7167:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "7167:7:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "7103:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "7103:37:13"
																},
																"nativeSrc": "7103:72:13",
																"nodeType": "YulFunctionCall",
																"src": "7103:72:13"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nativeSrc": "7081:8:13",
																	"nodeType": "YulTypedName",
																	"src": "7081:8:13",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nativeSrc": "7091:8:13",
																	"nodeType": "YulTypedName",
																	"src": "7091:8:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7184:18:13",
															"nodeType": "YulAssignment",
															"src": "7184:18:13",
															"value": {
																"name": "value2_1",
																"nativeSrc": "7194:8:13",
																"nodeType": "YulIdentifier",
																"src": "7194:8:13"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "7184:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7184:6:13"
																}
															]
														},
														{
															"nativeSrc": "7211:18:13",
															"nodeType": "YulAssignment",
															"src": "7211:18:13",
															"value": {
																"name": "value3_1",
																"nativeSrc": "7221:8:13",
																"nodeType": "YulIdentifier",
																"src": "7221:8:13"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "7211:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "6462:773:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6561:9:13",
														"nodeType": "YulTypedName",
														"src": "6561:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6572:7:13",
														"nodeType": "YulTypedName",
														"src": "6572:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6584:6:13",
														"nodeType": "YulTypedName",
														"src": "6584:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6592:6:13",
														"nodeType": "YulTypedName",
														"src": "6592:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6600:6:13",
														"nodeType": "YulTypedName",
														"src": "6600:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6608:6:13",
														"nodeType": "YulTypedName",
														"src": "6608:6:13",
														"type": ""
													}
												],
												"src": "6462:773:13"
											},
											{
												"body": {
													"nativeSrc": "7282:76:13",
													"nodeType": "YulBlock",
													"src": "7282:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7336:16:13",
																"nodeType": "YulBlock",
																"src": "7336:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7345:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7345:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7348:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7348:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7338:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7338:6:13"
																			},
																			"nativeSrc": "7338:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7338:12:13"
																		},
																		"nativeSrc": "7338:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7338:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7305:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7305:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7326:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "7326:5:13"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7319:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "7319:6:13"
																						},
																						"nativeSrc": "7319:13:13",
																						"nodeType": "YulFunctionCall",
																						"src": "7319:13:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7312:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "7312:6:13"
																				},
																				"nativeSrc": "7312:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7312:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7302:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "7302:2:13"
																		},
																		"nativeSrc": "7302:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7302:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7295:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7295:6:13"
																},
																"nativeSrc": "7295:40:13",
																"nodeType": "YulFunctionCall",
																"src": "7295:40:13"
															},
															"nativeSrc": "7292:60:13",
															"nodeType": "YulIf",
															"src": "7292:60:13"
														}
													]
												},
												"name": "validator_revert_bool",
												"nativeSrc": "7240:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7271:5:13",
														"nodeType": "YulTypedName",
														"src": "7271:5:13",
														"type": ""
													}
												],
												"src": "7240:118:13"
											},
											{
												"body": {
													"nativeSrc": "7447:225:13",
													"nodeType": "YulBlock",
													"src": "7447:225:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7493:16:13",
																"nodeType": "YulBlock",
																"src": "7493:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7502:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7502:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7505:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7505:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7495:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7495:6:13"
																			},
																			"nativeSrc": "7495:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7495:12:13"
																		},
																		"nativeSrc": "7495:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7495:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7468:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7468:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7477:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7477:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7464:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7464:3:13"
																		},
																		"nativeSrc": "7464:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7464:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7489:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7489:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7460:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:13"
																},
																"nativeSrc": "7460:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7460:32:13"
															},
															"nativeSrc": "7457:52:13",
															"nodeType": "YulIf",
															"src": "7457:52:13"
														},
														{
															"nativeSrc": "7518:33:13",
															"nodeType": "YulAssignment",
															"src": "7518:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7541:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7541:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7528:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7528:12:13"
																},
																"nativeSrc": "7528:23:13",
																"nodeType": "YulFunctionCall",
																"src": "7528:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7518:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7518:6:13"
																}
															]
														},
														{
															"nativeSrc": "7560:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7560:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7590:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7590:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7601:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7601:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7586:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:13"
																		},
																		"nativeSrc": "7586:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7586:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7573:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7573:12:13"
																},
																"nativeSrc": "7573:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7573:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7564:5:13",
																	"nodeType": "YulTypedName",
																	"src": "7564:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7636:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7636:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "7614:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "7614:21:13"
																},
																"nativeSrc": "7614:28:13",
																"nodeType": "YulFunctionCall",
																"src": "7614:28:13"
															},
															"nativeSrc": "7614:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "7614:28:13"
														},
														{
															"nativeSrc": "7651:15:13",
															"nodeType": "YulAssignment",
															"src": "7651:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "7661:5:13",
																"nodeType": "YulIdentifier",
																"src": "7661:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7651:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7651:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "7363:309:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7405:9:13",
														"nodeType": "YulTypedName",
														"src": "7405:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7416:7:13",
														"nodeType": "YulTypedName",
														"src": "7416:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7428:6:13",
														"nodeType": "YulTypedName",
														"src": "7428:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7436:6:13",
														"nodeType": "YulTypedName",
														"src": "7436:6:13",
														"type": ""
													}
												],
												"src": "7363:309:13"
											},
											{
												"body": {
													"nativeSrc": "7764:228:13",
													"nodeType": "YulBlock",
													"src": "7764:228:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7810:16:13",
																"nodeType": "YulBlock",
																"src": "7810:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7819:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7819:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7822:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7822:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7812:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7812:6:13"
																			},
																			"nativeSrc": "7812:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7812:12:13"
																		},
																		"nativeSrc": "7812:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7812:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7785:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7785:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7794:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7794:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7781:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7781:3:13"
																		},
																		"nativeSrc": "7781:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7781:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7806:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7806:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7777:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7777:3:13"
																},
																"nativeSrc": "7777:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7777:32:13"
															},
															"nativeSrc": "7774:52:13",
															"nodeType": "YulIf",
															"src": "7774:52:13"
														},
														{
															"nativeSrc": "7835:33:13",
															"nodeType": "YulAssignment",
															"src": "7835:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7858:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7858:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7845:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7845:12:13"
																},
																"nativeSrc": "7845:23:13",
																"nodeType": "YulFunctionCall",
																"src": "7845:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7835:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7835:6:13"
																}
															]
														},
														{
															"nativeSrc": "7877:45:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7877:45:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7907:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7907:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7918:2:13",
																				"nodeType": "YulLiteral",
																				"src": "7918:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7903:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7903:3:13"
																		},
																		"nativeSrc": "7903:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7903:18:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7890:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7890:12:13"
																},
																"nativeSrc": "7890:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7890:32:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7881:5:13",
																	"nodeType": "YulTypedName",
																	"src": "7881:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7956:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7956:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "7931:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "7931:24:13"
																},
																"nativeSrc": "7931:31:13",
																"nodeType": "YulFunctionCall",
																"src": "7931:31:13"
															},
															"nativeSrc": "7931:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "7931:31:13"
														},
														{
															"nativeSrc": "7971:15:13",
															"nodeType": "YulAssignment",
															"src": "7971:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "7981:5:13",
																"nodeType": "YulIdentifier",
																"src": "7981:5:13"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "7971:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7971:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "7677:315:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7722:9:13",
														"nodeType": "YulTypedName",
														"src": "7722:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7733:7:13",
														"nodeType": "YulTypedName",
														"src": "7733:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7745:6:13",
														"nodeType": "YulTypedName",
														"src": "7745:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7753:6:13",
														"nodeType": "YulTypedName",
														"src": "7753:6:13",
														"type": ""
													}
												],
												"src": "7677:315:13"
											},
											{
												"body": {
													"nativeSrc": "8067:110:13",
													"nodeType": "YulBlock",
													"src": "8067:110:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8113:16:13",
																"nodeType": "YulBlock",
																"src": "8113:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8122:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8122:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8125:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8125:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8115:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8115:6:13"
																			},
																			"nativeSrc": "8115:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8115:12:13"
																		},
																		"nativeSrc": "8115:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8115:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8088:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8088:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8097:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8097:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8084:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8084:3:13"
																		},
																		"nativeSrc": "8084:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8084:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8109:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8109:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8080:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8080:3:13"
																},
																"nativeSrc": "8080:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8080:32:13"
															},
															"nativeSrc": "8077:52:13",
															"nodeType": "YulIf",
															"src": "8077:52:13"
														},
														{
															"nativeSrc": "8138:33:13",
															"nodeType": "YulAssignment",
															"src": "8138:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8161:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8161:9:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8148:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8148:12:13"
																},
																"nativeSrc": "8148:23:13",
																"nodeType": "YulFunctionCall",
																"src": "8148:23:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8138:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8138:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "7997:180:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8033:9:13",
														"nodeType": "YulTypedName",
														"src": "8033:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8044:7:13",
														"nodeType": "YulTypedName",
														"src": "8044:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8056:6:13",
														"nodeType": "YulTypedName",
														"src": "8056:6:13",
														"type": ""
													}
												],
												"src": "7997:180:13"
											},
											{
												"body": {
													"nativeSrc": "8356:224:13",
													"nodeType": "YulBlock",
													"src": "8356:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8373:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8373:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8384:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8384:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8366:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8366:6:13"
																},
																"nativeSrc": "8366:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8366:21:13"
															},
															"nativeSrc": "8366:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8366:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8407:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8407:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8418:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8418:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8403:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8403:3:13"
																		},
																		"nativeSrc": "8403:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8403:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8423:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8423:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8396:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8396:6:13"
																},
																"nativeSrc": "8396:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8396:30:13"
															},
															"nativeSrc": "8396:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8396:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8446:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8446:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8457:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8457:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8442:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8442:3:13"
																		},
																		"nativeSrc": "8442:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8442:18:13"
																	},
																	{
																		"hexValue": "4f6e6c792061646d696e2063616e20706572666f726d20746869732061637469",
																		"kind": "string",
																		"nativeSrc": "8462:34:13",
																		"nodeType": "YulLiteral",
																		"src": "8462:34:13",
																		"type": "",
																		"value": "Only admin can perform this acti"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8435:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8435:6:13"
																},
																"nativeSrc": "8435:62:13",
																"nodeType": "YulFunctionCall",
																"src": "8435:62:13"
															},
															"nativeSrc": "8435:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "8435:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8517:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8517:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8528:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8528:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8513:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8513:3:13"
																		},
																		"nativeSrc": "8513:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8513:18:13"
																	},
																	{
																		"hexValue": "6f6e",
																		"kind": "string",
																		"nativeSrc": "8533:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8533:4:13",
																		"type": "",
																		"value": "on"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8506:6:13"
																},
																"nativeSrc": "8506:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8506:32:13"
															},
															"nativeSrc": "8506:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "8506:32:13"
														},
														{
															"nativeSrc": "8547:27:13",
															"nodeType": "YulAssignment",
															"src": "8547:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8559:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8559:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8570:3:13",
																		"nodeType": "YulLiteral",
																		"src": "8570:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8555:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8555:3:13"
																},
																"nativeSrc": "8555:19:13",
																"nodeType": "YulFunctionCall",
																"src": "8555:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8547:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8547:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8182:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8333:9:13",
														"nodeType": "YulTypedName",
														"src": "8333:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8347:4:13",
														"nodeType": "YulTypedName",
														"src": "8347:4:13",
														"type": ""
													}
												],
												"src": "8182:398:13"
											},
											{
												"body": {
													"nativeSrc": "8759:178:13",
													"nodeType": "YulBlock",
													"src": "8759:178:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8776:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8776:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8787:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8787:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8769:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8769:6:13"
																},
																"nativeSrc": "8769:21:13",
																"nodeType": "YulFunctionCall",
																"src": "8769:21:13"
															},
															"nativeSrc": "8769:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "8769:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8810:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8810:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8821:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8821:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8806:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8806:3:13"
																		},
																		"nativeSrc": "8806:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8806:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8826:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8826:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8799:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8799:6:13"
																},
																"nativeSrc": "8799:30:13",
																"nodeType": "YulFunctionCall",
																"src": "8799:30:13"
															},
															"nativeSrc": "8799:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "8799:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8849:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8849:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8860:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8860:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8845:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8845:3:13"
																		},
																		"nativeSrc": "8845:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8845:18:13"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420726573657276652062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "8865:30:13",
																		"nodeType": "YulLiteral",
																		"src": "8865:30:13",
																		"type": "",
																		"value": "Insufficient reserve balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8838:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8838:6:13"
																},
																"nativeSrc": "8838:58:13",
																"nodeType": "YulFunctionCall",
																"src": "8838:58:13"
															},
															"nativeSrc": "8838:58:13",
															"nodeType": "YulExpressionStatement",
															"src": "8838:58:13"
														},
														{
															"nativeSrc": "8905:26:13",
															"nodeType": "YulAssignment",
															"src": "8905:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8917:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8917:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8928:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8928:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8913:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8913:3:13"
																},
																"nativeSrc": "8913:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8913:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8905:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8905:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cdf9e6197a88065780004678deea3b846694aaad5855c66c624a70732fc50f1f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8585:352:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8736:9:13",
														"nodeType": "YulTypedName",
														"src": "8736:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8750:4:13",
														"nodeType": "YulTypedName",
														"src": "8750:4:13",
														"type": ""
													}
												],
												"src": "8585:352:13"
											},
											{
												"body": {
													"nativeSrc": "9071:145:13",
													"nodeType": "YulBlock",
													"src": "9071:145:13",
													"statements": [
														{
															"nativeSrc": "9081:26:13",
															"nodeType": "YulAssignment",
															"src": "9081:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9093:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9104:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9104:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9089:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9089:3:13"
																},
																"nativeSrc": "9089:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9089:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9081:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9081:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9123:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9123:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9138:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9138:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9154:3:13",
																								"nodeType": "YulLiteral",
																								"src": "9154:3:13",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9159:1:13",
																								"nodeType": "YulLiteral",
																								"src": "9159:1:13",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9150:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9150:3:13"
																						},
																						"nativeSrc": "9150:11:13",
																						"nodeType": "YulFunctionCall",
																						"src": "9150:11:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9163:1:13",
																						"nodeType": "YulLiteral",
																						"src": "9163:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9146:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9146:3:13"
																				},
																				"nativeSrc": "9146:19:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9146:19:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9134:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9134:3:13"
																		},
																		"nativeSrc": "9134:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9134:32:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9116:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:13"
																},
																"nativeSrc": "9116:51:13",
																"nodeType": "YulFunctionCall",
																"src": "9116:51:13"
															},
															"nativeSrc": "9116:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "9116:51:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9187:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9198:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9198:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9183:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:13"
																		},
																		"nativeSrc": "9183:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9183:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9203:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9203:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9176:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9176:6:13"
																},
																"nativeSrc": "9176:34:13",
																"nodeType": "YulFunctionCall",
																"src": "9176:34:13"
															},
															"nativeSrc": "9176:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "9176:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8942:274:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9032:9:13",
														"nodeType": "YulTypedName",
														"src": "9032:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9043:6:13",
														"nodeType": "YulTypedName",
														"src": "9043:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9051:6:13",
														"nodeType": "YulTypedName",
														"src": "9051:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9062:4:13",
														"nodeType": "YulTypedName",
														"src": "9062:4:13",
														"type": ""
													}
												],
												"src": "8942:274:13"
											},
											{
												"body": {
													"nativeSrc": "9299:167:13",
													"nodeType": "YulBlock",
													"src": "9299:167:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9345:16:13",
																"nodeType": "YulBlock",
																"src": "9345:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9354:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9354:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9357:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9357:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9347:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9347:6:13"
																			},
																			"nativeSrc": "9347:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9347:12:13"
																		},
																		"nativeSrc": "9347:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9347:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9320:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9320:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9329:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9329:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9316:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9316:3:13"
																		},
																		"nativeSrc": "9316:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9316:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9341:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9341:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9312:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9312:3:13"
																},
																"nativeSrc": "9312:32:13",
																"nodeType": "YulFunctionCall",
																"src": "9312:32:13"
															},
															"nativeSrc": "9309:52:13",
															"nodeType": "YulIf",
															"src": "9309:52:13"
														},
														{
															"nativeSrc": "9370:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "9370:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9389:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9389:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9383:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9383:5:13"
																},
																"nativeSrc": "9383:16:13",
																"nodeType": "YulFunctionCall",
																"src": "9383:16:13"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9374:5:13",
																	"nodeType": "YulTypedName",
																	"src": "9374:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9430:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9430:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nativeSrc": "9408:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "9408:21:13"
																},
																"nativeSrc": "9408:28:13",
																"nodeType": "YulFunctionCall",
																"src": "9408:28:13"
															},
															"nativeSrc": "9408:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "9408:28:13"
														},
														{
															"nativeSrc": "9445:15:13",
															"nodeType": "YulAssignment",
															"src": "9445:15:13",
															"value": {
																"name": "value",
																"nativeSrc": "9455:5:13",
																"nodeType": "YulIdentifier",
																"src": "9455:5:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9445:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9445:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9221:245:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9265:9:13",
														"nodeType": "YulTypedName",
														"src": "9265:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9276:7:13",
														"nodeType": "YulTypedName",
														"src": "9276:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9288:6:13",
														"nodeType": "YulTypedName",
														"src": "9288:6:13",
														"type": ""
													}
												],
												"src": "9221:245:13"
											},
											{
												"body": {
													"nativeSrc": "9645:165:13",
													"nodeType": "YulBlock",
													"src": "9645:165:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9662:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9662:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9673:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9673:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9655:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9655:6:13"
																},
																"nativeSrc": "9655:21:13",
																"nodeType": "YulFunctionCall",
																"src": "9655:21:13"
															},
															"nativeSrc": "9655:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "9655:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9696:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9696:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9707:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9707:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9692:3:13"
																		},
																		"nativeSrc": "9692:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9692:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9712:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9712:2:13",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9685:6:13"
																},
																"nativeSrc": "9685:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9685:30:13"
															},
															"nativeSrc": "9685:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9685:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9735:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9735:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9746:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9746:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9731:3:13"
																		},
																		"nativeSrc": "9731:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9731:18:13"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9751:17:13",
																		"nodeType": "YulLiteral",
																		"src": "9751:17:13",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9724:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9724:6:13"
																},
																"nativeSrc": "9724:45:13",
																"nodeType": "YulFunctionCall",
																"src": "9724:45:13"
															},
															"nativeSrc": "9724:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "9724:45:13"
														},
														{
															"nativeSrc": "9778:26:13",
															"nodeType": "YulAssignment",
															"src": "9778:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9790:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9790:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9801:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9801:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9786:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9786:3:13"
																},
																"nativeSrc": "9786:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9786:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9778:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9778:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9471:339:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9622:9:13",
														"nodeType": "YulTypedName",
														"src": "9622:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9636:4:13",
														"nodeType": "YulTypedName",
														"src": "9636:4:13",
														"type": ""
													}
												],
												"src": "9471:339:13"
											},
											{
												"body": {
													"nativeSrc": "9847:95:13",
													"nodeType": "YulBlock",
													"src": "9847:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9864:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9864:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9871:3:13",
																				"nodeType": "YulLiteral",
																				"src": "9871:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9876:10:13",
																				"nodeType": "YulLiteral",
																				"src": "9876:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9867:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9867:3:13"
																		},
																		"nativeSrc": "9867:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9867:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9857:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9857:6:13"
																},
																"nativeSrc": "9857:31:13",
																"nodeType": "YulFunctionCall",
																"src": "9857:31:13"
															},
															"nativeSrc": "9857:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "9857:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9904:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9904:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9907:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9907:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9897:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9897:6:13"
																},
																"nativeSrc": "9897:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9897:15:13"
															},
															"nativeSrc": "9897:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9897:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9928:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9928:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9931:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9931:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9921:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9921:6:13"
																},
																"nativeSrc": "9921:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9921:15:13"
															},
															"nativeSrc": "9921:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9921:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9815:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9815:127:13"
											},
											{
												"body": {
													"nativeSrc": "9996:79:13",
													"nodeType": "YulBlock",
													"src": "9996:79:13",
													"statements": [
														{
															"nativeSrc": "10006:17:13",
															"nodeType": "YulAssignment",
															"src": "10006:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10018:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10018:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10021:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10021:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "10014:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10014:3:13"
																},
																"nativeSrc": "10014:9:13",
																"nodeType": "YulFunctionCall",
																"src": "10014:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "10006:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10006:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10047:22:13",
																"nodeType": "YulBlock",
																"src": "10047:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10049:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "10049:16:13"
																			},
																			"nativeSrc": "10049:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10049:18:13"
																		},
																		"nativeSrc": "10049:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10049:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "10038:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10038:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "10044:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "10044:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10035:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10035:2:13"
																},
																"nativeSrc": "10035:11:13",
																"nodeType": "YulFunctionCall",
																"src": "10035:11:13"
															},
															"nativeSrc": "10032:37:13",
															"nodeType": "YulIf",
															"src": "10032:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9947:128:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9978:1:13",
														"nodeType": "YulTypedName",
														"src": "9978:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9981:1:13",
														"nodeType": "YulTypedName",
														"src": "9981:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9987:4:13",
														"nodeType": "YulTypedName",
														"src": "9987:4:13",
														"type": ""
													}
												],
												"src": "9947:128:13"
											},
											{
												"body": {
													"nativeSrc": "10254:236:13",
													"nodeType": "YulBlock",
													"src": "10254:236:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10271:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10271:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10282:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10282:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10264:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10264:6:13"
																},
																"nativeSrc": "10264:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10264:21:13"
															},
															"nativeSrc": "10264:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10264:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10305:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10305:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10316:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10316:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10301:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10301:3:13"
																		},
																		"nativeSrc": "10301:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10301:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10321:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10321:2:13",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10294:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10294:6:13"
																},
																"nativeSrc": "10294:30:13",
																"nodeType": "YulFunctionCall",
																"src": "10294:30:13"
															},
															"nativeSrc": "10294:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "10294:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10344:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10355:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10355:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10340:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10340:3:13"
																		},
																		"nativeSrc": "10340:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10340:18:13"
																	},
																	{
																		"hexValue": "5061727469636970616e747320616e64206e657742616c616e636573206c656e",
																		"kind": "string",
																		"nativeSrc": "10360:34:13",
																		"nodeType": "YulLiteral",
																		"src": "10360:34:13",
																		"type": "",
																		"value": "Participants and newBalances len"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10333:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10333:6:13"
																},
																"nativeSrc": "10333:62:13",
																"nodeType": "YulFunctionCall",
																"src": "10333:62:13"
															},
															"nativeSrc": "10333:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "10333:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10415:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10415:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10426:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10426:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10411:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10411:3:13"
																		},
																		"nativeSrc": "10411:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10411:18:13"
																	},
																	{
																		"hexValue": "677468206d757374206d61746368",
																		"kind": "string",
																		"nativeSrc": "10431:16:13",
																		"nodeType": "YulLiteral",
																		"src": "10431:16:13",
																		"type": "",
																		"value": "gth must match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:13"
																},
																"nativeSrc": "10404:44:13",
																"nodeType": "YulFunctionCall",
																"src": "10404:44:13"
															},
															"nativeSrc": "10404:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "10404:44:13"
														},
														{
															"nativeSrc": "10457:27:13",
															"nodeType": "YulAssignment",
															"src": "10457:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10469:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10469:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10480:3:13",
																		"nodeType": "YulLiteral",
																		"src": "10480:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10465:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10465:3:13"
																},
																"nativeSrc": "10465:19:13",
																"nodeType": "YulFunctionCall",
																"src": "10465:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10457:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10457:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b475f01e907c8525284c2d962568bfcaa3133ce2261739c842efe49e2028bae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10080:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10231:9:13",
														"nodeType": "YulTypedName",
														"src": "10231:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10245:4:13",
														"nodeType": "YulTypedName",
														"src": "10245:4:13",
														"type": ""
													}
												],
												"src": "10080:410:13"
											},
											{
												"body": {
													"nativeSrc": "10527:95:13",
													"nodeType": "YulBlock",
													"src": "10527:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10544:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10544:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10551:3:13",
																				"nodeType": "YulLiteral",
																				"src": "10551:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10556:10:13",
																				"nodeType": "YulLiteral",
																				"src": "10556:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10547:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10547:3:13"
																		},
																		"nativeSrc": "10547:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10547:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10537:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10537:6:13"
																},
																"nativeSrc": "10537:31:13",
																"nodeType": "YulFunctionCall",
																"src": "10537:31:13"
															},
															"nativeSrc": "10537:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "10537:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10584:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10584:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10587:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10587:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10577:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10577:6:13"
																},
																"nativeSrc": "10577:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10577:15:13"
															},
															"nativeSrc": "10577:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10577:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10608:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10608:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10611:4:13",
																		"nodeType": "YulLiteral",
																		"src": "10611:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10601:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10601:6:13"
																},
																"nativeSrc": "10601:15:13",
																"nodeType": "YulFunctionCall",
																"src": "10601:15:13"
															},
															"nativeSrc": "10601:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "10601:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10495:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "10495:127:13"
											},
											{
												"body": {
													"nativeSrc": "10876:810:13",
													"nodeType": "YulBlock",
													"src": "10876:810:13",
													"statements": [
														{
															"nativeSrc": "10886:32:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10886:32:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10904:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10904:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10915:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10915:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10900:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10900:3:13"
																},
																"nativeSrc": "10900:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10900:18:13"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "10890:6:13",
																	"nodeType": "YulTypedName",
																	"src": "10890:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10934:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10934:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10945:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10945:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10927:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10927:6:13"
																},
																"nativeSrc": "10927:21:13",
																"nodeType": "YulFunctionCall",
																"src": "10927:21:13"
															},
															"nativeSrc": "10927:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "10927:21:13"
														},
														{
															"nativeSrc": "10957:17:13",
															"nodeType": "YulVariableDeclaration",
															"src": "10957:17:13",
															"value": {
																"name": "tail_1",
																"nativeSrc": "10968:6:13",
																"nodeType": "YulIdentifier",
																"src": "10968:6:13"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "10961:3:13",
																	"nodeType": "YulTypedName",
																	"src": "10961:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nativeSrc": "10990:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10990:6:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10998:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10998:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10983:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10983:6:13"
																},
																"nativeSrc": "10983:22:13",
																"nodeType": "YulFunctionCall",
																"src": "10983:22:13"
															},
															"nativeSrc": "10983:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "10983:22:13"
														},
														{
															"nativeSrc": "11014:25:13",
															"nodeType": "YulAssignment",
															"src": "11014:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11025:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11025:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11036:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11036:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11021:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11021:3:13"
																},
																"nativeSrc": "11021:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11021:18:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11014:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11014:3:13"
																}
															]
														},
														{
															"nativeSrc": "11048:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11048:20:13",
															"value": {
																"name": "value0",
																"nativeSrc": "11062:6:13",
																"nodeType": "YulIdentifier",
																"src": "11062:6:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "11052:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11052:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11077:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11077:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "11086:1:13",
																"nodeType": "YulLiteral",
																"src": "11086:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "11081:1:13",
																	"nodeType": "YulTypedName",
																	"src": "11081:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11145:255:13",
																"nodeType": "YulBlock",
																"src": "11145:255:13",
																"statements": [
																	{
																		"nativeSrc": "11159:33:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11159:33:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "11185:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "11185:6:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "11172:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "11172:12:13"
																			},
																			"nativeSrc": "11172:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11172:20:13"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "11163:5:13",
																				"nodeType": "YulTypedName",
																				"src": "11163:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "11230:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "11230:5:13"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nativeSrc": "11205:24:13",
																				"nodeType": "YulIdentifier",
																				"src": "11205:24:13"
																			},
																			"nativeSrc": "11205:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11205:31:13"
																		},
																		"nativeSrc": "11205:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11205:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "11256:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11256:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "11265:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "11265:5:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11280:3:13",
																											"nodeType": "YulLiteral",
																											"src": "11280:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "11285:1:13",
																											"nodeType": "YulLiteral",
																											"src": "11285:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "11276:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "11276:3:13"
																									},
																									"nativeSrc": "11276:11:13",
																									"nodeType": "YulFunctionCall",
																									"src": "11276:11:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11289:1:13",
																									"nodeType": "YulLiteral",
																									"src": "11289:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "11272:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "11272:3:13"
																							},
																							"nativeSrc": "11272:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "11272:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11261:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "11261:3:13"
																					},
																					"nativeSrc": "11261:31:13",
																					"nodeType": "YulFunctionCall",
																					"src": "11261:31:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11249:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11249:6:13"
																			},
																			"nativeSrc": "11249:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11249:44:13"
																		},
																		"nativeSrc": "11249:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11249:44:13"
																	},
																	{
																		"nativeSrc": "11306:14:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11306:14:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "11316:4:13",
																			"nodeType": "YulLiteral",
																			"src": "11316:4:13",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "11310:2:13",
																				"nodeType": "YulTypedName",
																				"src": "11310:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11333:19:13",
																		"nodeType": "YulAssignment",
																		"src": "11333:19:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "11344:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11344:3:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11349:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "11349:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11340:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11340:3:13"
																			},
																			"nativeSrc": "11340:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11340:12:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "11333:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11333:3:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "11365:25:13",
																		"nodeType": "YulAssignment",
																		"src": "11365:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "11379:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "11379:6:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "11387:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "11387:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11375:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11375:3:13"
																			},
																			"nativeSrc": "11375:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11375:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "11365:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11365:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "11107:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11107:1:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11110:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11110:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11104:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11104:2:13"
																},
																"nativeSrc": "11104:13:13",
																"nodeType": "YulFunctionCall",
																"src": "11104:13:13"
															},
															"nativeSrc": "11096:304:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11118:18:13",
																"nodeType": "YulBlock",
																"src": "11118:18:13",
																"statements": [
																	{
																		"nativeSrc": "11120:14:13",
																		"nodeType": "YulAssignment",
																		"src": "11120:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "11129:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "11129:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11132:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11132:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11125:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11125:3:13"
																			},
																			"nativeSrc": "11125:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11125:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "11120:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "11120:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11100:3:13",
																"nodeType": "YulBlock",
																"src": "11100:3:13",
																"statements": []
															},
															"src": "11096:304:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11420:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11420:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11431:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11431:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11416:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11416:3:13"
																		},
																		"nativeSrc": "11416:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11416:20:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "11442:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11442:3:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11447:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11447:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11438:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11438:3:13"
																		},
																		"nativeSrc": "11438:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11438:19:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11409:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11409:6:13"
																},
																"nativeSrc": "11409:49:13",
																"nodeType": "YulFunctionCall",
																"src": "11409:49:13"
															},
															"nativeSrc": "11409:49:13",
															"nodeType": "YulExpressionStatement",
															"src": "11409:49:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11474:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11474:3:13"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11479:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11479:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11467:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11467:6:13"
																},
																"nativeSrc": "11467:19:13",
																"nodeType": "YulFunctionCall",
																"src": "11467:19:13"
															},
															"nativeSrc": "11467:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "11467:19:13"
														},
														{
															"body": {
																"nativeSrc": "11530:16:13",
																"nodeType": "YulBlock",
																"src": "11530:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11539:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11539:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11542:1:13",
																					"nodeType": "YulLiteral",
																					"src": "11542:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11532:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11532:6:13"
																			},
																			"nativeSrc": "11532:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11532:12:13"
																		},
																		"nativeSrc": "11532:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11532:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "11501:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11501:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "11517:3:13",
																						"nodeType": "YulLiteral",
																						"src": "11517:3:13",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11522:1:13",
																						"nodeType": "YulLiteral",
																						"src": "11522:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "11513:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11513:3:13"
																				},
																				"nativeSrc": "11513:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11513:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11526:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11526:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11509:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11509:3:13"
																		},
																		"nativeSrc": "11509:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11509:19:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11498:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11498:2:13"
																},
																"nativeSrc": "11498:31:13",
																"nodeType": "YulFunctionCall",
																"src": "11498:31:13"
															},
															"nativeSrc": "11495:51:13",
															"nodeType": "YulIf",
															"src": "11495:51:13"
														},
														{
															"nativeSrc": "11555:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11555:28:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11573:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11573:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11576:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11576:6:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11569:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11569:3:13"
																},
																"nativeSrc": "11569:14:13",
																"nodeType": "YulFunctionCall",
																"src": "11569:14:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11559:6:13",
																	"nodeType": "YulTypedName",
																	"src": "11559:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "11609:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11609:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11614:4:13",
																				"nodeType": "YulLiteral",
																				"src": "11614:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11605:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11605:3:13"
																		},
																		"nativeSrc": "11605:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11605:14:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11621:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11621:6:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11629:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "11629:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "11592:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "11592:12:13"
																},
																"nativeSrc": "11592:44:13",
																"nodeType": "YulFunctionCall",
																"src": "11592:44:13"
															},
															"nativeSrc": "11592:44:13",
															"nodeType": "YulExpressionStatement",
															"src": "11592:44:13"
														},
														{
															"nativeSrc": "11645:35:13",
															"nodeType": "YulAssignment",
															"src": "11645:35:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "11661:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11661:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11666:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11666:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11657:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11657:3:13"
																		},
																		"nativeSrc": "11657:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11657:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11675:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11675:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11653:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11653:3:13"
																},
																"nativeSrc": "11653:27:13",
																"nodeType": "YulFunctionCall",
																"src": "11653:27:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11645:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11645:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "10627:1059:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10821:9:13",
														"nodeType": "YulTypedName",
														"src": "10821:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10832:6:13",
														"nodeType": "YulTypedName",
														"src": "10832:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10840:6:13",
														"nodeType": "YulTypedName",
														"src": "10840:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10848:6:13",
														"nodeType": "YulTypedName",
														"src": "10848:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10856:6:13",
														"nodeType": "YulTypedName",
														"src": "10856:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10867:4:13",
														"nodeType": "YulTypedName",
														"src": "10867:4:13",
														"type": ""
													}
												],
												"src": "10627:1059:13"
											},
											{
												"body": {
													"nativeSrc": "11865:171:13",
													"nodeType": "YulBlock",
													"src": "11865:171:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11882:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11882:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11893:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11893:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11875:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11875:6:13"
																},
																"nativeSrc": "11875:21:13",
																"nodeType": "YulFunctionCall",
																"src": "11875:21:13"
															},
															"nativeSrc": "11875:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "11875:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11916:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11916:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11927:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11927:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11912:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11912:3:13"
																		},
																		"nativeSrc": "11912:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11912:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11932:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11932:2:13",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11905:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11905:6:13"
																},
																"nativeSrc": "11905:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11905:30:13"
															},
															"nativeSrc": "11905:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "11905:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11955:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11955:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11966:2:13",
																				"nodeType": "YulLiteral",
																				"src": "11966:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11951:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11951:3:13"
																		},
																		"nativeSrc": "11951:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11951:18:13"
																	},
																	{
																		"hexValue": "4e6f2062616c616e636520746f2064697370757465",
																		"kind": "string",
																		"nativeSrc": "11971:23:13",
																		"nodeType": "YulLiteral",
																		"src": "11971:23:13",
																		"type": "",
																		"value": "No balance to dispute"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11944:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11944:6:13"
																},
																"nativeSrc": "11944:51:13",
																"nodeType": "YulFunctionCall",
																"src": "11944:51:13"
															},
															"nativeSrc": "11944:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "11944:51:13"
														},
														{
															"nativeSrc": "12004:26:13",
															"nodeType": "YulAssignment",
															"src": "12004:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12016:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12016:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12027:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12027:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12012:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12012:3:13"
																},
																"nativeSrc": "12012:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12012:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12004:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12004:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a8f561be9ca21da69ebbb77e3440ef8a669abee74649c7cad3f33822531bfca__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11691:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11842:9:13",
														"nodeType": "YulTypedName",
														"src": "11842:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11856:4:13",
														"nodeType": "YulTypedName",
														"src": "11856:4:13",
														"type": ""
													}
												],
												"src": "11691:345:13"
											},
											{
												"body": {
													"nativeSrc": "12088:88:13",
													"nodeType": "YulBlock",
													"src": "12088:88:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12119:22:13",
																"nodeType": "YulBlock",
																"src": "12119:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12121:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12121:16:13"
																			},
																			"nativeSrc": "12121:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12121:18:13"
																		},
																		"nativeSrc": "12121:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12121:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12104:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12104:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12115:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12115:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "12111:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12111:3:13"
																		},
																		"nativeSrc": "12111:6:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12111:6:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12101:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12101:2:13"
																},
																"nativeSrc": "12101:17:13",
																"nodeType": "YulFunctionCall",
																"src": "12101:17:13"
															},
															"nativeSrc": "12098:43:13",
															"nodeType": "YulIf",
															"src": "12098:43:13"
														},
														{
															"nativeSrc": "12150:20:13",
															"nodeType": "YulAssignment",
															"src": "12150:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12161:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12161:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12168:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12168:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12157:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12157:3:13"
																},
																"nativeSrc": "12157:13:13",
																"nodeType": "YulFunctionCall",
																"src": "12157:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12150:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12150:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "12041:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12070:5:13",
														"nodeType": "YulTypedName",
														"src": "12070:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12080:3:13",
														"nodeType": "YulTypedName",
														"src": "12080:3:13",
														"type": ""
													}
												],
												"src": "12041:135:13"
											},
											{
												"body": {
													"nativeSrc": "12262:103:13",
													"nodeType": "YulBlock",
													"src": "12262:103:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "12308:16:13",
																"nodeType": "YulBlock",
																"src": "12308:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12317:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12317:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12320:1:13",
																					"nodeType": "YulLiteral",
																					"src": "12320:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12310:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12310:6:13"
																			},
																			"nativeSrc": "12310:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12310:12:13"
																		},
																		"nativeSrc": "12310:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12310:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12283:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "12283:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12292:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12292:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12279:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12279:3:13"
																		},
																		"nativeSrc": "12279:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12279:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12304:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12304:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12275:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12275:3:13"
																},
																"nativeSrc": "12275:32:13",
																"nodeType": "YulFunctionCall",
																"src": "12275:32:13"
															},
															"nativeSrc": "12272:52:13",
															"nodeType": "YulIf",
															"src": "12272:52:13"
														},
														{
															"nativeSrc": "12333:26:13",
															"nodeType": "YulAssignment",
															"src": "12333:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12349:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12349:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12343:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12343:5:13"
																},
																"nativeSrc": "12343:16:13",
																"nodeType": "YulFunctionCall",
																"src": "12343:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12333:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12333:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "12181:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12228:9:13",
														"nodeType": "YulTypedName",
														"src": "12228:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12239:7:13",
														"nodeType": "YulTypedName",
														"src": "12239:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12251:6:13",
														"nodeType": "YulTypedName",
														"src": "12251:6:13",
														"type": ""
													}
												],
												"src": "12181:184:13"
											},
											{
												"body": {
													"nativeSrc": "12478:101:13",
													"nodeType": "YulBlock",
													"src": "12478:101:13",
													"statements": [
														{
															"nativeSrc": "12488:26:13",
															"nodeType": "YulAssignment",
															"src": "12488:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12500:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12500:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12511:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12511:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12496:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12496:3:13"
																},
																"nativeSrc": "12496:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12496:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12488:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12488:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12530:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12530:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12545:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12545:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12553:18:13",
																				"nodeType": "YulLiteral",
																				"src": "12553:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12541:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12541:3:13"
																		},
																		"nativeSrc": "12541:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12541:31:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12523:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12523:6:13"
																},
																"nativeSrc": "12523:50:13",
																"nodeType": "YulFunctionCall",
																"src": "12523:50:13"
															},
															"nativeSrc": "12523:50:13",
															"nodeType": "YulExpressionStatement",
															"src": "12523:50:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "12370:209:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12447:9:13",
														"nodeType": "YulTypedName",
														"src": "12447:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12458:6:13",
														"nodeType": "YulTypedName",
														"src": "12458:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12469:4:13",
														"nodeType": "YulTypedName",
														"src": "12469:4:13",
														"type": ""
													}
												],
												"src": "12370:209:13"
											},
											{
												"body": {
													"nativeSrc": "12636:116:13",
													"nodeType": "YulBlock",
													"src": "12636:116:13",
													"statements": [
														{
															"nativeSrc": "12646:20:13",
															"nodeType": "YulAssignment",
															"src": "12646:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12661:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12661:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12664:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12664:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12657:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12657:3:13"
																},
																"nativeSrc": "12657:9:13",
																"nodeType": "YulFunctionCall",
																"src": "12657:9:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12646:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "12646:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12724:22:13",
																"nodeType": "YulBlock",
																"src": "12724:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12726:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12726:16:13"
																			},
																			"nativeSrc": "12726:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12726:18:13"
																		},
																		"nativeSrc": "12726:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12726:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "12695:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "12695:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "12688:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "12688:6:13"
																				},
																				"nativeSrc": "12688:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12688:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "12702:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "12702:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "12709:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "12709:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "12718:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "12718:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "12705:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "12705:3:13"
																						},
																						"nativeSrc": "12705:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "12705:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "12699:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "12699:2:13"
																				},
																				"nativeSrc": "12699:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "12699:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "12685:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12685:2:13"
																		},
																		"nativeSrc": "12685:37:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12685:37:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12678:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12678:6:13"
																},
																"nativeSrc": "12678:45:13",
																"nodeType": "YulFunctionCall",
																"src": "12678:45:13"
															},
															"nativeSrc": "12675:71:13",
															"nodeType": "YulIf",
															"src": "12675:71:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12584:168:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12615:1:13",
														"nodeType": "YulTypedName",
														"src": "12615:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12618:1:13",
														"nodeType": "YulTypedName",
														"src": "12618:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12624:7:13",
														"nodeType": "YulTypedName",
														"src": "12624:7:13",
														"type": ""
													}
												],
												"src": "12584:168:13"
											},
											{
												"body": {
													"nativeSrc": "12931:223:13",
													"nodeType": "YulBlock",
													"src": "12931:223:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12948:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12948:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12959:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12959:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12941:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12941:6:13"
																},
																"nativeSrc": "12941:21:13",
																"nodeType": "YulFunctionCall",
																"src": "12941:21:13"
															},
															"nativeSrc": "12941:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "12941:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12982:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12982:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12993:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12993:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12978:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12978:3:13"
																		},
																		"nativeSrc": "12978:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12978:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12998:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12998:2:13",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12971:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12971:6:13"
																},
																"nativeSrc": "12971:30:13",
																"nodeType": "YulFunctionCall",
																"src": "12971:30:13"
															},
															"nativeSrc": "12971:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "12971:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13021:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13021:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13032:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13032:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13017:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13017:3:13"
																		},
																		"nativeSrc": "13017:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13017:18:13"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820766f74657320746f20636c6f7365206368616e6e65",
																		"kind": "string",
																		"nativeSrc": "13037:34:13",
																		"nodeType": "YulLiteral",
																		"src": "13037:34:13",
																		"type": "",
																		"value": "Not enough votes to close channe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13010:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13010:6:13"
																},
																"nativeSrc": "13010:62:13",
																"nodeType": "YulFunctionCall",
																"src": "13010:62:13"
															},
															"nativeSrc": "13010:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "13010:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13092:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13092:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13103:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13103:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13088:3:13"
																		},
																		"nativeSrc": "13088:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13088:18:13"
																	},
																	{
																		"hexValue": "6c",
																		"kind": "string",
																		"nativeSrc": "13108:3:13",
																		"nodeType": "YulLiteral",
																		"src": "13108:3:13",
																		"type": "",
																		"value": "l"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13081:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13081:6:13"
																},
																"nativeSrc": "13081:31:13",
																"nodeType": "YulFunctionCall",
																"src": "13081:31:13"
															},
															"nativeSrc": "13081:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "13081:31:13"
														},
														{
															"nativeSrc": "13121:27:13",
															"nodeType": "YulAssignment",
															"src": "13121:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13133:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13133:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13144:3:13",
																		"nodeType": "YulLiteral",
																		"src": "13144:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13129:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13129:3:13"
																},
																"nativeSrc": "13129:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13129:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13121:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13121:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_43cf30ad8871b8fdb545799d22ae3c145590332663f589142a539e605733a294__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12757:397:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12908:9:13",
														"nodeType": "YulTypedName",
														"src": "12908:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12922:4:13",
														"nodeType": "YulTypedName",
														"src": "12922:4:13",
														"type": ""
													}
												],
												"src": "12757:397:13"
											},
											{
												"body": {
													"nativeSrc": "13333:224:13",
													"nodeType": "YulBlock",
													"src": "13333:224:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13350:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13350:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13361:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13361:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13343:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13343:6:13"
																},
																"nativeSrc": "13343:21:13",
																"nodeType": "YulFunctionCall",
																"src": "13343:21:13"
															},
															"nativeSrc": "13343:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "13343:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13384:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13384:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13395:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13395:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13380:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13380:3:13"
																		},
																		"nativeSrc": "13380:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13380:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13400:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13400:2:13",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13373:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13373:6:13"
																},
																"nativeSrc": "13373:30:13",
																"nodeType": "YulFunctionCall",
																"src": "13373:30:13"
															},
															"nativeSrc": "13373:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "13373:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13423:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13423:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13434:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13434:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13419:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13419:3:13"
																		},
																		"nativeSrc": "13419:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13419:18:13"
																	},
																	{
																		"hexValue": "566f746520494420646f6573206e6f74206d6174636820706172746963697061",
																		"kind": "string",
																		"nativeSrc": "13439:34:13",
																		"nodeType": "YulLiteral",
																		"src": "13439:34:13",
																		"type": "",
																		"value": "Vote ID does not match participa"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13412:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13412:6:13"
																},
																"nativeSrc": "13412:62:13",
																"nodeType": "YulFunctionCall",
																"src": "13412:62:13"
															},
															"nativeSrc": "13412:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "13412:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13494:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13494:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13505:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13505:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13490:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13490:3:13"
																		},
																		"nativeSrc": "13490:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13490:18:13"
																	},
																	{
																		"hexValue": "6e74",
																		"kind": "string",
																		"nativeSrc": "13510:4:13",
																		"nodeType": "YulLiteral",
																		"src": "13510:4:13",
																		"type": "",
																		"value": "nt"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13483:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13483:6:13"
																},
																"nativeSrc": "13483:32:13",
																"nodeType": "YulFunctionCall",
																"src": "13483:32:13"
															},
															"nativeSrc": "13483:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "13483:32:13"
														},
														{
															"nativeSrc": "13524:27:13",
															"nodeType": "YulAssignment",
															"src": "13524:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13536:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13536:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13547:3:13",
																		"nodeType": "YulLiteral",
																		"src": "13547:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13532:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13532:3:13"
																},
																"nativeSrc": "13532:19:13",
																"nodeType": "YulFunctionCall",
																"src": "13532:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13524:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13524:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01b7243a7d5ac4926aa4b8edd925f323ef46b29f8435a6cb760a9a29dbd3c7a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13159:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13310:9:13",
														"nodeType": "YulTypedName",
														"src": "13310:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13324:4:13",
														"nodeType": "YulTypedName",
														"src": "13324:4:13",
														"type": ""
													}
												],
												"src": "13159:398:13"
											},
											{
												"body": {
													"nativeSrc": "13691:119:13",
													"nodeType": "YulBlock",
													"src": "13691:119:13",
													"statements": [
														{
															"nativeSrc": "13701:26:13",
															"nodeType": "YulAssignment",
															"src": "13701:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13713:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13713:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13724:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13724:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13709:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13709:3:13"
																},
																"nativeSrc": "13709:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13709:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13701:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13701:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13743:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13743:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13754:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13754:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13736:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13736:6:13"
																},
																"nativeSrc": "13736:25:13",
																"nodeType": "YulFunctionCall",
																"src": "13736:25:13"
															},
															"nativeSrc": "13736:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "13736:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13781:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13781:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13792:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13792:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13777:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13777:3:13"
																		},
																		"nativeSrc": "13777:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13777:18:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13797:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13797:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13770:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13770:6:13"
																},
																"nativeSrc": "13770:34:13",
																"nodeType": "YulFunctionCall",
																"src": "13770:34:13"
															},
															"nativeSrc": "13770:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "13770:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13562:248:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13652:9:13",
														"nodeType": "YulTypedName",
														"src": "13652:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13663:6:13",
														"nodeType": "YulTypedName",
														"src": "13663:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13671:6:13",
														"nodeType": "YulTypedName",
														"src": "13671:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13682:4:13",
														"nodeType": "YulTypedName",
														"src": "13682:4:13",
														"type": ""
													}
												],
												"src": "13562:248:13"
											},
											{
												"body": {
													"nativeSrc": "13989:230:13",
													"nodeType": "YulBlock",
													"src": "13989:230:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14006:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14006:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14017:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14017:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13999:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13999:6:13"
																},
																"nativeSrc": "13999:21:13",
																"nodeType": "YulFunctionCall",
																"src": "13999:21:13"
															},
															"nativeSrc": "13999:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "13999:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14040:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14040:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14051:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14051:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14036:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14036:3:13"
																		},
																		"nativeSrc": "14036:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14036:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14056:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14056:2:13",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14029:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14029:6:13"
																},
																"nativeSrc": "14029:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14029:30:13"
															},
															"nativeSrc": "14029:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14029:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14079:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14079:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14090:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14090:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14075:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14075:3:13"
																		},
																		"nativeSrc": "14075:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14075:18:13"
																	},
																	{
																		"hexValue": "4e65772061646d696e20616464726573732063616e6e6f74206265207a65726f",
																		"kind": "string",
																		"nativeSrc": "14095:34:13",
																		"nodeType": "YulLiteral",
																		"src": "14095:34:13",
																		"type": "",
																		"value": "New admin address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14068:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14068:6:13"
																},
																"nativeSrc": "14068:62:13",
																"nodeType": "YulFunctionCall",
																"src": "14068:62:13"
															},
															"nativeSrc": "14068:62:13",
															"nodeType": "YulExpressionStatement",
															"src": "14068:62:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14150:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14150:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14161:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14161:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14146:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14146:3:13"
																		},
																		"nativeSrc": "14146:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14146:18:13"
																	},
																	{
																		"hexValue": "2061646472657373",
																		"kind": "string",
																		"nativeSrc": "14166:10:13",
																		"nodeType": "YulLiteral",
																		"src": "14166:10:13",
																		"type": "",
																		"value": " address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14139:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14139:6:13"
																},
																"nativeSrc": "14139:38:13",
																"nodeType": "YulFunctionCall",
																"src": "14139:38:13"
															},
															"nativeSrc": "14139:38:13",
															"nodeType": "YulExpressionStatement",
															"src": "14139:38:13"
														},
														{
															"nativeSrc": "14186:27:13",
															"nodeType": "YulAssignment",
															"src": "14186:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14198:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14198:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14209:3:13",
																		"nodeType": "YulLiteral",
																		"src": "14209:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14194:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14194:3:13"
																},
																"nativeSrc": "14194:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14194:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14186:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14186:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e1444ea02ac7bea8c9a5338acf01dba24983a5f35c670a40db58e1ba7f985f65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13815:404:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13966:9:13",
														"nodeType": "YulTypedName",
														"src": "13966:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13980:4:13",
														"nodeType": "YulTypedName",
														"src": "13980:4:13",
														"type": ""
													}
												],
												"src": "13815:404:13"
											},
											{
												"body": {
													"nativeSrc": "14381:218:13",
													"nodeType": "YulBlock",
													"src": "14381:218:13",
													"statements": [
														{
															"nativeSrc": "14391:26:13",
															"nodeType": "YulAssignment",
															"src": "14391:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14403:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14403:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14414:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14414:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14399:3:13"
																},
																"nativeSrc": "14399:18:13",
																"nodeType": "YulFunctionCall",
																"src": "14399:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14391:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "14391:4:13"
																}
															]
														},
														{
															"nativeSrc": "14426:29:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14426:29:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14444:3:13",
																				"nodeType": "YulLiteral",
																				"src": "14444:3:13",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14449:1:13",
																				"nodeType": "YulLiteral",
																				"src": "14449:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "14440:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14440:3:13"
																		},
																		"nativeSrc": "14440:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14440:11:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14453:1:13",
																		"nodeType": "YulLiteral",
																		"src": "14453:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14436:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14436:3:13"
																},
																"nativeSrc": "14436:19:13",
																"nodeType": "YulFunctionCall",
																"src": "14436:19:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "14430:2:13",
																	"nodeType": "YulTypedName",
																	"src": "14430:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14471:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14471:9:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14486:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14486:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14494:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14494:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14482:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14482:3:13"
																		},
																		"nativeSrc": "14482:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14482:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14464:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14464:6:13"
																},
																"nativeSrc": "14464:34:13",
																"nodeType": "YulFunctionCall",
																"src": "14464:34:13"
															},
															"nativeSrc": "14464:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "14464:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14518:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14518:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14529:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14529:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14514:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14514:3:13"
																		},
																		"nativeSrc": "14514:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14514:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "14538:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "14538:6:13"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "14546:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14546:2:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14534:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14534:3:13"
																		},
																		"nativeSrc": "14534:15:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14534:15:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14507:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14507:6:13"
																},
																"nativeSrc": "14507:43:13",
																"nodeType": "YulFunctionCall",
																"src": "14507:43:13"
															},
															"nativeSrc": "14507:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "14507:43:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14570:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14570:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14581:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14581:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14566:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14566:3:13"
																		},
																		"nativeSrc": "14566:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14566:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "14586:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "14586:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14559:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14559:6:13"
																},
																"nativeSrc": "14559:34:13",
																"nodeType": "YulFunctionCall",
																"src": "14559:34:13"
															},
															"nativeSrc": "14559:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "14559:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "14224:375:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14334:9:13",
														"nodeType": "YulTypedName",
														"src": "14334:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14345:6:13",
														"nodeType": "YulTypedName",
														"src": "14345:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14353:6:13",
														"nodeType": "YulTypedName",
														"src": "14353:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14361:6:13",
														"nodeType": "YulTypedName",
														"src": "14361:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14372:4:13",
														"nodeType": "YulTypedName",
														"src": "14372:4:13",
														"type": ""
													}
												],
												"src": "14224:375:13"
											},
											{
												"body": {
													"nativeSrc": "14652:77:13",
													"nodeType": "YulBlock",
													"src": "14652:77:13",
													"statements": [
														{
															"nativeSrc": "14662:16:13",
															"nodeType": "YulAssignment",
															"src": "14662:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14673:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14673:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14676:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14676:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14669:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14669:3:13"
																},
																"nativeSrc": "14669:9:13",
																"nodeType": "YulFunctionCall",
																"src": "14669:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14662:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14662:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14701:22:13",
																"nodeType": "YulBlock",
																"src": "14701:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14703:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "14703:16:13"
																			},
																			"nativeSrc": "14703:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14703:18:13"
																		},
																		"nativeSrc": "14703:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14703:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14693:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "14693:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14696:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14696:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14690:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14690:2:13"
																},
																"nativeSrc": "14690:10:13",
																"nodeType": "YulFunctionCall",
																"src": "14690:10:13"
															},
															"nativeSrc": "14687:36:13",
															"nodeType": "YulIf",
															"src": "14687:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14604:125:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14635:1:13",
														"nodeType": "YulTypedName",
														"src": "14635:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14638:1:13",
														"nodeType": "YulTypedName",
														"src": "14638:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14644:3:13",
														"nodeType": "YulTypedName",
														"src": "14644:3:13",
														"type": ""
													}
												],
												"src": "14604:125:13"
											},
											{
												"body": {
													"nativeSrc": "14908:174:13",
													"nodeType": "YulBlock",
													"src": "14908:174:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14925:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "14925:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14936:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14936:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14918:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14918:6:13"
																},
																"nativeSrc": "14918:21:13",
																"nodeType": "YulFunctionCall",
																"src": "14918:21:13"
															},
															"nativeSrc": "14918:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "14918:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14959:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14959:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14970:2:13",
																				"nodeType": "YulLiteral",
																				"src": "14970:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14955:3:13"
																		},
																		"nativeSrc": "14955:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14955:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14975:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14975:2:13",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14948:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14948:6:13"
																},
																"nativeSrc": "14948:30:13",
																"nodeType": "YulFunctionCall",
																"src": "14948:30:13"
															},
															"nativeSrc": "14948:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "14948:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14998:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "14998:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15009:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15009:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14994:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "14994:3:13"
																		},
																		"nativeSrc": "14994:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14994:18:13"
																	},
																	{
																		"hexValue": "4172726179206c656e67746873206d757374206d61746368",
																		"kind": "string",
																		"nativeSrc": "15014:26:13",
																		"nodeType": "YulLiteral",
																		"src": "15014:26:13",
																		"type": "",
																		"value": "Array lengths must match"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14987:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14987:6:13"
																},
																"nativeSrc": "14987:54:13",
																"nodeType": "YulFunctionCall",
																"src": "14987:54:13"
															},
															"nativeSrc": "14987:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "14987:54:13"
														},
														{
															"nativeSrc": "15050:26:13",
															"nodeType": "YulAssignment",
															"src": "15050:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15062:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15062:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15073:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15073:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15058:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15058:3:13"
																},
																"nativeSrc": "15058:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15058:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15050:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15050:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14734:348:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14885:9:13",
														"nodeType": "YulTypedName",
														"src": "14885:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14899:4:13",
														"nodeType": "YulTypedName",
														"src": "14899:4:13",
														"type": ""
													}
												],
												"src": "14734:348:13"
											},
											{
												"body": {
													"nativeSrc": "15261:168:13",
													"nodeType": "YulBlock",
													"src": "15261:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15278:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15278:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15289:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15289:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15271:6:13"
																},
																"nativeSrc": "15271:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15271:21:13"
															},
															"nativeSrc": "15271:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "15271:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15312:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15312:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15323:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15323:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15308:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15308:3:13"
																		},
																		"nativeSrc": "15308:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15308:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15328:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15328:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15301:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15301:6:13"
																},
																"nativeSrc": "15301:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15301:30:13"
															},
															"nativeSrc": "15301:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15301:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15351:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15351:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15362:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15362:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15347:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15347:3:13"
																		},
																		"nativeSrc": "15347:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15347:18:13"
																	},
																	{
																		"hexValue": "4e6f2062616c616e636520746f20766f7465",
																		"kind": "string",
																		"nativeSrc": "15367:20:13",
																		"nodeType": "YulLiteral",
																		"src": "15367:20:13",
																		"type": "",
																		"value": "No balance to vote"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15340:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15340:6:13"
																},
																"nativeSrc": "15340:48:13",
																"nodeType": "YulFunctionCall",
																"src": "15340:48:13"
															},
															"nativeSrc": "15340:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "15340:48:13"
														},
														{
															"nativeSrc": "15397:26:13",
															"nodeType": "YulAssignment",
															"src": "15397:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15409:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15409:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15420:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15420:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15405:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15405:3:13"
																},
																"nativeSrc": "15405:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15405:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15397:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15397:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5509bdfbe4e3f1d17f2a454d6154d7d42696933e08c3c25f4cc9185a4540710__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15087:342:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15238:9:13",
														"nodeType": "YulTypedName",
														"src": "15238:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15252:4:13",
														"nodeType": "YulTypedName",
														"src": "15252:4:13",
														"type": ""
													}
												],
												"src": "15087:342:13"
											},
											{
												"body": {
													"nativeSrc": "15608:163:13",
													"nodeType": "YulBlock",
													"src": "15608:163:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15625:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15625:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15636:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15636:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15618:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15618:6:13"
																},
																"nativeSrc": "15618:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15618:21:13"
															},
															"nativeSrc": "15618:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "15618:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15659:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15659:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15670:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15670:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15655:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15655:3:13"
																		},
																		"nativeSrc": "15655:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15655:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15675:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15675:2:13",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15648:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15648:6:13"
																},
																"nativeSrc": "15648:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15648:30:13"
															},
															"nativeSrc": "15648:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "15648:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15698:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "15698:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15709:2:13",
																				"nodeType": "YulLiteral",
																				"src": "15709:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15694:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15694:3:13"
																		},
																		"nativeSrc": "15694:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15694:18:13"
																	},
																	{
																		"hexValue": "416c726561647920766f746564",
																		"kind": "string",
																		"nativeSrc": "15714:15:13",
																		"nodeType": "YulLiteral",
																		"src": "15714:15:13",
																		"type": "",
																		"value": "Already voted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15687:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "15687:6:13"
																},
																"nativeSrc": "15687:43:13",
																"nodeType": "YulFunctionCall",
																"src": "15687:43:13"
															},
															"nativeSrc": "15687:43:13",
															"nodeType": "YulExpressionStatement",
															"src": "15687:43:13"
														},
														{
															"nativeSrc": "15739:26:13",
															"nodeType": "YulAssignment",
															"src": "15739:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15751:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "15751:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15762:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15762:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15747:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "15747:3:13"
																},
																"nativeSrc": "15747:18:13",
																"nodeType": "YulFunctionCall",
																"src": "15747:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15739:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15739:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15434:337:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15585:9:13",
														"nodeType": "YulTypedName",
														"src": "15585:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15599:4:13",
														"nodeType": "YulTypedName",
														"src": "15599:4:13",
														"type": ""
													}
												],
												"src": "15434:337:13"
											},
											{
												"body": {
													"nativeSrc": "16071:663:13",
													"nodeType": "YulBlock",
													"src": "16071:663:13",
													"statements": [
														{
															"nativeSrc": "16081:16:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16081:16:13",
															"value": {
																"name": "pos",
																"nativeSrc": "16094:3:13",
																"nodeType": "YulIdentifier",
																"src": "16094:3:13"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nativeSrc": "16085:5:13",
																	"nodeType": "YulTypedName",
																	"src": "16085:5:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16106:12:13",
															"nodeType": "YulAssignment",
															"src": "16106:12:13",
															"value": {
																"name": "pos",
																"nativeSrc": "16115:3:13",
																"nodeType": "YulIdentifier",
																"src": "16115:3:13"
															},
															"variableNames": [
																{
																	"name": "pos_1",
																	"nativeSrc": "16106:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16106:5:13"
																}
															]
														},
														{
															"nativeSrc": "16127:20:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16127:20:13",
															"value": {
																"name": "value0",
																"nativeSrc": "16141:6:13",
																"nodeType": "YulIdentifier",
																"src": "16141:6:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "16131:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16131:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16156:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16156:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "16165:1:13",
																"nodeType": "YulLiteral",
																"src": "16165:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "16160:1:13",
																	"nodeType": "YulTypedName",
																	"src": "16160:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16224:261:13",
																"nodeType": "YulBlock",
																"src": "16224:261:13",
																"statements": [
																	{
																		"nativeSrc": "16238:33:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16238:33:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16264:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "16264:6:13"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nativeSrc": "16251:12:13",
																				"nodeType": "YulIdentifier",
																				"src": "16251:12:13"
																			},
																			"nativeSrc": "16251:20:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16251:20:13"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nativeSrc": "16242:5:13",
																				"nodeType": "YulTypedName",
																				"src": "16242:5:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nativeSrc": "16309:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "16309:5:13"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nativeSrc": "16284:24:13",
																				"nodeType": "YulIdentifier",
																				"src": "16284:24:13"
																			},
																			"nativeSrc": "16284:31:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16284:31:13"
																		},
																		"nativeSrc": "16284:31:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16284:31:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nativeSrc": "16335:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "16335:5:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "value",
																							"nativeSrc": "16346:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "16346:5:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "16361:3:13",
																											"nodeType": "YulLiteral",
																											"src": "16361:3:13",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "16366:1:13",
																											"nodeType": "YulLiteral",
																											"src": "16366:1:13",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "16357:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "16357:3:13"
																									},
																									"nativeSrc": "16357:11:13",
																									"nodeType": "YulFunctionCall",
																									"src": "16357:11:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16370:1:13",
																									"nodeType": "YulLiteral",
																									"src": "16370:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "16353:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "16353:3:13"
																							},
																							"nativeSrc": "16353:19:13",
																							"nodeType": "YulFunctionCall",
																							"src": "16353:19:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "16342:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "16342:3:13"
																					},
																					"nativeSrc": "16342:31:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16342:31:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "16328:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16328:6:13"
																			},
																			"nativeSrc": "16328:46:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16328:46:13"
																		},
																		"nativeSrc": "16328:46:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16328:46:13"
																	},
																	{
																		"nativeSrc": "16387:14:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "16387:14:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "16397:4:13",
																			"nodeType": "YulLiteral",
																			"src": "16397:4:13",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "16391:2:13",
																				"nodeType": "YulTypedName",
																				"src": "16391:2:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "16414:23:13",
																		"nodeType": "YulAssignment",
																		"src": "16414:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nativeSrc": "16427:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "16427:5:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "16434:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "16434:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16423:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "16423:3:13"
																			},
																			"nativeSrc": "16423:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16423:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos_1",
																				"nativeSrc": "16414:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "16414:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "16450:25:13",
																		"nodeType": "YulAssignment",
																		"src": "16450:25:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "16464:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "16464:6:13"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "16472:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "16472:2:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16460:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "16460:3:13"
																			},
																			"nativeSrc": "16460:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16460:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "16450:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16450:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "16186:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16186:1:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "16189:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16189:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "16183:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16183:2:13"
																},
																"nativeSrc": "16183:13:13",
																"nodeType": "YulFunctionCall",
																"src": "16183:13:13"
															},
															"nativeSrc": "16175:310:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "16197:18:13",
																"nodeType": "YulBlock",
																"src": "16197:18:13",
																"statements": [
																	{
																		"nativeSrc": "16199:14:13",
																		"nodeType": "YulAssignment",
																		"src": "16199:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "16208:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "16208:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16211:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16211:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "16204:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "16204:3:13"
																			},
																			"nativeSrc": "16204:9:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16204:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "16199:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "16199:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "16179:3:13",
																"nodeType": "YulBlock",
																"src": "16179:3:13",
																"statements": []
															},
															"src": "16175:310:13"
														},
														{
															"body": {
																"nativeSrc": "16529:16:13",
																"nodeType": "YulBlock",
																"src": "16529:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "16538:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16538:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "16541:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16541:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "16531:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "16531:6:13"
																			},
																			"nativeSrc": "16531:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16531:12:13"
																		},
																		"nativeSrc": "16531:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16531:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16500:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16500:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "16516:3:13",
																						"nodeType": "YulLiteral",
																						"src": "16516:3:13",
																						"type": "",
																						"value": "251"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "16521:1:13",
																						"nodeType": "YulLiteral",
																						"src": "16521:1:13",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "16512:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "16512:3:13"
																				},
																				"nativeSrc": "16512:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "16512:11:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16525:1:13",
																				"nodeType": "YulLiteral",
																				"src": "16525:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16508:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16508:3:13"
																		},
																		"nativeSrc": "16508:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16508:19:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "16497:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16497:2:13"
																},
																"nativeSrc": "16497:31:13",
																"nodeType": "YulFunctionCall",
																"src": "16497:31:13"
															},
															"nativeSrc": "16494:51:13",
															"nodeType": "YulIf",
															"src": "16494:51:13"
														},
														{
															"nativeSrc": "16554:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16554:28:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16572:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16572:1:13",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "16575:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16575:6:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16568:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16568:3:13"
																},
																"nativeSrc": "16568:14:13",
																"nodeType": "YulFunctionCall",
																"src": "16568:14:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16558:6:13",
																	"nodeType": "YulTypedName",
																	"src": "16558:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "16604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16604:5:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "16611:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16611:6:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16619:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16619:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "16591:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "16591:12:13"
																},
																"nativeSrc": "16591:35:13",
																"nodeType": "YulFunctionCall",
																"src": "16591:35:13"
															},
															"nativeSrc": "16591:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "16591:35:13"
														},
														{
															"nativeSrc": "16635:31:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16635:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nativeSrc": "16652:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16652:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16659:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16659:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16648:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16648:3:13"
																},
																"nativeSrc": "16648:18:13",
																"nodeType": "YulFunctionCall",
																"src": "16648:18:13"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "16639:5:13",
																	"nodeType": "YulTypedName",
																	"src": "16639:5:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "16682:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16682:5:13"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "16689:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "16689:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16675:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16675:6:13"
																},
																"nativeSrc": "16675:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16675:21:13"
															},
															"nativeSrc": "16675:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "16675:21:13"
														},
														{
															"nativeSrc": "16705:23:13",
															"nodeType": "YulAssignment",
															"src": "16705:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "16716:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16716:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16723:4:13",
																		"nodeType": "YulLiteral",
																		"src": "16723:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16712:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16712:3:13"
																},
																"nativeSrc": "16712:16:13",
																"nodeType": "YulFunctionCall",
																"src": "16712:16:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16705:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16705:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15776:958:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16015:3:13",
														"nodeType": "YulTypedName",
														"src": "16015:3:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "16020:6:13",
														"nodeType": "YulTypedName",
														"src": "16020:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "16028:6:13",
														"nodeType": "YulTypedName",
														"src": "16028:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16036:6:13",
														"nodeType": "YulTypedName",
														"src": "16036:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16044:6:13",
														"nodeType": "YulTypedName",
														"src": "16044:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16052:6:13",
														"nodeType": "YulTypedName",
														"src": "16052:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16063:3:13",
														"nodeType": "YulTypedName",
														"src": "16063:3:13",
														"type": ""
													}
												],
												"src": "15776:958:13"
											},
											{
												"body": {
													"nativeSrc": "16913:167:13",
													"nodeType": "YulBlock",
													"src": "16913:167:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16930:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "16930:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16941:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16941:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16923:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16923:6:13"
																},
																"nativeSrc": "16923:21:13",
																"nodeType": "YulFunctionCall",
																"src": "16923:21:13"
															},
															"nativeSrc": "16923:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "16923:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16964:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "16964:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16975:2:13",
																				"nodeType": "YulLiteral",
																				"src": "16975:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16960:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16960:3:13"
																		},
																		"nativeSrc": "16960:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16960:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16980:2:13",
																		"nodeType": "YulLiteral",
																		"src": "16980:2:13",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16953:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16953:6:13"
																},
																"nativeSrc": "16953:30:13",
																"nodeType": "YulFunctionCall",
																"src": "16953:30:13"
															},
															"nativeSrc": "16953:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "16953:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17003:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17003:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17014:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17014:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16999:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "16999:3:13"
																		},
																		"nativeSrc": "16999:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "16999:18:13"
																	},
																	{
																		"hexValue": "496e76616c6964207369676e6174757265",
																		"kind": "string",
																		"nativeSrc": "17019:19:13",
																		"nodeType": "YulLiteral",
																		"src": "17019:19:13",
																		"type": "",
																		"value": "Invalid signature"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16992:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "16992:6:13"
																},
																"nativeSrc": "16992:47:13",
																"nodeType": "YulFunctionCall",
																"src": "16992:47:13"
															},
															"nativeSrc": "16992:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "16992:47:13"
														},
														{
															"nativeSrc": "17048:26:13",
															"nodeType": "YulAssignment",
															"src": "17048:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17060:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17060:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17071:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17071:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17056:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17056:3:13"
																},
																"nativeSrc": "17056:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17056:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17048:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17048:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16739:341:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16890:9:13",
														"nodeType": "YulTypedName",
														"src": "16890:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16904:4:13",
														"nodeType": "YulTypedName",
														"src": "16904:4:13",
														"type": ""
													}
												],
												"src": "16739:341:13"
											},
											{
												"body": {
													"nativeSrc": "17259:168:13",
													"nodeType": "YulBlock",
													"src": "17259:168:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17276:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17276:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17287:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17287:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17269:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17269:6:13"
																},
																"nativeSrc": "17269:21:13",
																"nodeType": "YulFunctionCall",
																"src": "17269:21:13"
															},
															"nativeSrc": "17269:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "17269:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17310:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17310:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17321:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17321:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17306:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17306:3:13"
																		},
																		"nativeSrc": "17306:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17306:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17326:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17326:2:13",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17299:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17299:6:13"
																},
																"nativeSrc": "17299:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17299:30:13"
															},
															"nativeSrc": "17299:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "17299:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17349:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17349:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17360:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17360:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17345:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17345:3:13"
																		},
																		"nativeSrc": "17345:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17345:18:13"
																	},
																	{
																		"hexValue": "4e6f6e636520616c72656164792075736564",
																		"kind": "string",
																		"nativeSrc": "17365:20:13",
																		"nodeType": "YulLiteral",
																		"src": "17365:20:13",
																		"type": "",
																		"value": "Nonce already used"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17338:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17338:6:13"
																},
																"nativeSrc": "17338:48:13",
																"nodeType": "YulFunctionCall",
																"src": "17338:48:13"
															},
															"nativeSrc": "17338:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "17338:48:13"
														},
														{
															"nativeSrc": "17395:26:13",
															"nodeType": "YulAssignment",
															"src": "17395:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17407:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17407:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17418:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17418:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17403:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17403:3:13"
																},
																"nativeSrc": "17403:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17403:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17395:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17395:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17085:342:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17236:9:13",
														"nodeType": "YulTypedName",
														"src": "17236:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17250:4:13",
														"nodeType": "YulTypedName",
														"src": "17250:4:13",
														"type": ""
													}
												],
												"src": "17085:342:13"
											},
											{
												"body": {
													"nativeSrc": "17606:176:13",
													"nodeType": "YulBlock",
													"src": "17606:176:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17623:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17623:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17634:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17634:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17616:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17616:6:13"
																},
																"nativeSrc": "17616:21:13",
																"nodeType": "YulFunctionCall",
																"src": "17616:21:13"
															},
															"nativeSrc": "17616:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "17616:21:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17657:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17657:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17668:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17668:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17653:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17653:3:13"
																		},
																		"nativeSrc": "17653:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17653:18:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17673:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17673:2:13",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17646:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17646:6:13"
																},
																"nativeSrc": "17646:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17646:30:13"
															},
															"nativeSrc": "17646:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "17646:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17696:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17696:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17707:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17707:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17692:3:13"
																		},
																		"nativeSrc": "17692:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17692:18:13"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820726573657276652062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "17712:28:13",
																		"nodeType": "YulLiteral",
																		"src": "17712:28:13",
																		"type": "",
																		"value": "Not enough reserve balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17685:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17685:6:13"
																},
																"nativeSrc": "17685:56:13",
																"nodeType": "YulFunctionCall",
																"src": "17685:56:13"
															},
															"nativeSrc": "17685:56:13",
															"nodeType": "YulExpressionStatement",
															"src": "17685:56:13"
														},
														{
															"nativeSrc": "17750:26:13",
															"nodeType": "YulAssignment",
															"src": "17750:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17762:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17762:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17773:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17773:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17758:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17758:3:13"
																},
																"nativeSrc": "17758:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17758:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17750:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17750:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc387dc8a8bac95ec07bd7e65ff92ab7538d5bf2063a4a9ea89449f96be68218__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17432:350:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17583:9:13",
														"nodeType": "YulTypedName",
														"src": "17583:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17597:4:13",
														"nodeType": "YulTypedName",
														"src": "17597:4:13",
														"type": ""
													}
												],
												"src": "17432:350:13"
											},
											{
												"body": {
													"nativeSrc": "17868:103:13",
													"nodeType": "YulBlock",
													"src": "17868:103:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "17914:16:13",
																"nodeType": "YulBlock",
																"src": "17914:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17923:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17923:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17926:1:13",
																					"nodeType": "YulLiteral",
																					"src": "17926:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17916:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "17916:6:13"
																			},
																			"nativeSrc": "17916:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17916:12:13"
																		},
																		"nativeSrc": "17916:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17916:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17889:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "17889:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17898:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17898:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17885:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17885:3:13"
																		},
																		"nativeSrc": "17885:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17885:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17910:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17910:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17881:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17881:3:13"
																},
																"nativeSrc": "17881:32:13",
																"nodeType": "YulFunctionCall",
																"src": "17881:32:13"
															},
															"nativeSrc": "17878:52:13",
															"nodeType": "YulIf",
															"src": "17878:52:13"
														},
														{
															"nativeSrc": "17939:26:13",
															"nodeType": "YulAssignment",
															"src": "17939:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17955:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17955:9:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17949:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "17949:5:13"
																},
																"nativeSrc": "17949:16:13",
																"nodeType": "YulFunctionCall",
																"src": "17949:16:13"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "17939:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17939:6:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "17787:184:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17834:9:13",
														"nodeType": "YulTypedName",
														"src": "17834:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17845:7:13",
														"nodeType": "YulTypedName",
														"src": "17845:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17857:6:13",
														"nodeType": "YulTypedName",
														"src": "17857:6:13",
														"type": ""
													}
												],
												"src": "17787:184:13"
											},
											{
												"body": {
													"nativeSrc": "18151:184:13",
													"nodeType": "YulBlock",
													"src": "18151:184:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18168:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18168:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18181:2:13",
																						"nodeType": "YulLiteral",
																						"src": "18181:2:13",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nativeSrc": "18185:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "18185:6:13"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "18177:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18177:3:13"
																				},
																				"nativeSrc": "18177:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18177:15:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18198:26:13",
																						"nodeType": "YulLiteral",
																						"src": "18198:26:13",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18194:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "18194:3:13"
																				},
																				"nativeSrc": "18194:31:13",
																				"nodeType": "YulFunctionCall",
																				"src": "18194:31:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "18173:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18173:3:13"
																		},
																		"nativeSrc": "18173:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18173:53:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18161:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18161:6:13"
																},
																"nativeSrc": "18161:66:13",
																"nodeType": "YulFunctionCall",
																"src": "18161:66:13"
															},
															"nativeSrc": "18161:66:13",
															"nodeType": "YulExpressionStatement",
															"src": "18161:66:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "18247:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18247:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18252:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18252:2:13",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18243:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18243:3:13"
																		},
																		"nativeSrc": "18243:12:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18243:12:13"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "18257:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18257:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18236:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18236:6:13"
																},
																"nativeSrc": "18236:28:13",
																"nodeType": "YulFunctionCall",
																"src": "18236:28:13"
															},
															"nativeSrc": "18236:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "18236:28:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "18284:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "18284:3:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18289:2:13",
																				"nodeType": "YulLiteral",
																				"src": "18289:2:13",
																				"type": "",
																				"value": "52"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18280:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18280:3:13"
																		},
																		"nativeSrc": "18280:12:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18280:12:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "18294:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18294:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18273:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18273:6:13"
																},
																"nativeSrc": "18273:28:13",
																"nodeType": "YulFunctionCall",
																"src": "18273:28:13"
															},
															"nativeSrc": "18273:28:13",
															"nodeType": "YulExpressionStatement",
															"src": "18273:28:13"
														},
														{
															"nativeSrc": "18310:19:13",
															"nodeType": "YulAssignment",
															"src": "18310:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18321:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18321:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18326:2:13",
																		"nodeType": "YulLiteral",
																		"src": "18326:2:13",
																		"type": "",
																		"value": "84"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18317:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18317:3:13"
																},
																"nativeSrc": "18317:12:13",
																"nodeType": "YulFunctionCall",
																"src": "18317:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18310:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18310:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17976:359:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18111:3:13",
														"nodeType": "YulTypedName",
														"src": "18111:3:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18116:6:13",
														"nodeType": "YulTypedName",
														"src": "18116:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18124:6:13",
														"nodeType": "YulTypedName",
														"src": "18124:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18132:6:13",
														"nodeType": "YulTypedName",
														"src": "18132:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18143:3:13",
														"nodeType": "YulTypedName",
														"src": "18143:3:13",
														"type": ""
													}
												],
												"src": "17976:359:13"
											},
											{
												"body": {
													"nativeSrc": "18372:95:13",
													"nodeType": "YulBlock",
													"src": "18372:95:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18389:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18389:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18396:3:13",
																				"nodeType": "YulLiteral",
																				"src": "18396:3:13",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18401:10:13",
																				"nodeType": "YulLiteral",
																				"src": "18401:10:13",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "18392:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18392:3:13"
																		},
																		"nativeSrc": "18392:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18392:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18382:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18382:6:13"
																},
																"nativeSrc": "18382:31:13",
																"nodeType": "YulFunctionCall",
																"src": "18382:31:13"
															},
															"nativeSrc": "18382:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "18382:31:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18429:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18429:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18432:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18432:4:13",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18422:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18422:6:13"
																},
																"nativeSrc": "18422:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18422:15:13"
															},
															"nativeSrc": "18422:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18422:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "18453:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18453:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18456:4:13",
																		"nodeType": "YulLiteral",
																		"src": "18456:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "18446:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18446:6:13"
																},
																"nativeSrc": "18446:15:13",
																"nodeType": "YulFunctionCall",
																"src": "18446:15:13"
															},
															"nativeSrc": "18446:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "18446:15:13"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "18340:127:13",
												"nodeType": "YulFunctionDefinition",
												"src": "18340:127:13"
											},
											{
												"body": {
													"nativeSrc": "18609:164:13",
													"nodeType": "YulBlock",
													"src": "18609:164:13",
													"statements": [
														{
															"nativeSrc": "18619:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18619:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18639:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18639:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18633:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18633:5:13"
																},
																"nativeSrc": "18633:13:13",
																"nodeType": "YulFunctionCall",
																"src": "18633:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18623:6:13",
																	"nodeType": "YulTypedName",
																	"src": "18623:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18661:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18661:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "18670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "18670:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18678:4:13",
																				"nodeType": "YulLiteral",
																				"src": "18678:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18666:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "18666:3:13"
																		},
																		"nativeSrc": "18666:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "18666:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18685:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18685:6:13"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "18655:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "18655:5:13"
																},
																"nativeSrc": "18655:37:13",
																"nodeType": "YulFunctionCall",
																"src": "18655:37:13"
															},
															"nativeSrc": "18655:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "18655:37:13"
														},
														{
															"nativeSrc": "18701:26:13",
															"nodeType": "YulVariableDeclaration",
															"src": "18701:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18715:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18715:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18720:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "18720:6:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18711:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18711:3:13"
																},
																"nativeSrc": "18711:16:13",
																"nodeType": "YulFunctionCall",
																"src": "18711:16:13"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "18705:2:13",
																	"nodeType": "YulTypedName",
																	"src": "18705:2:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "18743:2:13",
																		"nodeType": "YulIdentifier",
																		"src": "18743:2:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18747:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18747:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18736:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "18736:6:13"
																},
																"nativeSrc": "18736:13:13",
																"nodeType": "YulFunctionCall",
																"src": "18736:13:13"
															},
															"nativeSrc": "18736:13:13",
															"nodeType": "YulExpressionStatement",
															"src": "18736:13:13"
														},
														{
															"nativeSrc": "18758:9:13",
															"nodeType": "YulAssignment",
															"src": "18758:9:13",
															"value": {
																"name": "_1",
																"nativeSrc": "18765:2:13",
																"nodeType": "YulIdentifier",
																"src": "18765:2:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18758:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18758:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18472:301:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18585:3:13",
														"nodeType": "YulTypedName",
														"src": "18585:3:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18590:6:13",
														"nodeType": "YulTypedName",
														"src": "18590:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18601:3:13",
														"nodeType": "YulTypedName",
														"src": "18601:3:13",
														"type": ""
													}
												],
												"src": "18472:301:13"
											},
											{
												"body": {
													"nativeSrc": "18959:217:13",
													"nodeType": "YulBlock",
													"src": "18959:217:13",
													"statements": [
														{
															"nativeSrc": "18969:27:13",
															"nodeType": "YulAssignment",
															"src": "18969:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18981:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "18981:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18992:3:13",
																		"nodeType": "YulLiteral",
																		"src": "18992:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18977:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18977:3:13"
																},
																"nativeSrc": "18977:19:13",
																"nodeType": "YulFunctionCall",
																"src": "18977:19:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18969:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18969:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19012:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "19012:9:13"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "19023:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19023:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19005:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19005:6:13"
																},
																"nativeSrc": "19005:25:13",
																"nodeType": "YulFunctionCall",
																"src": "19005:25:13"
															},
															"nativeSrc": "19005:25:13",
															"nodeType": "YulExpressionStatement",
															"src": "19005:25:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19050:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19050:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19061:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19061:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19046:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19046:3:13"
																		},
																		"nativeSrc": "19046:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19046:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "19070:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "19070:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19078:4:13",
																				"nodeType": "YulLiteral",
																				"src": "19078:4:13",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "19066:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19066:3:13"
																		},
																		"nativeSrc": "19066:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19066:17:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19039:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19039:6:13"
																},
																"nativeSrc": "19039:45:13",
																"nodeType": "YulFunctionCall",
																"src": "19039:45:13"
															},
															"nativeSrc": "19039:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "19039:45:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19104:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19104:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19115:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19115:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19100:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19100:3:13"
																		},
																		"nativeSrc": "19100:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19100:18:13"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "19120:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19120:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19093:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19093:6:13"
																},
																"nativeSrc": "19093:34:13",
																"nodeType": "YulFunctionCall",
																"src": "19093:34:13"
															},
															"nativeSrc": "19093:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "19093:34:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19147:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "19147:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19158:2:13",
																				"nodeType": "YulLiteral",
																				"src": "19158:2:13",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19143:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "19143:3:13"
																		},
																		"nativeSrc": "19143:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19143:18:13"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "19163:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "19163:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19136:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19136:6:13"
																},
																"nativeSrc": "19136:34:13",
																"nodeType": "YulFunctionCall",
																"src": "19136:34:13"
															},
															"nativeSrc": "19136:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "19136:34:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "18778:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18904:9:13",
														"nodeType": "YulTypedName",
														"src": "18904:9:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "18915:6:13",
														"nodeType": "YulTypedName",
														"src": "18915:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18923:6:13",
														"nodeType": "YulTypedName",
														"src": "18923:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18931:6:13",
														"nodeType": "YulTypedName",
														"src": "18931:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18939:6:13",
														"nodeType": "YulTypedName",
														"src": "18939:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18950:4:13",
														"nodeType": "YulTypedName",
														"src": "18950:4:13",
														"type": ""
													}
												],
												"src": "18778:398:13"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        value4 := calldataload(add(headStart, 64))\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$1616t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1616__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Only admin can perform this acti\")\n        mstore(add(headStart, 96), \"on\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cdf9e6197a88065780004678deea3b846694aaad5855c66c624a70732fc50f1f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Insufficient reserve balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3b475f01e907c8525284c2d962568bfcaa3133ce2261739c842efe49e2028bae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Participants and newBalances len\")\n        mstore(add(headStart, 96), \"gth must match\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 64)\n        mstore(headStart, 64)\n        let pos := tail_1\n        mstore(tail_1, value1)\n        pos := add(headStart, 96)\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            let value := calldataload(srcPtr)\n            validator_revert_address(value)\n            mstore(pos, and(value, sub(shl(160, 1), 1)))\n            let _1 := 0x20\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x20), sub(pos, headStart))\n        mstore(pos, value3)\n        if gt(value3, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value3)\n        calldatacopy(add(pos, 0x20), value2, length)\n        tail := add(add(pos, length), 0x20)\n    }\n    function abi_encode_tuple_t_stringliteral_8a8f561be9ca21da69ebbb77e3440ef8a669abee74649c7cad3f33822531bfca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No balance to dispute\")\n        tail := add(headStart, 96)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_43cf30ad8871b8fdb545799d22ae3c145590332663f589142a539e605733a294__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Not enough votes to close channe\")\n        mstore(add(headStart, 96), \"l\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_01b7243a7d5ac4926aa4b8edd925f323ef46b29f8435a6cb760a9a29dbd3c7a7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Vote ID does not match participa\")\n        mstore(add(headStart, 96), \"nt\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_e1444ea02ac7bea8c9a5338acf01dba24983a5f35c670a40db58e1ba7f985f65__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"New admin address cannot be zero\")\n        mstore(add(headStart, 96), \" address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Array lengths must match\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b5509bdfbe4e3f1d17f2a454d6154d7d42696933e08c3c25f4cc9185a4540710__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No balance to vote\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Already voted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_array$_t_address_$dyn_calldata_ptr_t_array$_t_uint256_$dyn_calldata_ptr_t_uint256__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value4, value3, value2, value1, value0) -> end\n    {\n        let pos_1 := pos\n        pos_1 := pos\n        let srcPtr := value0\n        let i := 0\n        for { } lt(i, value1) { i := add(i, 1) }\n        {\n            let value := calldataload(srcPtr)\n            validator_revert_address(value)\n            mstore(pos_1, and(value, sub(shl(160, 1), 1)))\n            let _1 := 0x20\n            pos_1 := add(pos_1, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        if gt(value3, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value3)\n        calldatacopy(pos_1, value2, length)\n        let end_1 := add(pos_1, length)\n        mstore(end_1, value4)\n        end := add(end_1, 0x20)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Nonce already used\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dc387dc8a8bac95ec07bd7e65ff92ab7538d5bf2063a4a9ea89449f96be68218__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Not enough reserve balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 20), value1)\n        mstore(add(pos, 52), value2)\n        end := add(pos, 84)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 6257
									},
									{
										"length": 32,
										"start": 6298
									},
									{
										"length": 32,
										"start": 6622
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101c5575f3560e01c80638da5cb5b116100f2578063c9d27afe11610092578063f2fde38b11610062578063f2fde38b14610559578063f851a44014610578578063fd85b1a714610596578063feb61724146105b5575f80fd5b8063c9d27afe146104cd578063d23254b4146104ec578063e207d04d14610525578063eecbbb721461053a575f80fd5b8063ad3cb1cc116100cd578063ad3cb1cc14610427578063b17d718e14610464578063b62e1efc14610483578063c6b0da1b146104ae575f80fd5b80638da5cb5b146103b75780638f283970146103f3578063a10954fe14610412575f80fd5b80634f1ef2861161016857806368f257341161013857806368f25734146103515780636e631a4d14610370578063715018a61461038f5780638456cb59146103a3575f80fd5b80634f1ef286146102d057806352d1902d146102e357806356f40aa2146102f75780635c975abb14610322575f80fd5b80631794bb3c116101a35780631794bb3c146102285780632251d3f01461024757806327e235e3146102835780633f4ba83a146102bc575f80fd5b80630a8bcdb9146101c95780631145a4ff146101ea57806314068e9414610209575b5f80fd5b3480156101d4575f80fd5b506101e86101e3366004612082565b6105e3565b005b3480156101f5575f80fd5b506101e861020436600461211f565b610761565b348015610214575f80fd5b506101e86102233660046121cf565b61087f565b348015610233575f80fd5b506101e86102423660046121ea565b610a00565b348015610252575f80fd5b50600154610266906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561028e575f80fd5b506102ae61029d3660046121cf565b60026020525f908152604090205481565b60405190815260200161027a565b3480156102c7575f80fd5b506101e8610b5f565b6101e86102de36600461223c565b610b71565b3480156102ee575f80fd5b506102ae610b90565b348015610302575f80fd5b506102ae610311366004612082565b60056020525f908152604090205481565b34801561032d575f80fd5b505f805160206126ae8339815191525460ff165b604051901515815260200161027a565b34801561035c575f80fd5b506101e861036b3660046122fa565b610bab565b34801561037b575f80fd5b506101e861038a366004612349565b610c08565b34801561039a575f80fd5b506101e8610e26565b3480156103ae575f80fd5b506101e8610e37565b3480156103c2575f80fd5b507f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b0316610266565b3480156103fe575f80fd5b506101e861040d3660046121cf565b610e47565b34801561041d575f80fd5b506102ae60095481565b348015610432575f80fd5b50610457604051806040016040528060058152602001640352e302e360dc1b81525081565b60405161027a919061237b565b34801561046f575f80fd5b506101e861047e366004612082565b610f05565b34801561048e575f80fd5b506102ae61049d366004612082565b60066020525f908152604090205481565b3480156104b9575f80fd5b506101e86104c83660046123b0565b611027565b3480156104d8575f80fd5b506101e86104e7366004612418565b611142565b3480156104f7575f80fd5b50610341610506366004612446565b600460209081525f928352604080842090915290825290205460ff1681565b348015610530575f80fd5b506102ae60085481565b348015610545575f80fd5b506101e86105543660046122fa565b61127f565b348015610564575f80fd5b506101e86105733660046121cf565b611377565b348015610583575f80fd5b505f54610266906001600160a01b031681565b3480156105a1575f80fd5b506101e86105b0366004612082565b6113b4565b3480156105c0575f80fd5b506103416105cf366004612082565b60036020525f908152604090205460ff1681565b5f546001600160a01b0316336001600160a01b03161461061e5760405162461bcd60e51b815260040161061590612469565b60405180910390fd5b6106266114b9565b8060095410156106785760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e7420726573657276652062616c616e6365000000006044820152606401610615565b6001546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303815f875af11580156106d4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106f891906124ab565b6107145760405162461bcd60e51b8152600401610615906124c6565b8060095f8282546107259190612503565b90915550506040518181527f252f4762677e3c294cdba42d776da4a2c5a1259438ea5224c3bea5b27c8f04dc906020015b60405180910390a150565b6107696114b9565b8584146107cf5760405162461bcd60e51b815260206004820152602e60248201527f5061727469636970616e747320616e64206e657742616c616e636573206c656e60448201526d0cee8d040daeae6e840dac2e8c6d60931b6064820152608401610615565b6107de878787878787876114e9565b5f5b86811015610838576108308888838181106107fd576107fd612516565b905060200201602081019061081291906121cf565b87878481811061082457610824612516565b90506020020135611620565b6001016107e0565b507f1989b1fe93256bb3b4c6348f76f6f506f926f635cfa802ca3af4826159c5874b8787878760405161086e949392919061252a565b60405180910390a150505050505050565b5f546001600160a01b0316336001600160a01b0316146108b15760405162461bcd60e51b815260040161061590612469565b6108b96114b9565b6001600160a01b0381165f908152600260205260409020546109155760405162461bcd60e51b81526020600482015260156024820152744e6f2062616c616e636520746f206469737075746560581b6044820152606401610615565b600880545f9182610925836125a6565b909155506001546040516370a0823160e01b81523060048201529192506001600160a01b0316906370a0823190602401602060405180830381865afa158015610970573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061099491906125be565b5f82815260066020908152604080832093909355600781529082902080546001600160a01b0319166001600160a01b03861690811790915591518381527f8610d91e9f8a63773d7a3c13aa8bb8407203532a61bb703c06fce895f9622d0d910160405180910390a25050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f81158015610a455750825b90505f8267ffffffffffffffff166001148015610a615750303b155b905081158015610a6f575080155b15610a8d5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff191660011785558315610ab757845460ff60401b1916600160401b1785555b610abf611789565b610ac7611791565b610ad0886117a1565b610ad8611789565b5f80546001600160a01b03808b166001600160a01b03199283161790925560018054928a169290911691909117815560085560098690558315610b5557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b610b676117b2565b610b6f61180d565b565b610b79611866565b610b828261190a565b610b8c8282611912565b5050565b5f610b996119d3565b505f8051602061268e83398151915290565b610bb36114b9565b610bc1335b85858585611a1c565b610bcc335b85611620565b60405184815233907f7200cd3d0176b58ea53053a648b9a9cfb0d0d13a52488e14a16e0037b2241d21906020015b60405180910390a250505050565b5f546001600160a01b0316336001600160a01b031614610c3a5760405162461bcd60e51b815260040161061590612469565b610c426114b9565b5f81815260066020908152604080832054600590925290912054610c679060026125d5565b1015610cbf5760405162461bcd60e51b815260206004820152602160248201527f4e6f7420656e6f75676820766f74657320746f20636c6f7365206368616e6e656044820152601b60fa1b6064820152608401610615565b5f818152600760205260409020546001600160a01b03848116911614610d325760405162461bcd60e51b815260206004820152602260248201527f566f746520494420646f6573206e6f74206d61746368207061727469636970616044820152611b9d60f21b6064820152608401610615565b610d3c8383611620565b60015460405163a9059cbb60e01b81526001600160a01b038581166004830152602482018590529091169063a9059cbb906044016020604051808303815f875af1158015610d8c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610db091906124ab565b610dcc5760405162461bcd60e51b8152600401610615906124c6565b6001600160a01b0383165f8181526002602090815260408083209290925581518581529081018490527f93af0759c861f9140be6d1c461033b560dba0e077676ce380708438f5ee23f6291015b60405180910390a2505050565b610e2e6117b2565b610b6f5f611b66565b610e3f6117b2565b610b6f611bd6565b610e4f6117b2565b610e576114b9565b6001600160a01b038116610ebe5760405162461bcd60e51b815260206004820152602860248201527f4e65772061646d696e20616464726573732063616e6e6f74206265207a65726f604482015267206164647265737360c01b6064820152608401610615565b5f80546001600160a01b0319166001600160a01b038316908117825560405190917f7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c91a250565b5f546001600160a01b0316336001600160a01b031614610f375760405162461bcd60e51b815260040161061590612469565b610f3f6114b9565b6001546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064016020604051808303815f875af1158015610fa1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fc591906124ab565b610fe15760405162461bcd60e51b8152600401610615906124c6565b8060095f828254610ff291906125ec565b90915550506040518181527f372b1a73ea80de8b8f35b0cf88147a1fbc354f7fb9d1409431199a619acd0c9890602001610756565b5f546001600160a01b0316336001600160a01b0316146110595760405162461bcd60e51b815260040161061590612469565b6110616114b9565b8281146110b05760405162461bcd60e51b815260206004820152601860248201527f4172726179206c656e67746873206d757374206d6174636800000000000000006044820152606401610615565b5f5b838110156110fe576110f68585838181106110cf576110cf612516565b90506020020160208101906110e491906121cf565b84848481811061082457610824612516565b6001016110b2565b507f9071b044465a4e855aabae9828b35d03eff50e0110996249e9bd9add0d117ed784848484604051611134949392919061252a565b60405180910390a150505050565b61114a6114b9565b335f9081526002602052604090205461119a5760405162461bcd60e51b81526020600482015260126024820152714e6f2062616c616e636520746f20766f746560701b6044820152606401610615565b5f82815260046020908152604080832033845290915290205460ff16156111f35760405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606401610615565b5f8281526004602090815260408083203384528252808320805460ff1916600117905560029091529020548115611247575f83815260056020526040812080548392906112419084906125ec565b90915550505b604080518481526020810183905233917f1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e9101610e19565b6112876114b9565b61129033610bb8565b61129933610bc6565b6001546001600160a01b031663a9059cbb336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018790526044016020604051808303815f875af11580156112f5573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061131991906124ab565b6113355760405162461bcd60e51b8152600401610615906124c6565b335f8181526002602090815260408083209290925590518681527f770342ee36990141b5b1f4b3b41a184d7968647ac7f0dbfd2d86d566c468027d9101610bfa565b61137f6117b2565b6001600160a01b0381166113a857604051631e4fbdf760e01b81525f6004820152602401610615565b6113b181611b66565b50565b6113bc6114b9565b6001546001600160a01b03166323b872dd336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064016020604051808303815f875af115801561141e573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061144291906124ab565b61145e5760405162461bcd60e51b8152600401610615906124c6565b335f908152600260205260408120805483929061147c9084906125ec565b909155505060405181815233907faf952b0a28349f5ffff2d98aa9050ea845adbe423ff73ac5da5f268834ae3ac09060200160405180910390a250565b5f805160206126ae8339815191525460ff1615610b6f5760405163d93c066560e01b815260040160405180910390fd5b5f87878787876040516020016115039594939291906125ff565b60405160208183030381529060405280519060200120905061155c83838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508593925050611c1e9050565b5f546001600160a01b039081169116146115ac5760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610615565b5f8181526003602052604090205460ff16156115ff5760405162461bcd60e51b8152602060048201526012602482015271139bdb98d948185b1c9958591e481d5cd95960721b6044820152606401610615565b5f908152600360205260409020805460ff1916600117905550505050505050565b6001600160a01b0382165f908152600260205260409020548111156116fe576001600160a01b0382165f908152600260205260408120546116619083612503565b90508060095410156116b55760405162461bcd60e51b815260206004820152601a60248201527f4e6f7420656e6f75676820726573657276652062616c616e63650000000000006044820152606401610615565b8060095f8282546116c69190612503565b90915550506001600160a01b0383165f90815260026020526040812080548392906116f29084906125ec565b90915550610b8c915050565b6001600160a01b0382165f90815260026020526040902054811015610b8c576001600160a01b0382165f90815260026020526040812054611740908390612503565b90508060095f82825461175391906125ec565b90915550506001600160a01b0383165f908152600260205260408120805483929061177f908490612503565b9091555050505050565b610b6f611c48565b611799611c48565b610b6f611c91565b6117a9611c48565b6113b181611cb1565b336117e47f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300546001600160a01b031690565b6001600160a01b031614610b6f5760405163118cdaa760e01b8152336004820152602401610615565b611815611cb9565b5f805160206126ae833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b039091168152602001610756565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806118ec57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166118e05f8051602061268e833981519152546001600160a01b031690565b6001600160a01b031614155b15610b6f5760405163703e46dd60e11b815260040160405180910390fd5b6113b16117b2565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561196c575060408051601f3d908101601f19168201909252611969918101906125be565b60015b61199457604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610615565b5f8051602061268e83398151915281146119c457604051632a87526960e21b815260048101829052602401610615565b6119ce8383611ce8565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b6f5760405163703e46dd60e11b815260040160405180910390fd5b6040516bffffffffffffffffffffffff19606087901b16602082015260348101859052605481018490525f90607401604051602081830303815290604052805190602001209050611aa483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152508593925050611c1e9050565b5f546001600160a01b03908116911614611af45760405162461bcd60e51b8152602060048201526011602482015270496e76616c6964207369676e617475726560781b6044820152606401610615565b5f8181526003602052604090205460ff1615611b475760405162461bcd60e51b8152602060048201526012602482015271139bdb98d948185b1c9958591e481d5cd95960721b6044820152606401610615565b5f908152600360205260409020805460ff191660011790555050505050565b7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930080546001600160a01b031981166001600160a01b03848116918217845560405192169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0905f90a3505050565b611bde6114b9565b5f805160206126ae833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2583361184e565b5f805f80611c2c8686611d3d565b925092509250611c3c8282611d86565b50909150505b92915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610b6f57604051631afcd79f60e31b815260040160405180910390fd5b611c99611c48565b5f805160206126ae833981519152805460ff19169055565b61137f611c48565b5f805160206126ae8339815191525460ff16610b6f57604051638dfc202b60e01b815260040160405180910390fd5b611cf182611e3e565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611d35576119ce8282611ea1565b610b8c611f13565b5f805f8351604103611d74576020840151604085015160608601515f1a611d6688828585611f32565b955095509550505050611d7f565b505081515f91506002905b9250925092565b5f826003811115611d9957611d99612663565b03611da2575050565b6001826003811115611db657611db6612663565b03611dd45760405163f645eedf60e01b815260040160405180910390fd5b6002826003811115611de857611de8612663565b03611e095760405163fce698f760e01b815260048101829052602401610615565b6003826003811115611e1d57611e1d612663565b03610b8c576040516335e2f38360e21b815260048101829052602401610615565b806001600160a01b03163b5f03611e7357604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610615565b5f8051602061268e83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611ebd9190612677565b5f60405180830381855af49150503d805f8114611ef5576040519150601f19603f3d011682016040523d82523d5f602084013e611efa565b606091505b5091509150611f0a858383611ffa565b95945050505050565b3415610b6f5760405163b398979f60e01b815260040160405180910390fd5b5f80807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115611f6b57505f91506003905082611ff0565b604080515f808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa158015611fbc573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b038116611fe757505f925060019150829050611ff0565b92505f91508190505b9450945094915050565b60608261200f5761200a82612059565b612052565b815115801561202657506001600160a01b0384163b155b1561204f57604051639996b31560e01b81526001600160a01b0385166004820152602401610615565b50805b9392505050565b8051156120695780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215612092575f80fd5b5035919050565b5f8083601f8401126120a9575f80fd5b50813567ffffffffffffffff8111156120c0575f80fd5b6020830191508360208260051b85010111156120da575f80fd5b9250929050565b5f8083601f8401126120f1575f80fd5b50813567ffffffffffffffff811115612108575f80fd5b6020830191508360208285010111156120da575f80fd5b5f805f805f805f6080888a031215612135575f80fd5b873567ffffffffffffffff8082111561214c575f80fd5b6121588b838c01612099565b909950975060208a0135915080821115612170575f80fd5b61217c8b838c01612099565b909750955060408a0135945060608a013591508082111561219b575f80fd5b506121a88a828b016120e1565b989b979a50959850939692959293505050565b6001600160a01b03811681146113b1575f80fd5b5f602082840312156121df575f80fd5b8135612052816121bb565b5f805f606084860312156121fc575f80fd5b8335612207816121bb565b92506020840135612217816121bb565b929592945050506040919091013590565b634e487b7160e01b5f52604160045260245ffd5b5f806040838503121561224d575f80fd5b8235612258816121bb565b9150602083013567ffffffffffffffff80821115612274575f80fd5b818501915085601f830112612287575f80fd5b81358181111561229957612299612228565b604051601f8201601f19908116603f011681019083821181831017156122c1576122c1612228565b816040528281528860208487010111156122d9575f80fd5b826020860160208301375f6020848301015280955050505050509250929050565b5f805f806060858703121561230d575f80fd5b8435935060208501359250604085013567ffffffffffffffff811115612331575f80fd5b61233d878288016120e1565b95989497509550505050565b5f805f6060848603121561235b575f80fd5b8335612366816121bb565b95602085013595506040909401359392505050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f805f80604085870312156123c3575f80fd5b843567ffffffffffffffff808211156123da575f80fd5b6123e688838901612099565b909650945060208701359150808211156123fe575f80fd5b5061233d87828801612099565b80151581146113b1575f80fd5b5f8060408385031215612429575f80fd5b82359150602083013561243b8161240b565b809150509250929050565b5f8060408385031215612457575f80fd5b82359150602083013561243b816121bb565b60208082526022908201527f4f6e6c792061646d696e2063616e20706572666f726d2074686973206163746960408201526137b760f11b606082015260800190565b5f602082840312156124bb575f80fd5b81516120528161240b565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b81810381811115611c4257611c426124ef565b634e487b7160e01b5f52603260045260245ffd5b604080825281018490525f8560608301825b8781101561256c57823561254f816121bb565b6001600160a01b031682526020928301929091019060010161253c565b5083810360208501528481526001600160fb1b0385111561258b575f80fd5b8460051b915081866020830137016020019695505050505050565b5f600182016125b7576125b76124ef565b5060010190565b5f602082840312156125ce575f80fd5b5051919050565b8082028115828204841417611c4257611c426124ef565b80820180821115611c4257611c426124ef565b5f8187825b88811015612635578135612617816121bb565b6001600160a01b031683526020928301929190910190600101612604565b50506001600160fb1b0385111561264a575f80fd5b8460051b80878337019283525050602001949350505050565b634e487b7160e01b5f52602160045260245ffd5b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbccd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220c01f56be0deb1eeb812719acea6b0ad2c3b45f58ac5e0a164bd2ec817d02e3a164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xC9D27AFE GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xFD85B1A7 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xFEB61724 EQ PUSH2 0x5B5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC9D27AFE EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xD23254B4 EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xE207D04D EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xEECBBB72 EQ PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xAD3CB1CC GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x427 JUMPI DUP1 PUSH4 0xB17D718E EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0xB62E1EFC EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xC6B0DA1B EQ PUSH2 0x4AE JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3B7 JUMPI DUP1 PUSH4 0x8F283970 EQ PUSH2 0x3F3 JUMPI DUP1 PUSH4 0xA10954FE EQ PUSH2 0x412 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x68F25734 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x68F25734 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0x6E631A4D EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x56F40AA2 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x322 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1794BB3C GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x1794BB3C EQ PUSH2 0x228 JUMPI DUP1 PUSH4 0x2251D3F0 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x27E235E3 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA8BCDB9 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1145A4FF EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x14068E94 EQ PUSH2 0x209 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x204 CALLDATASIZE PUSH1 0x4 PUSH2 0x211F JUMP JUMPDEST PUSH2 0x761 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x214 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x223 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x87F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x233 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0x21EA JUMP JUMPDEST PUSH2 0xA00 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x252 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x1E8 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x223C JUMP JUMPDEST PUSH2 0xB71 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0xB90 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x27A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x36B CALLDATASIZE PUSH1 0x4 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0xBAB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0xC08 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xE26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0xE37 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x266 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x40D CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0xE47 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x432 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x457 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x237B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x47E CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0xF05 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH2 0x49D CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B0 JUMP JUMPDEST PUSH2 0x1027 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2418 JUMP JUMPDEST PUSH2 0x1142 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x506 CALLDATASIZE PUSH1 0x4 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x530 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AE PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x545 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x554 CALLDATASIZE PUSH1 0x4 PUSH2 0x22FA JUMP JUMPDEST PUSH2 0x127F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x564 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x573 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CF JUMP JUMPDEST PUSH2 0x1377 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x583 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x266 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x5B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH2 0x13B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x341 PUSH2 0x5CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x61E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x626 PUSH2 0x14B9 JUMP JUMPDEST DUP1 PUSH1 0x9 SLOAD LT ISZERO PUSH2 0x678 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420726573657276652062616C616E636500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6D4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6F8 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x714 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x725 SWAP2 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x252F4762677E3C294CDBA42D776DA4A2C5A1259438EA5224C3BEA5B27C8F04DC SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x769 PUSH2 0x14B9 JUMP JUMPDEST DUP6 DUP5 EQ PUSH2 0x7CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5061727469636970616E747320616E64206E657742616C616E636573206C656E PUSH1 0x44 DUP3 ADD MSTORE PUSH14 0xCEE8D040DAEAE6E840DAC2E8C6D PUSH1 0x93 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x7DE DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x14E9 JUMP JUMPDEST PUSH0 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x838 JUMPI PUSH2 0x830 DUP9 DUP9 DUP4 DUP2 DUP2 LT PUSH2 0x7FD JUMPI PUSH2 0x7FD PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x812 SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST DUP8 DUP8 DUP5 DUP2 DUP2 LT PUSH2 0x824 JUMPI PUSH2 0x824 PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x7E0 JUMP JUMPDEST POP PUSH32 0x1989B1FE93256BB3B4C6348F76F6F506F926F635CFA802CA3AF4826159C5874B DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x86E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x8B9 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x915 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F2062616C616E636520746F2064697370757465 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH0 SWAP2 DUP3 PUSH2 0x925 DUP4 PUSH2 0x25A6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x970 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x7 DUP2 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD DUP4 DUP2 MSTORE PUSH32 0x8610D91E9F8A63773D7A3C13AA8BB8407203532A61BB703C06FCE895F9622D0D SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0xA45 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0xA61 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0xA6F JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA8D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0xAB7 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0xABF PUSH2 0x1789 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0x1791 JUMP JUMPDEST PUSH2 0xAD0 DUP9 PUSH2 0x17A1 JUMP JUMPDEST PUSH2 0xAD8 PUSH2 0x1789 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP11 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xB55 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB67 PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x180D JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xB79 PUSH2 0x1866 JUMP JUMPDEST PUSH2 0xB82 DUP3 PUSH2 0x190A JUMP JUMPDEST PUSH2 0xB8C DUP3 DUP3 PUSH2 0x1912 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB99 PUSH2 0x19D3 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xBB3 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0xBC1 CALLER JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1A1C JUMP JUMPDEST PUSH2 0xBCC CALLER JUMPDEST DUP6 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE CALLER SWAP1 PUSH32 0x7200CD3D0176B58EA53053A648B9A9CFB0D0D13A52488E14A16E0037B2241D21 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0xC42 PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0xC67 SWAP1 PUSH1 0x2 PUSH2 0x25D5 JUMP JUMPDEST LT ISZERO PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820766F74657320746F20636C6F7365206368616E6E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xD32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F746520494420646F6573206E6F74206D6174636820706172746963697061 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1B9D PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0xD3C DUP4 DUP4 PUSH2 0x1620 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB0 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0xDCC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x93AF0759C861F9140BE6D1C461033B560DBA0E077676CE380708438F5EE23F62 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0xE2E PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xB6F PUSH0 PUSH2 0x1B66 JUMP JUMPDEST PUSH2 0xE3F PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x1BD6 JUMP JUMPDEST PUSH2 0xE4F PUSH2 0x17B2 JUMP JUMPDEST PUSH2 0xE57 PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xEBE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65772061646D696E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x2061646472657373 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x7CE7EC0B50378FB6C0186FFB5F48325F6593FCB4CA4386F21861AF3129188F5C SWAP2 LOG2 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF37 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0xF3F PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFA1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFC5 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0xFE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFF2 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x372B1A73EA80DE8B8F35B0CF88147A1FBC354F7FB9D1409431199A619ACD0C98 SWAP1 PUSH1 0x20 ADD PUSH2 0x756 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1059 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x2469 JUMP JUMPDEST PUSH2 0x1061 PUSH2 0x14B9 JUMP JUMPDEST DUP3 DUP2 EQ PUSH2 0x10B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4172726179206C656E67746873206D757374206D617463680000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10FE JUMPI PUSH2 0x10F6 DUP6 DUP6 DUP4 DUP2 DUP2 LT PUSH2 0x10CF JUMPI PUSH2 0x10CF PUSH2 0x2516 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x10E4 SWAP2 SWAP1 PUSH2 0x21CF JUMP JUMPDEST DUP5 DUP5 DUP5 DUP2 DUP2 LT PUSH2 0x824 JUMPI PUSH2 0x824 PUSH2 0x2516 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x10B2 JUMP JUMPDEST POP PUSH32 0x9071B044465A4E855AABAE9828B35D03EFF50E0110996249E9BD9ADD0D117ED7 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1134 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x114A PUSH2 0x14B9 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x119A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x4E6F2062616C616E636520746F20766F7465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x11F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP2 ISZERO PUSH2 0x1247 JUMPI PUSH0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1241 SWAP1 DUP5 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E SWAP2 ADD PUSH2 0xE19 JUMP JUMPDEST PUSH2 0x1287 PUSH2 0x14B9 JUMP JUMPDEST PUSH2 0x1290 CALLER PUSH2 0xBB8 JUMP JUMPDEST PUSH2 0x1299 CALLER PUSH2 0xBC6 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12F5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1319 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD DUP7 DUP2 MSTORE PUSH32 0x770342EE36990141B5B1F4B3B41A184D7968647AC7F0DBFD2D86D566C468027D SWAP2 ADD PUSH2 0xBFA JUMP JUMPDEST PUSH2 0x137F PUSH2 0x17B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x13A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x1B66 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x13BC PUSH2 0x14B9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x141E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1442 SWAP2 SWAP1 PUSH2 0x24AB JUMP JUMPDEST PUSH2 0x145E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x615 SWAP1 PUSH2 0x24C6 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x147C SWAP1 DUP5 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xAF952B0A28349F5FFFF2D98AA9050EA845ADBE423FF73AC5DA5F268834AE3AC0 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1503 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x25FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x155C DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1C1E SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x15AC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDB98D948185B1C9958591E481D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x16FE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1661 SWAP1 DUP4 PUSH2 0x2503 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 SLOAD LT ISZERO PUSH2 0x16B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F75676820726573657276652062616C616E6365000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x16C6 SWAP2 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x16F2 SWAP1 DUP5 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB8C SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1740 SWAP1 DUP4 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1753 SWAP2 SWAP1 PUSH2 0x25EC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x177F SWAP1 DUP5 SWAP1 PUSH2 0x2503 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x1799 PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0xB6F PUSH2 0x1C91 JUMP JUMPDEST PUSH2 0x17A9 PUSH2 0x1C48 JUMP JUMPDEST PUSH2 0x13B1 DUP2 PUSH2 0x1CB1 JUMP JUMPDEST CALLER PUSH2 0x17E4 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x1815 PUSH2 0x1CB9 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x756 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x18EC JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x18E0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13B1 PUSH2 0x17B2 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x196C JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1969 SWAP2 DUP2 ADD SWAP1 PUSH2 0x25BE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1994 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x19C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH2 0x19CE DUP4 DUP4 PUSH2 0x1CE8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT PUSH1 0x60 DUP8 SWAP1 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x54 DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 SWAP1 PUSH1 0x74 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH2 0x1AA4 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP DUP6 SWAP4 SWAP3 POP POP PUSH2 0x1C1E SWAP1 POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x1AF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1B47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x139BDB98D948185B1C9958591E481D5CD959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 DUP3 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP3 AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH0 SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1BDE PUSH2 0x14B9 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x184E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH2 0x1C2C DUP7 DUP7 PUSH2 0x1D3D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1C3C DUP3 DUP3 PUSH2 0x1D86 JUMP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1C99 PUSH2 0x1C48 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x137F PUSH2 0x1C48 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26AE DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CF1 DUP3 PUSH2 0x1E3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1D35 JUMPI PUSH2 0x19CE DUP3 DUP3 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0xB8C PUSH2 0x1F13 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x1D74 JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH0 BYTE PUSH2 0x1D66 DUP9 DUP3 DUP6 DUP6 PUSH2 0x1F32 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x1D7F JUMP JUMPDEST POP POP DUP2 MLOAD PUSH0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1D99 JUMPI PUSH2 0x1D99 PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0x1DA2 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DB6 JUMPI PUSH2 0x1DB6 PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0x1DD4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1DE8 JUMPI PUSH2 0x1DE8 PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0x1E09 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1D PUSH2 0x2663 JUMP JUMPDEST SUB PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1E73 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x268E DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1EBD SWAP2 SWAP1 PUSH2 0x2677 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1EF5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1EFA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1F0A DUP6 DUP4 DUP4 PUSH2 0x1FFA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0xB6F JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x1F6B JUMPI POP PUSH0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x1FF0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FBC JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1FE7 JUMPI POP PUSH0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x1FF0 JUMP JUMPDEST SWAP3 POP PUSH0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x200F JUMPI PUSH2 0x200A DUP3 PUSH2 0x2059 JUMP JUMPDEST PUSH2 0x2052 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x2026 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x204F JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x615 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2069 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2092 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20C0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x20F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2108 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x20DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0x80 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2135 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x214C JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2158 DUP12 DUP4 DUP13 ADD PUSH2 0x2099 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x20 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2170 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x217C DUP12 DUP4 DUP13 ADD PUSH2 0x2099 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x40 DUP11 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x219B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A8 DUP11 DUP3 DUP12 ADD PUSH2 0x20E1 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP3 SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x13B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2052 DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2207 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2217 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2258 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2274 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2287 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2299 JUMPI PUSH2 0x2299 PUSH2 0x2228 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x22C1 JUMPI PUSH2 0x22C1 PUSH2 0x2228 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x22D9 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x230D JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2331 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x233D DUP8 DUP3 DUP9 ADD PUSH2 0x20E1 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x235B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2366 DUP2 PUSH2 0x21BB JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x23C3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x23DA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x23E6 DUP9 DUP4 DUP10 ADD PUSH2 0x2099 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x23FE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x233D DUP8 DUP3 DUP9 ADD PUSH2 0x2099 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x13B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2429 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x243B DUP2 PUSH2 0x240B JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2457 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x243B DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x37B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24BB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2052 DUP2 PUSH2 0x240B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C42 PUSH2 0x24EF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE DUP2 ADD DUP5 SWAP1 MSTORE PUSH0 DUP6 PUSH1 0x60 DUP4 ADD DUP3 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x256C JUMPI DUP3 CALLDATALOAD PUSH2 0x254F DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x253C JUMP JUMPDEST POP DUP4 DUP2 SUB PUSH1 0x20 DUP6 ADD MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0x258B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL SWAP2 POP DUP2 DUP7 PUSH1 0x20 DUP4 ADD CALLDATACOPY ADD PUSH1 0x20 ADD SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x25B7 JUMPI PUSH2 0x25B7 PUSH2 0x24EF JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25CE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C42 JUMPI PUSH2 0x1C42 PUSH2 0x24EF JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C42 JUMPI PUSH2 0x1C42 PUSH2 0x24EF JUMP JUMPDEST PUSH0 DUP2 DUP8 DUP3 JUMPDEST DUP9 DUP2 LT ISZERO PUSH2 0x2635 JUMPI DUP2 CALLDATALOAD PUSH2 0x2617 DUP2 PUSH2 0x21BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2604 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xFB SHL SUB DUP6 GT ISZERO PUSH2 0x264A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP5 PUSH1 0x5 SHL DUP1 DUP8 DUP4 CALLDATACOPY ADD SWAP3 DUP4 MSTORE POP POP PUSH1 0x20 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBCCD5ED15C6E187E77E9AEE8 DUP2 DUP5 0xC2 0x1F 0x4F 0x21 DUP3 0xAB PC 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220C01F56BE0DEB1EEB812719ACEA PUSH12 0xAD2C3B45F58AC5E0A164BD2 0xEC DUP2 PUSH30 0x2E3A164736F6C6343000819003300000000000000000000000000000000 ",
							"sourceMap": "734:11635:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4203:321;;;;;;;;;;-1:-1:-1;4203:321:12;;;;;:::i;:::-;;:::i;:::-;;8538:578;;;;;;;;;;-1:-1:-1;8538:578:12;;;;;:::i;:::-;;:::i;10485:408::-;;;;;;;;;;-1:-1:-1;10485:408:12;;;;;:::i;:::-;;:::i;2582:373::-;;;;;;;;;;-1:-1:-1;2582:373:12;;;;;:::i;:::-;;:::i;929:24::-;;;;;;;;;;-1:-1:-1;929:24:12;;;;-1:-1:-1;;;;;929:24:12;;;;;;-1:-1:-1;;;;;3100:32:13;;;3082:51;;3070:2;3055:18;929:24:12;;;;;;;;960:43;;;;;;;;;;-1:-1:-1;960:43:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3290:25:13;;;3278:2;3263:18;960:43:12;3144:177:13;3240:65:12;;;;;;;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;1124:46:12:-;;;;;;;;;;-1:-1:-1;1124:46:12;;;;;:::i;:::-;;;;;;;;;;;;;;2692:145:4;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:4;;;2692:145;;;4866:14:13;;4859:22;4841:41;;4829:2;4814:18;2692:145:4;4701:187:13;7911:333:12;;;;;;;;;;-1:-1:-1;7911:333:12;;;;;:::i;:::-;;:::i;11124:609::-;;;;;;;;;;-1:-1:-1;11124:609:12;;;;;:::i;:::-;;:::i;3155:101:0:-;;;;;;;;;;;;;:::i;3066:61:12:-;;;;;;;;;;;;;:::i;2441:144:0:-;;;;;;;;;;-1:-1:-1;1313:22:0;2570:8;-1:-1:-1;;;;;2570:8:0;2441:144;;4904:231:12;;;;;;;;;;-1:-1:-1;4904:231:12;;;;;:::i;:::-;;:::i;1327:29::-;;;;;;;;;;;;;;;;1819:58:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;3776:259:12:-;;;;;;;;;;-1:-1:-1;3776:259:12;;;;;:::i;:::-;;:::i;1179:47::-;;;;;;;;;;-1:-1:-1;1179:47:12;;;;;:::i;:::-;;;;;;;;;;;;;;11933:433;;;;;;;;;;-1:-1:-1;11933:433:12;;;;;:::i;:::-;;:::i;9916:437::-;;;;;;;;;;-1:-1:-1;9916:437:12;;;;;:::i;:::-;;:::i;1059:57::-;;;;;;;;;;-1:-1:-1;1059:57:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1295:25;;;;;;;;;;;;;;;;9333:442;;;;;;;;;;-1:-1:-1;9333:442:12;;;;;:::i;:::-;;:::i;3405:215:0:-;;;;;;;;;;-1:-1:-1;3405:215:0;;;;;:::i;:::-;;:::i;902:20:12:-;;;;;;;;;;-1:-1:-1;902:20:12;;;;-1:-1:-1;;;;;902:20:12;;;5250:261;;;;;;;;;;-1:-1:-1;5250:261:12;;;;;:::i;:::-;;:::i;1010:42::-;;;;;;;;;;-1:-1:-1;1010:42:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;4203:321;4676:5;;-1:-1:-1;;;;;4676:5:12;966:10:3;-1:-1:-1;;;;;4660:21:12;;4652:68;;;;-1:-1:-1;;;4652:68:12;;;;;;;:::i;:::-;;;;;;;;;2316:19:4::1;:17;:19::i;:::-;4318:6:12::2;4300:14;;:24;;4292:65;;;::::0;-1:-1:-1;;;4292:65:12;;8787:2:13;4292:65:12::2;::::0;::::2;8769:21:13::0;8826:2;8806:18;;;8799:30;8865;8845:18;;;8838:58;8913:18;;4292:65:12::2;8585:352:13::0;4292:65:12::2;4376:10;::::0;-1:-1:-1;;;;;4376:10:12::2;:19;966:10:3::0;4376:41:12::2;::::0;-1:-1:-1;;;;;;4376:41:12::2;::::0;;;;;;-1:-1:-1;;;;;9134:32:13;;;4376:41:12::2;::::0;::::2;9116:51:13::0;9183:18;;;9176:34;;;9089:18;;4376:41:12::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4368:69;;;;-1:-1:-1::0;;;4368:69:12::2;;;;;;;:::i;:::-;4466:6;4448:14;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4488:28:12::2;::::0;3290:25:13;;;4488:28:12::2;::::0;3278:2:13;3263:18;4488:28:12::2;;;;;;;;4203:321:::0;:::o;8538:578::-;2316:19:4;:17;:19::i;:::-;8726:41:12;;::::1;8718:100;;;::::0;-1:-1:-1;;;8718:100:12;;10282:2:13;8718:100:12::1;::::0;::::1;10264:21:13::0;10321:2;10301:18;;;10294:30;10360:34;10340:18;;;10333:62;-1:-1:-1;;;10411:18:13;;;10404:44;10465:19;;8718:100:12::1;10080:410:13::0;8718:100:12::1;8829:77;8851:12;;8865:11;;8878;8891:14;;8829:21;:77::i;:::-;8924:6;8919:121;8936:23:::0;;::::1;8919:121;;;8981:47;8996:12;;9009:1;8996:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;9013:11;;9025:1;9013:14;;;;;;;:::i;:::-;;;;;;;8981;:47::i;:::-;8961:3;;8919:121;;;;9055:53;9082:12;;9096:11;;9055:53;;;;;;;;;:::i;:::-;;;;;;;;8538:578:::0;;;;;;;:::o;10485:408::-;4676:5;;-1:-1:-1;;;;;4676:5:12;966:10:3;-1:-1:-1;;;;;4660:21:12;;4652:68;;;;-1:-1:-1;;;4652:68:12;;;;;;;:::i;:::-;2316:19:4::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;10591:21:12;::::2;10615:1;10591:21:::0;;;:8:::2;:21;::::0;;;;;10583:59:::2;;;::::0;-1:-1:-1;;;10583:59:12;;11893:2:13;10583:59:12::2;::::0;::::2;11875:21:13::0;11932:2;11912:18;;;11905:30;-1:-1:-1;;;11951:18:13;;;11944:51;12012:18;;10583:59:12::2;11691:345:13::0;10583:59:12::2;10672:10;:12:::0;;10655:14:::2;::::0;;10672:12:::2;::::0;::::2;:::i;:::-;::::0;;;-1:-1:-1;10718:10:12::2;::::0;:35:::2;::::0;-1:-1:-1;;;10718:35:12;;10747:4:::2;10718:35;::::0;::::2;3082:51:13::0;10655:29:12;;-1:-1:-1;;;;;;10718:10:12::2;::::0;:20:::2;::::0;3055:18:13;;10718:35:12::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10695:20;::::0;;;:12:::2;:20;::::0;;;;;;;:58;;;;10764:17:::2;:25:::0;;;;;;:39;;-1:-1:-1;;;;;;10764:39:12::2;-1:-1:-1::0;;;;;10764:39:12;::::2;::::0;;::::2;::::0;;;10853:32;;3290:25:13;;;10853:32:12::2;::::0;3263:18:13;10853:32:12::2;;;;;;;10572:321;10485:408:::0;:::o;2582:373::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;2699:16:12::1;:14;:16::i;:::-;2726:17;:15;:17::i;:::-;2754:22;2769:6;2754:14;:22::i;:::-;2787:24;:22;:24::i;:::-;2824:5;:14:::0;;-1:-1:-1;;;;;2824:14:12;;::::1;-1:-1:-1::0;;;;;;2824:14:12;;::::1;;::::0;;;;2849:24;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2884:10:::1;:14:::0;2909::::1;:38:::0;;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;12523:50:13;;5142:14:1;;12511:2:13;12496:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2582:373:12;;;:::o;3240:65::-;2334:13:0;:11;:13::i;:::-;3287:10:12::1;:8;:10::i;:::-;3240:65::o:0;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;7911:333:12:-;2316:19:4;:17;:19::i;:::-;8047:73:12::1;966:10:3::0;8064:12:12::1;8078:10;8090:13;8105:14;;8047:16;:73::i;:::-;8133:40;966:10:3::0;8148:12:12::1;8162:10;8133:14;:40::i;:::-;8191:45;::::0;3290:25:13;;;966:10:3;;8191:45:12::1;::::0;3278:2:13;3263:18;8191:45:12::1;;;;;;;;7911:333:::0;;;;:::o;11124:609::-;4676:5;;-1:-1:-1;;;;;4676:5:12;966:10:3;-1:-1:-1;;;;;4660:21:12;;4652:68;;;;-1:-1:-1;;;4652:68:12;;;;;;;:::i;:::-;2316:19:4::1;:17;:19::i;:::-;11287:20:12::2;::::0;;;:12:::2;:20;::::0;;;;;;;;11260:11:::2;:19:::0;;;;;;;:23:::2;::::0;11282:1:::2;11260:23;:::i;:::-;:47;;11252:93;;;::::0;-1:-1:-1;;;11252:93:12;;12959:2:13;11252:93:12::2;::::0;::::2;12941:21:13::0;12998:2;12978:18;;;12971:30;13037:34;13017:18;;;13010:62;-1:-1:-1;;;13088:18:13;;;13081:31;13129:19;;11252:93:12::2;12757:397:13::0;11252:93:12::2;11364:25;::::0;;;:17:::2;:25;::::0;;;;;-1:-1:-1;;;;;11364:40:12;;::::2;:25:::0;::::2;:40;11356:87;;;::::0;-1:-1:-1;;;11356:87:12;;13361:2:13;11356:87:12::2;::::0;::::2;13343:21:13::0;13400:2;13380:18;;;13373:30;13439:34;13419:18;;;13412:62;-1:-1:-1;;;13490:18:13;;;13483:32;13532:19;;11356:87:12::2;13159:398:13::0;11356:87:12::2;11498:39;11513:11;11526:10;11498:14;:39::i;:::-;11556:10;::::0;:44:::2;::::0;-1:-1:-1;;;11556:44:12;;-1:-1:-1;;;;;9134:32:13;;;11556:44:12::2;::::0;::::2;9116:51:13::0;9183:18;;;9176:34;;;11556:10:12;;::::2;::::0;:19:::2;::::0;9089:18:13;;11556:44:12::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11548:72;;;;-1:-1:-1::0;;;11548:72:12::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11631:21:12;::::2;11655:1;11631:21:::0;;;:8:::2;:21;::::0;;;;;;;:25;;;;11674:51;;13736:25:13;;;13777:18;;;13770:34;;;11674:51:12::2;::::0;13709:18:13;11674:51:12::2;;;;;;;;11124:609:::0;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;3066:61:12:-:0;2334:13:0;:11;:13::i;:::-;3111:8:12::1;:6;:8::i;4904:231::-:0;2334:13:0;:11;:13::i;:::-;2316:19:4::1;:17;:19::i;:::-;-1:-1:-1::0;;;;;4995:22:12;::::2;4987:75;;;::::0;-1:-1:-1;;;4987:75:12;;14017:2:13;4987:75:12::2;::::0;::::2;13999:21:13::0;14056:2;14036:18;;;14029:30;14095:34;14075:18;;;14068:62;-1:-1:-1;;;14146:18:13;;;14139:38;14194:19;;4987:75:12::2;13815:404:13::0;4987:75:12::2;5073:5;:16:::0;;-1:-1:-1;;;;;;5073:16:12::2;-1:-1:-1::0;;;;;5073:16:12;::::2;::::0;;::::2;::::0;;5105:22:::2;::::0;5073:16;;5105:22:::2;::::0;::::2;4904:231:::0;:::o;3776:259::-;4676:5;;-1:-1:-1;;;;;4676:5:12;966:10:3;-1:-1:-1;;;;;4660:21:12;;4652:68;;;;-1:-1:-1;;;4652:68:12;;;;;;;:::i;:::-;2316:19:4::1;:17;:19::i;:::-;3870:10:12::2;::::0;-1:-1:-1;;;;;3870:10:12::2;:23;966:10:3::0;3870:60:12::2;::::0;-1:-1:-1;;;;;;3870:60:12::2;::::0;;;;;;-1:-1:-1;;;;;14482:15:13;;;3870:60:12::2;::::0;::::2;14464:34:13::0;3916:4:12::2;14514:18:13::0;;;14507:43;14566:18;;;14559:34;;;14399:18;;3870:60:12::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3862:88;;;;-1:-1:-1::0;;;3862:88:12::2;;;;;;;:::i;:::-;3979:6;3961:14;;:24;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4001:26:12::2;::::0;3290:25:13;;;4001:26:12::2;::::0;3278:2:13;3263:18;4001:26:12::2;3144:177:13::0;11933:433:12;4676:5;;-1:-1:-1;;;;;4676:5:12;966:10:3;-1:-1:-1;;;;;4660:21:12;;4652:68;;;;-1:-1:-1;;;4652:68:12;;;;;;;:::i;:::-;2316:19:4::1;:17;:19::i;:::-;12085:41:12::0;;::::2;12077:78;;;::::0;-1:-1:-1;;;12077:78:12;;14936:2:13;12077:78:12::2;::::0;::::2;14918:21:13::0;14975:2;14955:18;;;14948:30;15014:26;14994:18;;;14987:54;15058:18;;12077:78:12::2;14734:348:13::0;12077:78:12::2;12173:6;12168:121;12185:23:::0;;::::2;12168:121;;;12230:47;12245:12;;12258:1;12245:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;12262:11;;12274:1;12262:14;;;;;;;:::i;12230:47::-;12210:3;;12168:121;;;;12304:54;12332:12;;12346:11;;12304:54;;;;;;;;;:::i;:::-;;;;;;;;11933:433:::0;;;;:::o;9916:437::-;2316:19:4;:17;:19::i;:::-;966:10:3;10027:1:12::1;10002:22:::0;;;:8:::1;:22;::::0;;;;;9994:57:::1;;;::::0;-1:-1:-1;;;9994:57:12;;15289:2:13;9994:57:12::1;::::0;::::1;15271:21:13::0;15328:2;15308:18;;;15301:30;-1:-1:-1;;;15347:18:13;;;15340:48;15405:18;;9994:57:12::1;15087:342:13::0;9994:57:12::1;10071:13;::::0;;;:5:::1;:13;::::0;;;;;;;966:10:3;10071:27:12;;;;;;;;::::1;;10070:28;10062:54;;;::::0;-1:-1:-1;;;10062:54:12;;15636:2:13;10062:54:12::1;::::0;::::1;15618:21:13::0;15675:2;15655:18;;;15648:30;-1:-1:-1;;;15694:18:13;;;15687:43;15747:18;;10062:54:12::1;15434:337:13::0;10062:54:12::1;10129:13;::::0;;;:5:::1;:13;::::0;;;;;;;966:10:3;10129:27:12;;;;;;;:34;;-1:-1:-1;;10129:34:12::1;10159:4;10129:34;::::0;;10191:8:::1;:22:::0;;;;;;10224:69;::::1;;;10252:19;::::0;;;:11:::1;:19;::::0;;;;:29;;10275:6;;10252:19;:29:::1;::::0;10275:6;;10252:29:::1;:::i;:::-;::::0;;;-1:-1:-1;;10224:69:12::1;10310:35;::::0;;13736:25:13;;;13792:2;13777:18;;13770:34;;;966:10:3;;10310:35:12::1;::::0;13709:18:13;10310:35:12::1;13562:248:13::0;9333:442:12;2316:19:4;:17;:19::i;:::-;9461:71:12::1;966:10:3::0;9478:12:12::1;887:96:3::0;9461:71:12::1;9545:40;966:10:3::0;9560:12:12::1;887:96:3::0;9545:40:12::1;9606:10;::::0;-1:-1:-1;;;;;9606:10:12::1;:19;966:10:3::0;9606:45:12::1;::::0;-1:-1:-1;;;;;;9606:45:12::1;::::0;;;;;;-1:-1:-1;;;;;9134:32:13;;;9606:45:12::1;::::0;::::1;9116:51:13::0;9183:18;;;9176:34;;;9089:18;;9606:45:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9598:73;;;;-1:-1:-1::0;;;9598:73:12::1;;;;;;;:::i;:::-;966:10:3::0;9709:1:12::1;9684:22:::0;;;:8:::1;:22;::::0;;;;;;;:26;;;;9728:39;;3290:25:13;;;9728:39:12::1;::::0;3263:18:13;9728:39:12::1;3144:177:13::0;3405:215:0;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:0;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:0;;3562:1:::1;3534:31;::::0;::::1;3082:51:13::0;3055:18;;3534:31:0::1;2921:218:13::0;3485:91:0::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;5250:261:12:-;2316:19:4;:17;:19::i;:::-;5329:10:12::1;::::0;-1:-1:-1;;;;;5329:10:12::1;:23;966:10:3::0;5329:60:12::1;::::0;-1:-1:-1;;;;;;5329:60:12::1;::::0;;;;;;-1:-1:-1;;;;;14482:15:13;;;5329:60:12::1;::::0;::::1;14464:34:13::0;5375:4:12::1;14514:18:13::0;;;14507:43;14566:18;;;14559:34;;;14399:18;;5329:60:12::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5321:88;;;;-1:-1:-1::0;;;5321:88:12::1;;;;;;;:::i;:::-;966:10:3::0;5420:22:12::1;::::0;;;:8:::1;:22;::::0;;;;:32;;5446:6;;5420:22;:32:::1;::::0;5446:6;;5420:32:::1;:::i;:::-;::::0;;;-1:-1:-1;;5468:35:12::1;::::0;3290:25:13;;;966:10:3;;5468:35:12::1;::::0;3278:2:13;3263:18;5468:35:12::1;;;;;;;5250:261:::0;:::o;2905:128:4:-;-1:-1:-1;;;;;;;;;;;2821:9:4;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:4;;;;;;;;;;;6593:417:12;6755:12;6797;;6811:11;;6824:5;6780:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6770:61;;;;;;6755:76;;6859:28;6872:14;;6859:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6859:4:12;;:28;-1:-1:-1;;6859:12:12;:28;-1:-1:-1;6859:28:12:i;:::-;6850:5;;-1:-1:-1;;;;;6850:5:12;;;:37;;;6842:67;;;;-1:-1:-1;;;6842:67:12;;16941:2:13;6842:67:12;;;16923:21:13;16980:2;16960:18;;;16953:30;-1:-1:-1;;;16999:18:13;;;16992:47;17056:18;;6842:67:12;16739:341:13;6842:67:12;6929:16;;;;:10;:16;;;;;;;;6928:17;6920:48;;;;-1:-1:-1;;;6920:48:12;;17287:2:13;6920:48:12;;;17269:21:13;17326:2;17306:18;;;17299:30;-1:-1:-1;;;17345:18:13;;;17338:48;17403:18;;6920:48:12;17085:342:13;6920:48:12;6979:16;;;;:10;:16;;;;;:23;;-1:-1:-1;;6979:23:12;6998:4;6979:23;;;-1:-1:-1;;;;;;;6593:417:12:o;5710:594::-;-1:-1:-1;;;;;5799:21:12;;;;;;:8;:21;;;;;;:34;-1:-1:-1;5795:502:12;;;-1:-1:-1;;;;;5883:21:12;;5850:17;5883:21;;;:8;:21;;;;;;5870:34;;:10;:34;:::i;:::-;5850:54;;5945:9;5927:14;;:27;;5919:66;;;;-1:-1:-1;;;5919:66:12;;17634:2:13;5919:66:12;;;17616:21:13;17673:2;17653:18;;;17646:30;17712:28;17692:18;;;17685:56;17758:18;;5919:66:12;17432:350:13;5919:66:12;6018:9;6000:14;;:27;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6042:21:12;;;;;;:8;:21;;;;;:34;;6067:9;;6042:21;:34;;6067:9;;6042:34;:::i;:::-;;;;-1:-1:-1;5795:502:12;;-1:-1:-1;;5795:502:12;;-1:-1:-1;;;;;6098:21:12;;;;;;:8;:21;;;;;;:34;-1:-1:-1;6094:203:12;;;-1:-1:-1;;;;;6166:21:12;;6149:14;6166:21;;;:8;:21;;;;;;:34;;6190:10;;6166:34;:::i;:::-;6149:51;;6233:6;6215:14;;:24;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6254:21:12;;;;;;:8;:21;;;;;:31;;6279:6;;6254:21;:31;;6279:6;;6254:31;:::i;:::-;;;;-1:-1:-1;;;5710:594:12;;:::o;748:59:3:-;6931:20:1;:18;:20::i;1836:97:4:-;6931:20:1;:18;:20::i;:::-;1899:27:4::1;:25;:27::i;1847:127:0:-:0;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;2658:162::-:0;966:10:3;2717:7:0;1313:22;2570:8;-1:-1:-1;;;;;2570:8:0;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:0;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:0;;966:10:3;2763:40:0;;;3082:51:13;3055:18;;2763:40:0;2921:218:13;3674:178:4;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:4;;-1:-1:-1;;3791:17:4::1;::::0;;3823:22:::1;966:10:3::0;3832:12:4::1;3823:22;::::0;-1:-1:-1;;;;;3100:32:13;;;3082:51;;3070:2;3055:18;3823:22:4::1;2921:218:13::0;4599:312:2;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:6;-1:-1:-1;;;;;2035:53:6;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;3492:116:12;2334:13:0;:11;:13::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;3100:32:13;;6513:60:2;;;3082:51:13;3055:18;;6513:60:2;2921:218:13;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;3290:25:13;;;3263:18;;6312:34:2;3144:177:13;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;:::-;6204:235;6052:538;;:::o;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;7286:386:12;7444:48;;-1:-1:-1;;18181:2:13;18177:15;;;18173:53;7444:48:12;;;18161:66:13;18243:12;;;18236:28;;;18280:12;;;18273:28;;;7419:12:12;;18317::13;;7444:48:12;;;;;;;;;;;;7434:59;;;;;;7419:74;;7521:28;7534:14;;7521:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7521:4:12;;:28;-1:-1:-1;;7521:12:12;:28;-1:-1:-1;7521:28:12:i;:::-;7512:5;;-1:-1:-1;;;;;7512:5:12;;;:37;;;7504:67;;;;-1:-1:-1;;;7504:67:12;;16941:2:13;7504:67:12;;;16923:21:13;16980:2;16960:18;;;16953:30;-1:-1:-1;;;16999:18:13;;;16992:47;17056:18;;7504:67:12;16739:341:13;7504:67:12;7591:16;;;;:10;:16;;;;;;;;7590:17;7582:48;;;;-1:-1:-1;;;7582:48:12;;17287:2:13;7582:48:12;;;17269:21:13;17326:2;17306:18;;;17299:30;-1:-1:-1;;;17345:18:13;;;17338:48;17403:18;;7582:48:12;17085:342:13;7582:48:12;7641:16;;;;:10;:16;;;;;:23;;-1:-1:-1;;7641:23:12;7660:4;7641:23;;;-1:-1:-1;;;;;7286:386:12:o;3774:248:0:-;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:0;;-1:-1:-1;;;;;3941:19:0;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;3366:176:4:-;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:4;;-1:-1:-1;;3484:16:4::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:3::0;3522:12:4::1;887:96:3::0;3702:255:11;3780:7;3800:17;3819:18;3839:16;3859:27;3870:4;3876:9;3859:10;:27::i;:::-;3799:87;;;;;;3896:28;3908:5;3915:8;3896:11;:28::i;:::-;-1:-1:-1;3941:9:11;;-1:-1:-1;;3702:255:11;;;;;:::o;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1939:156:4;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:4;;-1:-1:-1;;2071:17:4::1;::::0;;1939:156::o;1980:235:0:-;6931:20:1;:18;:20::i;3105:126:4:-;-1:-1:-1;;;;;;;;;;;2821:9:4;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:4;;;;;;;;;;;2779:335:6;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:6;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;2129:766:11:-;2210:7;2219:12;2233:7;2256:9;:16;2276:2;2256:22;2252:637;;2592:4;2577:20;;2571:27;2641:4;2626:20;;2620:27;2698:4;2683:20;;2677:27;2294:9;2669:36;2739:25;2750:4;2669:36;2571:27;2620;2739:10;:25::i;:::-;2732:32;;;;;;;;;;;2252:637;-1:-1:-1;;2860:16:11;;2811:1;;-1:-1:-1;2815:35:11;;2252:637;2129:766;;;;;:::o;7196:532::-;7291:20;7282:5;:29;;;;;;;;:::i;:::-;;7278:444;;7196:532;;:::o;7278:444::-;7387:29;7378:5;:38;;;;;;;;:::i;:::-;;7374:348;;7439:23;;-1:-1:-1;;;7439:23:11;;;;;;;;;;;7374:348;7492:35;7483:5;:44;;;;;;;;:::i;:::-;;7479:243;;7550:46;;-1:-1:-1;;;7550:46:11;;;;;3290:25:13;;;3263:18;;7550:46:11;3144:177:13;7479:243:11;7626:30;7617:5;:39;;;;;;;;:::i;:::-;;7613:109;;7679:32;;-1:-1:-1;;;7679:32:11;;;;;3290:25:13;;;3263:18;;7679:32:11;3144:177:13;2186:281:6;2263:17;-1:-1:-1;;;;;2263:29:6;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:6;;-1:-1:-1;;;;;3100:32:13;;2320:47:6;;;3082:51:13;3055:18;;2320:47:6;2921:218:13;2259:119:6;-1:-1:-1;;;;;;;;;;;2387:73:6;;-1:-1:-1;;;;;;2387:73:6;-1:-1:-1;;;;;2387:73:6;;;;;;;;;;2186:281::o;4106:253:8:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:8;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:8:o;6598:122:6:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:6;;;;;;;;;;;5140:1530:11;5266:7;;;6199:66;6186:79;;6182:164;;;-1:-1:-1;6297:1:11;;-1:-1:-1;6301:30:11;;-1:-1:-1;6333:1:11;6281:54;;6182:164;6457:24;;;6440:14;6457:24;;;;;;;;;19005:25:13;;;19078:4;19066:17;;19046:18;;;19039:45;;;;19100:18;;;19093:34;;;19143:18;;;19136:34;;;6457:24:11;;18977:19:13;;6457:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6457:24:11;;-1:-1:-1;;6457:24:11;;;-1:-1:-1;;;;;;;6495:20:11;;6491:113;;-1:-1:-1;6547:1:11;;-1:-1:-1;6551:29:11;;-1:-1:-1;6547:1:11;;-1:-1:-1;6531:62:11;;6491:113;6622:6;-1:-1:-1;6630:20:11;;-1:-1:-1;6630:20:11;;-1:-1:-1;5140:1530:11;;;;;;;;;:::o;4625:582:8:-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:8;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:8;;-1:-1:-1;;;;;3100:32:13;;5121:24:8;;;3082:51:13;3055:18;;5121:24:8;2921:218:13;5041:119:8;-1:-1:-1;5180:10:8;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:8;;;;;;;;;;;14:180:13;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:13;;14:180;-1:-1:-1;14:180:13:o;199:367::-;262:8;272:6;326:3;319:4;311:6;307:17;303:27;293:55;;344:1;341;334:12;293:55;-1:-1:-1;367:20:13;;410:18;399:30;;396:50;;;442:1;439;432:12;396:50;479:4;471:6;467:17;455:29;;539:3;532:4;522:6;519:1;515:14;507:6;503:27;499:38;496:47;493:67;;;556:1;553;546:12;493:67;199:367;;;;;:::o;571:347::-;622:8;632:6;686:3;679:4;671:6;667:17;663:27;653:55;;704:1;701;694:12;653:55;-1:-1:-1;727:20:13;;770:18;759:30;;756:50;;;802:1;799;792:12;756:50;839:4;831:6;827:17;815:29;;891:3;884:4;875:6;867;863:19;859:30;856:39;853:59;;;908:1;905;898:12;923:1129;1074:6;1082;1090;1098;1106;1114;1122;1175:3;1163:9;1154:7;1150:23;1146:33;1143:53;;;1192:1;1189;1182:12;1143:53;1232:9;1219:23;1261:18;1302:2;1294:6;1291:14;1288:34;;;1318:1;1315;1308:12;1288:34;1357:70;1419:7;1410:6;1399:9;1395:22;1357:70;:::i;:::-;1446:8;;-1:-1:-1;1331:96:13;-1:-1:-1;1534:2:13;1519:18;;1506:32;;-1:-1:-1;1550:16:13;;;1547:36;;;1579:1;1576;1569:12;1547:36;1618:72;1682:7;1671:8;1660:9;1656:24;1618:72;:::i;:::-;1709:8;;-1:-1:-1;1592:98:13;-1:-1:-1;1791:2:13;1776:18;;1763:32;;-1:-1:-1;1848:2:13;1833:18;;1820:32;;-1:-1:-1;1864:16:13;;;1861:36;;;1893:1;1890;1883:12;1861:36;;1932:60;1984:7;1973:8;1962:9;1958:24;1932:60;:::i;:::-;923:1129;;;;-1:-1:-1;923:1129:13;;-1:-1:-1;923:1129:13;;;;1906:86;;-1:-1:-1;;;923:1129:13:o;2057:131::-;-1:-1:-1;;;;;2132:31:13;;2122:42;;2112:70;;2178:1;2175;2168:12;2193:247;2252:6;2305:2;2293:9;2284:7;2280:23;2276:32;2273:52;;;2321:1;2318;2311:12;2273:52;2360:9;2347:23;2379:31;2404:5;2379:31;:::i;2445:471::-;2537:6;2545;2553;2606:2;2594:9;2585:7;2581:23;2577:32;2574:52;;;2622:1;2619;2612:12;2574:52;2661:9;2648:23;2680:31;2705:5;2680:31;:::i;:::-;2730:5;-1:-1:-1;2787:2:13;2772:18;;2759:32;2800:33;2759:32;2800:33;:::i;:::-;2445:471;;2852:7;;-1:-1:-1;;;2906:2:13;2891:18;;;;2878:32;;2445:471::o;3326:127::-;3387:10;3382:3;3378:20;3375:1;3368:31;3418:4;3415:1;3408:15;3442:4;3439:1;3432:15;3458:1056;3535:6;3543;3596:2;3584:9;3575:7;3571:23;3567:32;3564:52;;;3612:1;3609;3602:12;3564:52;3651:9;3638:23;3670:31;3695:5;3670:31;:::i;:::-;3720:5;-1:-1:-1;3776:2:13;3761:18;;3748:32;3799:18;3829:14;;;3826:34;;;3856:1;3853;3846:12;3826:34;3894:6;3883:9;3879:22;3869:32;;3939:7;3932:4;3928:2;3924:13;3920:27;3910:55;;3961:1;3958;3951:12;3910:55;3997:2;3984:16;4019:2;4015;4012:10;4009:36;;;4025:18;;:::i;:::-;4100:2;4094:9;4068:2;4154:13;;-1:-1:-1;;4150:22:13;;;4174:2;4146:31;4142:40;4130:53;;;4198:18;;;4218:22;;;4195:46;4192:72;;;4244:18;;:::i;:::-;4284:10;4280:2;4273:22;4319:2;4311:6;4304:18;4359:7;4354:2;4349;4345;4341:11;4337:20;4334:33;4331:53;;;4380:1;4377;4370:12;4331:53;4436:2;4431;4427;4423:11;4418:2;4410:6;4406:15;4393:46;4481:1;4476:2;4471;4463:6;4459:15;4455:24;4448:35;4502:6;4492:16;;;;;;;3458:1056;;;;;:::o;4893:545::-;4981:6;4989;4997;5005;5058:2;5046:9;5037:7;5033:23;5029:32;5026:52;;;5074:1;5071;5064:12;5026:52;5110:9;5097:23;5087:33;;5167:2;5156:9;5152:18;5139:32;5129:42;;5222:2;5211:9;5207:18;5194:32;5249:18;5241:6;5238:30;5235:50;;;5281:1;5278;5271:12;5235:50;5320:58;5370:7;5361:6;5350:9;5346:22;5320:58;:::i;:::-;4893:545;;;;-1:-1:-1;5397:8:13;-1:-1:-1;;;;4893:545:13:o;5443:383::-;5520:6;5528;5536;5589:2;5577:9;5568:7;5564:23;5560:32;5557:52;;;5605:1;5602;5595:12;5557:52;5644:9;5631:23;5663:31;5688:5;5663:31;:::i;:::-;5713:5;5765:2;5750:18;;5737:32;;-1:-1:-1;5816:2:13;5801:18;;;5788:32;;5443:383;-1:-1:-1;;;5443:383:13:o;6039:418::-;6188:2;6177:9;6170:21;6151:4;6220:6;6214:13;6263:6;6258:2;6247:9;6243:18;6236:34;6322:6;6317:2;6309:6;6305:15;6300:2;6289:9;6285:18;6279:50;6378:1;6373:2;6364:6;6353:9;6349:22;6345:31;6338:42;6448:2;6441;6437:7;6432:2;6424:6;6420:15;6416:29;6405:9;6401:45;6397:54;6389:62;;;6039:418;;;;:::o;6462:773::-;6584:6;6592;6600;6608;6661:2;6649:9;6640:7;6636:23;6632:32;6629:52;;;6677:1;6674;6667:12;6629:52;6717:9;6704:23;6746:18;6787:2;6779:6;6776:14;6773:34;;;6803:1;6800;6793:12;6773:34;6842:70;6904:7;6895:6;6884:9;6880:22;6842:70;:::i;:::-;6931:8;;-1:-1:-1;6816:96:13;-1:-1:-1;7019:2:13;7004:18;;6991:32;;-1:-1:-1;7035:16:13;;;7032:36;;;7064:1;7061;7054:12;7032:36;;7103:72;7167:7;7156:8;7145:9;7141:24;7103:72;:::i;7240:118::-;7326:5;7319:13;7312:21;7305:5;7302:32;7292:60;;7348:1;7345;7338:12;7363:309;7428:6;7436;7489:2;7477:9;7468:7;7464:23;7460:32;7457:52;;;7505:1;7502;7495:12;7457:52;7541:9;7528:23;7518:33;;7601:2;7590:9;7586:18;7573:32;7614:28;7636:5;7614:28;:::i;:::-;7661:5;7651:15;;;7363:309;;;;;:::o;7677:315::-;7745:6;7753;7806:2;7794:9;7785:7;7781:23;7777:32;7774:52;;;7822:1;7819;7812:12;7774:52;7858:9;7845:23;7835:33;;7918:2;7907:9;7903:18;7890:32;7931:31;7956:5;7931:31;:::i;8182:398::-;8384:2;8366:21;;;8423:2;8403:18;;;8396:30;8462:34;8457:2;8442:18;;8435:62;-1:-1:-1;;;8528:2:13;8513:18;;8506:32;8570:3;8555:19;;8182:398::o;9221:245::-;9288:6;9341:2;9329:9;9320:7;9316:23;9312:32;9309:52;;;9357:1;9354;9347:12;9309:52;9389:9;9383:16;9408:28;9430:5;9408:28;:::i;9471:339::-;9673:2;9655:21;;;9712:2;9692:18;;;9685:30;-1:-1:-1;;;9746:2:13;9731:18;;9724:45;9801:2;9786:18;;9471:339::o;9815:127::-;9876:10;9871:3;9867:20;9864:1;9857:31;9907:4;9904:1;9897:15;9931:4;9928:1;9921:15;9947:128;10014:9;;;10035:11;;;10032:37;;;10049:18;;:::i;10495:127::-;10556:10;10551:3;10547:20;10544:1;10537:31;10587:4;10584:1;10577:15;10611:4;10608:1;10601:15;10627:1059;10915:2;10927:21;;;10900:18;;10983:22;;;10867:4;11062:6;11036:2;11021:18;;10867:4;11096:304;11110:6;11107:1;11104:13;11096:304;;;11185:6;11172:20;11205:31;11230:5;11205:31;:::i;:::-;-1:-1:-1;;;;;11261:31:13;11249:44;;11316:4;11375:15;;;;11340:12;;;;11289:1;11125:9;11096:304;;;-1:-1:-1;11438:19:13;;;11431:4;11416:20;;11409:49;11467:19;;;-1:-1:-1;;;;;11498:31:13;;11495:51;;;11542:1;11539;11532:12;11495:51;11576:6;11573:1;11569:14;11555:28;;11629:6;11621;11614:4;11609:3;11605:14;11592:44;11657:16;11675:4;11653:27;;10627:1059;-1:-1:-1;;;;;;10627:1059:13:o;12041:135::-;12080:3;12101:17;;;12098:43;;12121:18;;:::i;:::-;-1:-1:-1;12168:1:13;12157:13;;12041:135::o;12181:184::-;12251:6;12304:2;12292:9;12283:7;12279:23;12275:32;12272:52;;;12320:1;12317;12310:12;12272:52;-1:-1:-1;12343:16:13;;12181:184;-1:-1:-1;12181:184:13:o;12584:168::-;12657:9;;;12688;;12705:15;;;12699:22;;12685:37;12675:71;;12726:18;;:::i;14604:125::-;14669:9;;;14690:10;;;14687:36;;;14703:18;;:::i;15776:958::-;16063:3;16094;16141:6;16063:3;16175:310;16189:6;16186:1;16183:13;16175:310;;;16264:6;16251:20;16284:31;16309:5;16284:31;:::i;:::-;-1:-1:-1;;;;;16342:31:13;16328:46;;16397:4;16423:14;;;;16460:15;;;;;16370:1;16204:9;16175:310;;;-1:-1:-1;;;;;;;16497:31:13;;16494:51;;;16541:1;16538;16531:12;16494:51;16575:6;16572:1;16568:14;16619:6;16611;16604:5;16591:35;16648:18;16675:21;;;-1:-1:-1;;16723:4:13;16712:16;;15776:958;-1:-1:-1;;;;15776:958:13:o;18340:127::-;18401:10;18396:3;18392:20;18389:1;18382:31;18432:4;18429:1;18422:15;18456:4;18453:1;18446:15;18472:301;18601:3;18639:6;18633:13;18685:6;18678:4;18670:6;18666:17;18661:3;18655:37;18747:1;18711:16;;18736:13;;;-1:-1:-1;18711:16:13;18472:301;-1:-1:-1;18472:301:13:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1997400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"admin()": "2390",
								"balances(address)": "2600",
								"batchUpdateBalances(address[],uint256[],uint256,bytes)": "infinite",
								"batchUpdateChannelbyadmin(address[],uint256[])": "infinite",
								"changeAdmin(address)": "infinite",
								"closeChannel(uint256,uint256,bytes)": "infinite",
								"closeChannelByDAO(address,uint256,uint256)": "infinite",
								"depositToReserve(uint256)": "infinite",
								"initialize(address,address,uint256)": "infinite",
								"nextVoteId()": "2383",
								"openChannel(uint256)": "infinite",
								"owner()": "2365",
								"pause()": "infinite",
								"paused()": "infinite",
								"pointToken()": "2393",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"reserveBalance()": "2384",
								"startVoteToCloseChannel(address)": "infinite",
								"totalWeights(uint256)": "2524",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateChannelState(uint256,uint256,bytes)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"usedNonces(bytes32)": "2557",
								"vote(uint256,bool)": "infinite",
								"voteWeights(uint256)": "2525",
								"votes(uint256,address)": "2692",
								"withdrawFromReserve(uint256)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"_updateBalance(address,uint256)": "infinite",
								"_verifyBatchSignature(address[] calldata,uint256[] calldata,uint256,bytes calldata)": "infinite",
								"_verifySignature(address,uint256,uint256,bytes calldata)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2287,
									"end": 2342,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2312,
									"end": 2334,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2312,
									"end": 2332,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2312,
									"end": 2334,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2312,
									"end": 2334,
									"name": "tag",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2312,
									"end": 2334,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "468"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 12369,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c01f56be0deb1eeb812719acea6b0ad2c3b45f58ac5e0a164bd2ec817d02e3a164736f6c63430008190033",
									".code": [
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "C9D27AFE"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "F2FDE38B"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "F851A440"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "FD85B1A7"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "FEB61724"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "C9D27AFE"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "D23254B4"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "E207D04D"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "EECBBB72"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "33"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "AD3CB1CC"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "AD3CB1CC"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "B17D718E"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "B62E1EFC"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "C6B0DA1B"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "35"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "8DA5CB5B"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "8F283970"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "A10954FE"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "4F1EF286"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "68F25734"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "68F25734"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "6E631A4D"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "715018A6"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "8456CB59"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "4F1EF286"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "52D1902D"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "56F40AA2"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "5C975ABB"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "1794BB3C"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "1794BB3C"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "2251D3F0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "27E235E3"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "3F4BA83A"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "A8BCDB9"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "1145A4FF"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "14068E94"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 734,
											"end": 12369,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 4203,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4203,
											"end": 4524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 8538,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 8538,
											"end": 9116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 10485,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 10485,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 2582,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2582,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "tag",
											"source": 12,
											"value": "59"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 929,
											"end": 953,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 929,
											"end": 953,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3072,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 929,
											"end": 953,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 953,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 929,
											"end": 953,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 960,
											"end": 1003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 960,
											"end": 1003,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 3144,
											"end": 3321,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3240,
											"end": 3305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1124,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1124,
											"end": 1170,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4866,
											"end": 4880,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4866,
											"end": 4880,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4859,
											"end": 4881,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4882,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4882,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4829,
											"end": 4831,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4832,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 4701,
											"end": 4888,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 7911,
											"end": 8244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 7911,
											"end": 8244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 11124,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 11124,
											"end": 11733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3066,
											"end": 3127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 4904,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "tag",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 4904,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1356,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 3776,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 3776,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "tag",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1179,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1179,
											"end": 1226,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 11933,
											"end": 12366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 11933,
											"end": 12366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 9916,
											"end": 10353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9916,
											"end": 10353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1059,
											"end": 1116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1059,
											"end": 1116,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1295,
											"end": 1320,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 9333,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 9333,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 902,
											"end": 922,
											"name": "tag",
											"source": 12,
											"value": "29"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 902,
											"end": 922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 902,
											"end": 922,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 902,
											"end": 922,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 902,
											"end": 922,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 5250,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5250,
											"end": 5511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "42"
										},
										{
											"begin": 1010,
											"end": 1052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1010,
											"end": 1052,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4652,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2316,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4318,
											"end": 4324,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4314,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4300,
											"end": 4314,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4324,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 4300,
											"end": 4324,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4292,
											"end": 4357,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4292,
											"end": 4357,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4357,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8787,
											"end": 8789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4292,
											"end": 4357,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8769,
											"end": 8790,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8826,
											"end": 8828,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8806,
											"end": 8824,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8799,
											"end": 8829,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8865,
											"end": 8895,
											"name": "PUSH",
											"source": 13,
											"value": "496E73756666696369656E7420726573657276652062616C616E636500000000"
										},
										{
											"begin": 8845,
											"end": 8863,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 8845,
											"end": 8863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8845,
											"end": 8863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8838,
											"end": 8896,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8913,
											"end": 8931,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 8585,
											"end": 8937,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "187"
										},
										{
											"begin": 4292,
											"end": 4357,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4386,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 4376,
											"end": 4386,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4376,
											"end": 4386,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4417,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "194"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 4376,
											"end": 4417,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "195"
										},
										{
											"begin": 4376,
											"end": 4417,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 4368,
											"end": 4437,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 4368,
											"end": 4437,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4472,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 4448,
											"end": 4462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 4448,
											"end": 4472,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 4448,
											"end": 4472,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4448,
											"end": 4472,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4488,
											"end": 4516,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "252F4762677E3C294CDBA42D776DA4A2C5A1259438EA5224C3BEA5B27C8F04DC"
										},
										{
											"begin": 4488,
											"end": 4516,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4488,
											"end": 4516,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4203,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8767,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8726,
											"end": 8767,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8726,
											"end": 8767,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8718,
											"end": 8818,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8718,
											"end": 8818,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8718,
											"end": 8818,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10282,
											"end": 10284,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8718,
											"end": 8818,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10264,
											"end": 10285,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10321,
											"end": 10323,
											"name": "PUSH",
											"source": 13,
											"value": "2E"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10301,
											"end": 10319,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10294,
											"end": 10324,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10360,
											"end": 10394,
											"name": "PUSH",
											"source": 13,
											"value": "5061727469636970616E747320616E64206E657742616C616E636573206C656E"
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10333,
											"end": 10395,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CEE8D040DAEAE6E840DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "93"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10411,
											"end": 10429,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10404,
											"end": 10448,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 10465,
											"end": 10484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 10080,
											"end": 10490,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 8718,
											"end": 8818,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 8906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 8851,
											"end": 8863,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8851,
											"end": 8863,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8865,
											"end": 8876,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8878,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 8905,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8891,
											"end": 8905,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 8850,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 8829,
											"end": 8906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8829,
											"end": 8906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 8829,
											"end": 8906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8924,
											"end": 8930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8936,
											"end": 8959,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8936,
											"end": 8959,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8936,
											"end": 8959,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 9028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 8996,
											"end": 9008,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9008,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9009,
											"end": 9010,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 8996,
											"end": 9011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "216"
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 8996,
											"end": 9011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "218"
										},
										{
											"begin": 8996,
											"end": 9011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9024,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9024,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9025,
											"end": 9026,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 9013,
											"end": 9027,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9027,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 8995,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 8981,
											"end": 9028,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8981,
											"end": 9028,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "214"
										},
										{
											"begin": 8981,
											"end": 9028,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8961,
											"end": 8964,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8961,
											"end": 8964,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8919,
											"end": 9040,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1989B1FE93256BB3B4C6348F76F6F506F926F635CFA802CA3AF4826159C5874B"
										},
										{
											"begin": 9082,
											"end": 9094,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9082,
											"end": 9094,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9107,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9096,
											"end": 9107,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 9055,
											"end": 9108,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "222"
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9055,
											"end": 9108,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8538,
											"end": 9116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4652,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2316,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10591,
											"end": 10612,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10615,
											"end": 10616,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10591,
											"end": 10599,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10591,
											"end": 10612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10591,
											"end": 10612,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10583,
											"end": 10642,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10583,
											"end": 10642,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10642,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11893,
											"end": 11895,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10583,
											"end": 10642,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11875,
											"end": 11896,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11932,
											"end": 11934,
											"name": "PUSH",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 11912,
											"end": 11930,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11912,
											"end": 11930,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11912,
											"end": 11930,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11905,
											"end": 11935,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2062616C616E636520746F2064697370757465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11951,
											"end": 11969,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 11951,
											"end": 11969,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11951,
											"end": 11969,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11944,
											"end": 11995,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12012,
											"end": 12030,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 12012,
											"end": 12030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 11691,
											"end": 12036,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "231"
										},
										{
											"begin": 10583,
											"end": 10642,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10682,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 10672,
											"end": 10684,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10684,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10669,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10684,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 10672,
											"end": 10684,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10684,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "235"
										},
										{
											"begin": 10672,
											"end": 10684,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10684,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "234"
										},
										{
											"begin": 10672,
											"end": 10684,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10684,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10672,
											"end": 10684,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10718,
											"end": 10728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10718,
											"end": 10728,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10753,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10718,
											"end": 10753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10747,
											"end": 10751,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10718,
											"end": 10753,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10655,
											"end": 10684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10684,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10718,
											"end": 10728,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10728,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10738,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 10718,
											"end": 10738,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10718,
											"end": 10753,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 10718,
											"end": 10753,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 10718,
											"end": 10753,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10707,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 10695,
											"end": 10715,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10715,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10753,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10753,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10753,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10695,
											"end": 10753,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10781,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10789,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10764,
											"end": 10803,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10764,
											"end": 10803,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10885,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "8610D91E9F8A63773D7A3C13AA8BB8407203532A61BB703C06FCE895F9622D0D"
										},
										{
											"begin": 10853,
											"end": 10885,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10853,
											"end": 10885,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 10572,
											"end": 10893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10485,
											"end": 10893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2699,
											"end": 2715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2699,
											"end": 2713,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2699,
											"end": 2715,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2699,
											"end": 2715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 2699,
											"end": 2715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2726,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2726,
											"end": 2743,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2743,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2726,
											"end": 2743,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2769,
											"end": 2775,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2754,
											"end": 2776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2776,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2754,
											"end": 2776,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 2787,
											"end": 2809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2787,
											"end": 2811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 2787,
											"end": 2811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2824,
											"end": 2838,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2873,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2884,
											"end": 2894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 2884,
											"end": 2898,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2923,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 2909,
											"end": 2947,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2947,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2909,
											"end": 2947,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 12523,
											"end": 12573,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12523,
											"end": 12573,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12511,
											"end": 12513,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12496,
											"end": 12514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 3240,
											"end": 3305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3287,
											"end": 3297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3287,
											"end": 3295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 3287,
											"end": 3297,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3287,
											"end": 3297,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3287,
											"end": 3297,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3240,
											"end": 3305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8047,
											"end": 8120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8064,
											"end": 8076,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 8064,
											"end": 8076,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8078,
											"end": 8088,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8090,
											"end": 8103,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8105,
											"end": 8119,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8105,
											"end": 8119,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8063,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 8047,
											"end": 8120,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8047,
											"end": 8120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 8047,
											"end": 8120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8133,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 8148,
											"end": 8160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 8148,
											"end": 8160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8162,
											"end": 8172,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8133,
											"end": 8147,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 8133,
											"end": 8173,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8133,
											"end": 8173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 8133,
											"end": 8173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8191,
											"end": 8236,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7200CD3D0176B58EA53053A648B9A9CFB0D0D13A52488E14A16E0037B2241D21"
										},
										{
											"begin": 8191,
											"end": 8236,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8191,
											"end": 8236,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7911,
											"end": 8244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4652,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "295"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 2316,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11299,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 11287,
											"end": 11307,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11287,
											"end": 11307,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 11260,
											"end": 11279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11279,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11279,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11279,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11279,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11279,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11279,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11283,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 11260,
											"end": 11283,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11282,
											"end": 11283,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 11260,
											"end": 11283,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "301"
										},
										{
											"begin": 11260,
											"end": 11283,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11283,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 11260,
											"end": 11283,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11307,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11307,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11252,
											"end": 11345,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11252,
											"end": 11345,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11345,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12959,
											"end": 12961,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11252,
											"end": 11345,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12941,
											"end": 12962,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12998,
											"end": 13000,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 12978,
											"end": 12996,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 12978,
											"end": 12996,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12978,
											"end": 12996,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12971,
											"end": 13001,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13037,
											"end": 13071,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420656E6F75676820766F74657320746F20636C6F7365206368616E6E65"
										},
										{
											"begin": 13017,
											"end": 13035,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13017,
											"end": 13035,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13017,
											"end": 13035,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13010,
											"end": 13072,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13088,
											"end": 13106,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13088,
											"end": 13106,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13088,
											"end": 13106,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13081,
											"end": 13112,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13129,
											"end": 13148,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 12757,
											"end": 13154,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 11252,
											"end": 11345,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11381,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 11364,
											"end": 11389,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11364,
											"end": 11404,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11404,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11404,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11389,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11364,
											"end": 11404,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11356,
											"end": 11443,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11356,
											"end": 11443,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11356,
											"end": 11443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13361,
											"end": 13363,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11356,
											"end": 11443,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13343,
											"end": 13364,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13400,
											"end": 13402,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 13380,
											"end": 13398,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 13380,
											"end": 13398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13380,
											"end": 13398,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13373,
											"end": 13403,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13439,
											"end": 13473,
											"name": "PUSH",
											"source": 13,
											"value": "566F746520494420646F6573206E6F74206D6174636820706172746963697061"
										},
										{
											"begin": 13419,
											"end": 13437,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 13419,
											"end": 13437,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13419,
											"end": 13437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13412,
											"end": 13474,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13490,
											"end": 13508,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 13490,
											"end": 13508,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13490,
											"end": 13508,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13483,
											"end": 13515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13532,
											"end": 13551,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 13532,
											"end": 13551,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 13159,
											"end": 13557,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "305"
										},
										{
											"begin": 11356,
											"end": 11443,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11537,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 11513,
											"end": 11524,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11526,
											"end": 11536,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11512,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 11498,
											"end": 11537,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11498,
											"end": 11537,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "308"
										},
										{
											"begin": 11498,
											"end": 11537,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 11556,
											"end": 11566,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11556,
											"end": 11600,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11556,
											"end": 11600,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11556,
											"end": 11600,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11566,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11566,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11566,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11566,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11575,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 11556,
											"end": 11575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11556,
											"end": 11600,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 11556,
											"end": 11600,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 11556,
											"end": 11600,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 11548,
											"end": 11620,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 11548,
											"end": 11620,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 11655,
											"end": 11656,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11639,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 11631,
											"end": 11652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11652,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11656,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11656,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11656,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11656,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13736,
											"end": 13761,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13761,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13761,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "93AF0759C861F9140BE6D1C461033B560DBA0E077676CE380708438F5EE23F62"
										},
										{
											"begin": 11674,
											"end": 11725,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13709,
											"end": 13727,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11674,
											"end": 11725,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11124,
											"end": 11733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3066,
											"end": 3127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3111,
											"end": 3119,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3111,
											"end": 3117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 3111,
											"end": 3119,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "331"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2316,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4995,
											"end": 5017,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4995,
											"end": 5017,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4987,
											"end": 5062,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5062,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5062,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14017,
											"end": 14019,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4987,
											"end": 5062,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13999,
											"end": 14020,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14056,
											"end": 14058,
											"name": "PUSH",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 14036,
											"end": 14054,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14036,
											"end": 14054,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14036,
											"end": 14054,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14029,
											"end": 14059,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14095,
											"end": 14129,
											"name": "PUSH",
											"source": 13,
											"value": "4E65772061646D696E20616464726573732063616E6E6F74206265207A65726F"
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14075,
											"end": 14093,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14068,
											"end": 14130,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14146,
											"end": 14164,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14139,
											"end": 14177,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14194,
											"end": 14213,
											"name": "PUSH",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 14194,
											"end": 14213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 13815,
											"end": 14219,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 4987,
											"end": 5062,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5078,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5089,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"modifierDepth": 2,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5105,
											"end": 5127,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5073,
											"end": 5089,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5105,
											"end": 5127,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "7CE7EC0B50378FB6C0186FFB5F48325F6593FCB4CA4386F21861AF3129188F5C"
										},
										{
											"begin": 5105,
											"end": 5127,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5105,
											"end": 5127,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4904,
											"end": 5135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 3776,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4652,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 2316,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3870,
											"end": 3880,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3870,
											"end": 3880,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3880,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3893,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14482,
											"end": 14497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14497,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14497,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14464,
											"end": 14498,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3916,
											"end": 3920,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 14514,
											"end": 14532,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14514,
											"end": 14532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14514,
											"end": 14532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14507,
											"end": 14550,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14559,
											"end": 14593,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14559,
											"end": 14593,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14559,
											"end": 14593,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3930,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 3870,
											"end": 3930,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 3870,
											"end": 3930,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 3862,
											"end": 3950,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 3862,
											"end": 3950,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3979,
											"end": 3985,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 3961,
											"end": 3975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 3961,
											"end": 3985,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 3961,
											"end": 3985,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3961,
											"end": 3985,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4001,
											"end": 4027,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4001,
											"end": 4027,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4001,
											"end": 4027,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "372B1A73EA80DE8B8F35B0CF88147A1FBC354F7FB9D1409431199A619ACD0C98"
										},
										{
											"begin": 4001,
											"end": 4027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4001,
											"end": 4027,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 3144,
											"end": 3321,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4676,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4660,
											"end": 4681,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 4652,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 4652,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 2316,
											"end": 2333,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 2316,
											"end": 2335,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12085,
											"end": 12126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12085,
											"end": 12126,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12085,
											"end": 12126,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12077,
											"end": 12155,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12077,
											"end": 12155,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12155,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14936,
											"end": 14938,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 12077,
											"end": 12155,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14918,
											"end": 14939,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14975,
											"end": 14977,
											"name": "PUSH",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 14955,
											"end": 14973,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14955,
											"end": 14973,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14955,
											"end": 14973,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14948,
											"end": 14978,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15014,
											"end": 15040,
											"name": "PUSH",
											"source": 13,
											"value": "4172726179206C656E67746873206D757374206D617463680000000000000000"
										},
										{
											"begin": 14994,
											"end": 15012,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14994,
											"end": 15012,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14994,
											"end": 15012,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14987,
											"end": 15041,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15058,
											"end": 15076,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 14734,
											"end": 15082,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 12077,
											"end": 12155,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12173,
											"end": 12179,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12185,
											"end": 12208,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12185,
											"end": 12208,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12185,
											"end": 12208,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12277,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12245,
											"end": 12257,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12257,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12258,
											"end": 12259,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 12245,
											"end": 12260,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 12245,
											"end": 12260,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12245,
											"end": 12260,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12273,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12273,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12274,
											"end": 12275,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12276,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12276,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12276,
											"modifierDepth": 2,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12276,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12262,
											"end": 12276,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12262,
											"end": 12276,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "220"
										},
										{
											"begin": 12262,
											"end": 12276,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "217"
										},
										{
											"begin": 12262,
											"end": 12276,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12230,
											"end": 12277,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 12230,
											"end": 12277,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12210,
											"end": 12213,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12210,
											"end": 12213,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12168,
											"end": 12289,
											"modifierDepth": 2,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "9071B044465A4E855AABAE9828B35D03EFF50E0110996249E9BD9ADD0D117ED7"
										},
										{
											"begin": 12332,
											"end": 12344,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12332,
											"end": 12344,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12346,
											"end": 12357,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12346,
											"end": 12357,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 12304,
											"end": 12358,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12304,
											"end": 12358,
											"modifierDepth": 2,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 12366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 9916,
											"end": 10353,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 10027,
											"end": 10028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10010,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10002,
											"end": 10024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10002,
											"end": 10024,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9994,
											"end": 10051,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9994,
											"end": 10051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9994,
											"end": 10051,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15289,
											"end": 15291,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9994,
											"end": 10051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15271,
											"end": 15292,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15328,
											"end": 15330,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 15308,
											"end": 15326,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15308,
											"end": 15326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15308,
											"end": 15326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15301,
											"end": 15331,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2062616C616E636520746F20766F7465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15347,
											"end": 15365,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15340,
											"end": 15388,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15423,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15405,
											"end": 15423,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 15087,
											"end": 15429,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 9994,
											"end": 10051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10071,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10084,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 10071,
											"end": 10098,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10070,
											"end": 10098,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10062,
											"end": 10116,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10062,
											"end": 10116,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10062,
											"end": 10116,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15636,
											"end": 15638,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10062,
											"end": 10116,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15618,
											"end": 15639,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15675,
											"end": 15677,
											"name": "PUSH",
											"source": 13,
											"value": "D"
										},
										{
											"begin": 15655,
											"end": 15673,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 15655,
											"end": 15673,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15655,
											"end": 15673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15648,
											"end": 15678,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481D9BDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15694,
											"end": 15712,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 15694,
											"end": 15712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15694,
											"end": 15712,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15687,
											"end": 15730,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 15747,
											"end": 15765,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 15434,
											"end": 15771,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 10062,
											"end": 10116,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 10129,
											"end": 10142,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10142,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 10129,
											"end": 10156,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10156,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10156,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10156,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10156,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10156,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10163,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10163,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10129,
											"end": 10163,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10159,
											"end": 10163,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 10129,
											"end": 10163,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10163,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10129,
											"end": 10163,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10199,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10191,
											"end": 10213,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10224,
											"end": 10293,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10224,
											"end": 10293,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10224,
											"end": 10293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10224,
											"end": 10293,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10263,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10252,
											"end": 10271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10271,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 10252,
											"end": 10281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10275,
											"end": 10281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 10252,
											"end": 10281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 10252,
											"end": 10281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10252,
											"end": 10281,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10224,
											"end": 10293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 10224,
											"end": 10293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10310,
											"end": 10345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10310,
											"end": 10345,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10310,
											"end": 10345,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13736,
											"end": 13761,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13761,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13736,
											"end": 13761,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13792,
											"end": 13794,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13777,
											"end": 13795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13770,
											"end": 13804,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10310,
											"end": 10345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1ABE610CF2BF87E57DCC1181FCF5AC0934E843D8344AB9EED6E86C799F62585E"
										},
										{
											"begin": 10310,
											"end": 10345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13709,
											"end": 13727,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10310,
											"end": 10345,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 13562,
											"end": 13810,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 9333,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9461,
											"end": 9532,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9478,
											"end": 9490,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9461,
											"end": 9532,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "396"
										},
										{
											"begin": 9461,
											"end": 9532,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9545,
											"end": 9585,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9560,
											"end": 9572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9545,
											"end": 9585,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 9545,
											"end": 9585,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9606,
											"end": 9616,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9606,
											"end": 9616,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9134,
											"end": 9166,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9167,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9176,
											"end": 9210,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9089,
											"end": 9107,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9651,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 9606,
											"end": 9651,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 9606,
											"end": 9651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 9598,
											"end": 9671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 9598,
											"end": 9671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 9709,
											"end": 9710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9692,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9684,
											"end": 9706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9706,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9710,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9710,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9710,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9684,
											"end": 9710,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9728,
											"end": 9767,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9728,
											"end": 9767,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 9767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "770342EE36990141B5B1F4B3B41A184D7968647AC7F0DBFD2D86D566C468027D"
										},
										{
											"begin": 9728,
											"end": 9767,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9728,
											"end": 9767,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "292"
										},
										{
											"begin": 3144,
											"end": 3321,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "411"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2921,
											"end": 3139,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "417"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5329,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5329,
											"end": 5339,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5339,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5352,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14482,
											"end": 14497,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14497,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14482,
											"end": 14497,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14464,
											"end": 14498,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5379,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 14514,
											"end": 14532,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 14514,
											"end": 14532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14514,
											"end": 14532,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14507,
											"end": 14550,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14566,
											"end": 14584,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14559,
											"end": 14593,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14559,
											"end": 14593,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14559,
											"end": 14593,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 14399,
											"end": 14417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5389,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 5329,
											"end": 5389,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 5329,
											"end": 5389,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 5321,
											"end": 5409,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5321,
											"end": 5409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5420,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5420,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5420,
											"end": 5452,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5446,
											"end": 5452,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5420,
											"end": 5452,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 5420,
											"end": 5452,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5452,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5468,
											"end": 5503,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "AF952B0A28349F5FFFF2D98AA9050EA845ADBE423FF73AC5DA5F268834AE3AC0"
										},
										{
											"begin": 5468,
											"end": 5503,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3278,
											"end": 3280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5468,
											"end": 5503,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6593,
											"end": 7010,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 6593,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6797,
											"end": 6809,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6822,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6811,
											"end": 6822,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6824,
											"end": 6829,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 6780,
											"end": 6830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6780,
											"end": 6830,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6831,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6831,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6831,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6770,
											"end": 6831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6831,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6755,
											"end": 6831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6872,
											"end": 6886,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6872,
											"end": 6886,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6859,
											"end": 6863,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6863,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6859,
											"end": 6871,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6859,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 6859,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6855,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6887,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6887,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6850,
											"end": 6887,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16941,
											"end": 16943,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16923,
											"end": 16944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16980,
											"end": 16982,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16953,
											"end": 16983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16999,
											"end": 17017,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16999,
											"end": 17017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16999,
											"end": 17017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16992,
											"end": 17039,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17056,
											"end": 17074,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17056,
											"end": 17074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 16739,
											"end": 17080,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6842,
											"end": 6909,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6939,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6929,
											"end": 6945,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6928,
											"end": 6945,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17287,
											"end": 17289,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17269,
											"end": 17290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17326,
											"end": 17328,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17299,
											"end": 17329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDB98D948185B1C9958591E481D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17345,
											"end": 17363,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17345,
											"end": 17363,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17345,
											"end": 17363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17338,
											"end": 17386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17403,
											"end": 17421,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17403,
											"end": 17421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 17085,
											"end": 17427,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 6920,
											"end": 6968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 6989,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 6995,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6998,
											"end": 7002,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6593,
											"end": 7010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5710,
											"end": 6304,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 5710,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5807,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5820,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5799,
											"end": 5833,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5891,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5883,
											"end": 5904,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5870,
											"end": 5904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 5880,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 5904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 5870,
											"end": 5904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5870,
											"end": 5904,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5870,
											"end": 5904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5904,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5850,
											"end": 5904,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5954,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5927,
											"end": 5941,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 5927,
											"end": 5941,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5927,
											"end": 5954,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5927,
											"end": 5954,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17634,
											"end": 17636,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17616,
											"end": 17637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17673,
											"end": 17675,
											"name": "PUSH",
											"source": 13,
											"value": "1A"
										},
										{
											"begin": 17653,
											"end": 17671,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17653,
											"end": 17671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17653,
											"end": 17671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17646,
											"end": 17676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17712,
											"end": 17740,
											"name": "PUSH",
											"source": 13,
											"value": "4E6F7420656E6F75676820726573657276652062616C616E6365000000000000"
										},
										{
											"begin": 17692,
											"end": 17710,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17692,
											"end": 17710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17692,
											"end": 17710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17685,
											"end": 17741,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17758,
											"end": 17776,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17758,
											"end": 17776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 17432,
											"end": 17782,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5919,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6018,
											"end": 6027,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6014,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6000,
											"end": 6014,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 6000,
											"end": 6027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6027,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6050,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6063,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6067,
											"end": 6076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 6042,
											"end": 6076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6042,
											"end": 6076,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 5795,
											"end": 6297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6106,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6119,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6098,
											"end": 6132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6297,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6094,
											"end": 6297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 6094,
											"end": 6297,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6149,
											"end": 6163,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6174,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6187,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 6166,
											"end": 6200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6200,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6190,
											"end": 6200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 6166,
											"end": 6200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6166,
											"end": 6200,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 6166,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6149,
											"end": 6200,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6149,
											"end": 6200,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6233,
											"end": 6239,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6229,
											"name": "PUSH",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6215,
											"end": 6229,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 6215,
											"end": 6239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6215,
											"end": 6239,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6262,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6275,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6279,
											"end": 6285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 6254,
											"end": 6285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6254,
											"end": 6285,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5710,
											"end": 6304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5710,
											"end": 6304,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5710,
											"end": 6304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 748,
											"end": 807,
											"name": "tag",
											"source": 3,
											"value": "252"
										},
										{
											"begin": 748,
											"end": 807,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2921,
											"end": 3139,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "483"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3070,
											"end": 3072,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 2921,
											"end": 3139,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "491"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "491"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "490"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3492,
											"end": 3608,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3492,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "415"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "499"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "499"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "498"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2921,
											"end": 3139,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3144,
											"end": 3321,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "507"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "510"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "tag",
											"source": 2,
											"value": "509"
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6204,
											"end": 6439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7286,
											"end": 7672,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 7286,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18181,
											"end": 18183,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 18177,
											"end": 18192,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 18177,
											"end": 18192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18177,
											"end": 18192,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 18173,
											"end": 18226,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18161,
											"end": 18227,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18243,
											"end": 18255,
											"name": "PUSH",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 18243,
											"end": 18255,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18243,
											"end": 18255,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18236,
											"end": 18264,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18236,
											"end": 18264,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18236,
											"end": 18264,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18280,
											"end": 18292,
											"name": "PUSH",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 18280,
											"end": 18292,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18280,
											"end": 18292,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18301,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18273,
											"end": 18301,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7419,
											"end": 7431,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7419,
											"end": 7431,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18317,
											"end": 18329,
											"name": "PUSH",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 18317,
											"end": 18329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7444,
											"end": 7492,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7493,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7493,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7493,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7434,
											"end": 7493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7493,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7419,
											"end": 7493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7419,
											"end": 7493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 7534,
											"end": 7548,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7534,
											"end": 7548,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "CALLDATACOPY",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7521,
											"end": 7525,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7525,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7521,
											"end": 7533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7521,
											"end": 7549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 7521,
											"end": 7549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7517,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7512,
											"end": 7517,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7512,
											"end": 7517,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7517,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7517,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7549,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7549,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7512,
											"end": 7549,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16941,
											"end": 16943,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16923,
											"end": 16944,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16980,
											"end": 16982,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16960,
											"end": 16978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16953,
											"end": 16983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964207369676E6174757265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16999,
											"end": 17017,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 16999,
											"end": 17017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16999,
											"end": 17017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16992,
											"end": 17039,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17056,
											"end": 17074,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17056,
											"end": 17074,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 16739,
											"end": 17080,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 7504,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7601,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7591,
											"end": 7607,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7590,
											"end": 7607,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17287,
											"end": 17289,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17269,
											"end": 17290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17326,
											"end": 17328,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17306,
											"end": 17324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17299,
											"end": 17329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDB98D948185B1C9958591E481D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17345,
											"end": 17363,
											"name": "PUSH",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 17345,
											"end": 17363,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17345,
											"end": 17363,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17338,
											"end": 17386,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17403,
											"end": 17421,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 17403,
											"end": 17421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "181"
										},
										{
											"begin": 17085,
											"end": 17427,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 7582,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7651,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7657,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7660,
											"end": 7664,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7641,
											"end": 7664,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7286,
											"end": 7672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "525"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "487"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3780,
											"end": 3787,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3817,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3819,
											"end": 3837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3839,
											"end": 3855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 3870,
											"end": 3874,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3876,
											"end": 3885,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 3859,
											"end": 3886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "tag",
											"source": 11,
											"value": "532"
										},
										{
											"begin": 3859,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3799,
											"end": 3886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3924,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 3908,
											"end": 3913,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3923,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 3896,
											"end": 3924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3896,
											"end": 3924,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 3896,
											"end": 3924,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3941,
											"end": 3950,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "tag",
											"source": 11,
											"value": "531"
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3702,
											"end": 3957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3702,
											"end": 3957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "472"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 4,
											"value": "484"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 6,
											"value": "557"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "561"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 6,
											"value": "559"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2210,
											"end": 2217,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2233,
											"end": 2240,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2265,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2256,
											"end": 2272,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2276,
											"end": 2278,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2577,
											"end": 2597,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2577,
											"end": 2597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2641,
											"end": 2645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2626,
											"end": 2646,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2647,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2702,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 2683,
											"end": 2703,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2683,
											"end": 2703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2704,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2303,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2705,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2620,
											"end": 2647,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 2739,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "tag",
											"source": 11,
											"value": "567"
										},
										{
											"begin": 2739,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 2732,
											"end": 2764,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "566"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2876,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2812,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2815,
											"end": 2850,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2815,
											"end": 2850,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "569"
										},
										{
											"begin": 2252,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2895,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2129,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "tag",
											"source": 11,
											"value": "535"
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7291,
											"end": 7311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7282,
											"end": 7287,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 7282,
											"end": 7311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "tag",
											"source": 11,
											"value": "575"
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7282,
											"end": 7311,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7196,
											"end": 7728,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7196,
											"end": 7728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "tag",
											"source": 11,
											"value": "576"
										},
										{
											"begin": 7278,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7387,
											"end": 7416,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7378,
											"end": 7383,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 7378,
											"end": 7416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "tag",
											"source": 11,
											"value": "581"
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7416,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F645EEDF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7439,
											"end": 7462,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "tag",
											"source": 11,
											"value": "582"
										},
										{
											"begin": 7374,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7492,
											"end": 7527,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7483,
											"end": 7488,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 7483,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "tag",
											"source": 11,
											"value": "587"
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7483,
											"end": 7527,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FCE698F7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3144,
											"end": 3321,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "tag",
											"source": 11,
											"value": "588"
										},
										{
											"begin": 7479,
											"end": 7722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7626,
											"end": 7656,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7622,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "573"
										},
										{
											"begin": 7617,
											"end": 7656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "tag",
											"source": 11,
											"value": "594"
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7617,
											"end": 7656,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 7613,
											"end": 7722,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "35E2F383"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3290,
											"end": 3315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7679,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 3144,
											"end": 3321,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 6,
											"value": "558"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 2921,
											"end": 3139,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 6,
											"value": "601"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 8,
											"value": "561"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "606"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "605"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "609"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 8,
											"value": "608"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 8,
											"value": "610"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 6,
											"value": "564"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "568"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5266,
											"end": 5273,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6265,
											"name": "PUSH",
											"source": 11,
											"value": "7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6186,
											"end": 6265,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6298,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 6301,
											"end": 6331,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 6281,
											"end": 6335,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "tag",
											"source": 11,
											"value": "615"
										},
										{
											"begin": 6182,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6440,
											"end": 6454,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19005,
											"end": 19030,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 19005,
											"end": 19030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19005,
											"end": 19030,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19078,
											"end": 19082,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 19066,
											"end": 19083,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 19066,
											"end": 19083,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 19046,
											"end": 19064,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19046,
											"end": 19064,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19046,
											"end": 19064,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19039,
											"end": 19084,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19039,
											"end": 19084,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19039,
											"end": 19084,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 19039,
											"end": 19084,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19118,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 19100,
											"end": 19118,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19100,
											"end": 19118,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19093,
											"end": 19127,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 19093,
											"end": 19127,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19093,
											"end": 19127,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19143,
											"end": 19161,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 19143,
											"end": 19161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19143,
											"end": 19161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 19136,
											"end": 19170,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 19136,
											"end": 19170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19136,
											"end": 19170,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18977,
											"end": 18996,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 18977,
											"end": 18996,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "tag",
											"source": 11,
											"value": "619"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6457,
											"end": 6481,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 6551,
											"end": 6580,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 6531,
											"end": 6593,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "tag",
											"source": 11,
											"value": "620"
										},
										{
											"begin": 6491,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6622,
											"end": 6628,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6630,
											"end": 6650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "614"
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5140,
											"end": 6670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 8,
											"value": "611"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 8,
											"value": "623"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "622"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 8,
											"value": "626"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3100,
											"end": 3132,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3082,
											"end": 3133,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3055,
											"end": 3073,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2921,
											"end": 3139,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 8,
											"value": "627"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 8,
											"value": "625"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 8,
											"value": "624"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 8,
											"value": "630"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 14,
											"end": 194,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 194,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 13,
											"value": "640"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 165,
											"end": 188,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 165,
											"end": 188,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14,
											"end": 194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 199,
											"end": 566,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 199,
											"end": 566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 262,
											"end": 270,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 272,
											"end": 278,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 326,
											"end": 329,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 319,
											"end": 323,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 311,
											"end": 317,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 307,
											"end": 324,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 303,
											"end": 330,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 293,
											"end": 348,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 293,
											"end": 348,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 344,
											"end": 345,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 342,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 346,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 293,
											"end": 348,
											"name": "tag",
											"source": 13,
											"value": "642"
										},
										{
											"begin": 293,
											"end": 348,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 367,
											"end": 387,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 367,
											"end": 387,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 410,
											"end": 428,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 399,
											"end": 429,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 399,
											"end": 429,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 396,
											"end": 446,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 396,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 396,
											"end": 446,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 442,
											"end": 443,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 439,
											"end": 440,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 432,
											"end": 444,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 396,
											"end": 446,
											"name": "tag",
											"source": 13,
											"value": "643"
										},
										{
											"begin": 396,
											"end": 446,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 479,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 471,
											"end": 477,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 467,
											"end": 484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 455,
											"end": 484,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 455,
											"end": 484,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 539,
											"end": 542,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 532,
											"end": 536,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 522,
											"end": 528,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 515,
											"end": 529,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 503,
											"end": 530,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 499,
											"end": 537,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 496,
											"end": 543,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 493,
											"end": 560,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 493,
											"end": 560,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 493,
											"end": 560,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 556,
											"end": 557,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 554,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 546,
											"end": 558,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 493,
											"end": 560,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 493,
											"end": 560,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 199,
											"end": 566,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 199,
											"end": 566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 199,
											"end": 566,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 199,
											"end": 566,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 199,
											"end": 566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 199,
											"end": 566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 571,
											"end": 918,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 571,
											"end": 918,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 622,
											"end": 630,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 632,
											"end": 638,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 686,
											"end": 689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 679,
											"end": 683,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 671,
											"end": 677,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 667,
											"end": 684,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 663,
											"end": 690,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 653,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 653,
											"end": 708,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 704,
											"end": 705,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 701,
											"end": 702,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 694,
											"end": 706,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 653,
											"end": 708,
											"name": "tag",
											"source": 13,
											"value": "646"
										},
										{
											"begin": 653,
											"end": 708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 727,
											"end": 747,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 727,
											"end": 747,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 770,
											"end": 788,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 789,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 759,
											"end": 789,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 756,
											"end": 806,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 756,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 756,
											"end": 806,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 792,
											"end": 804,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 756,
											"end": 806,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 756,
											"end": 806,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 831,
											"end": 837,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 827,
											"end": 844,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 815,
											"end": 844,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 815,
											"end": 844,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 891,
											"end": 894,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 884,
											"end": 888,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 875,
											"end": 881,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 867,
											"end": 873,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 863,
											"end": 882,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 859,
											"end": 889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 856,
											"end": 895,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 853,
											"end": 912,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 853,
											"end": 912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 853,
											"end": 912,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 908,
											"end": 909,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 905,
											"end": 906,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 898,
											"end": 910,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1074,
											"end": 1080,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1082,
											"end": 1088,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1090,
											"end": 1096,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1104,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1106,
											"end": 1112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1120,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1122,
											"end": 1128,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1178,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1163,
											"end": 1172,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1161,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1150,
											"end": 1173,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1146,
											"end": 1179,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1196,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 1143,
											"end": 1196,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1192,
											"end": 1193,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1190,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1182,
											"end": 1194,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1196,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 1143,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1219,
											"end": 1242,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1261,
											"end": 1279,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1302,
											"end": 1304,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1305,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1322,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1322,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 1288,
											"end": 1322,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1318,
											"end": 1319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1315,
											"end": 1316,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1308,
											"end": 1320,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1288,
											"end": 1322,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 1288,
											"end": 1322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1410,
											"end": 1416,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1395,
											"end": 1417,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 1357,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1427,
											"name": "tag",
											"source": 13,
											"value": "652"
										},
										{
											"begin": 1357,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1446,
											"end": 1454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1446,
											"end": 1454,
											"name": "SWAP10",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1331,
											"end": 1427,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1534,
											"end": 1536,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1519,
											"end": 1537,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1538,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1538,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1550,
											"end": 1566,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1547,
											"end": 1583,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1547,
											"end": 1583,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 1547,
											"end": 1583,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1579,
											"end": 1580,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1577,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1569,
											"end": 1581,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1547,
											"end": 1583,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 1547,
											"end": 1583,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 1682,
											"end": 1689,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1671,
											"end": 1679,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "DUP13",
											"source": 13
										},
										{
											"begin": 1656,
											"end": 1680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 1618,
											"end": 1690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1690,
											"name": "tag",
											"source": 13,
											"value": "654"
										},
										{
											"begin": 1618,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1717,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1709,
											"end": 1717,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1592,
											"end": 1690,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1776,
											"end": 1794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1763,
											"end": 1795,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1763,
											"end": 1795,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 1850,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1851,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1864,
											"end": 1880,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1897,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 1861,
											"end": 1897,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1893,
											"end": 1894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1891,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1883,
											"end": 1895,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1897,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 1861,
											"end": 1897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1861,
											"end": 1897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1932,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 1984,
											"end": 1991,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1981,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 1958,
											"end": 1982,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1932,
											"end": 1992,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 1932,
											"end": 1992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1932,
											"end": 1992,
											"name": "tag",
											"source": 13,
											"value": "656"
										},
										{
											"begin": 1932,
											"end": 1992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP12",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP11",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 923,
											"end": 2052,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 1992,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1906,
											"end": 1992,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 923,
											"end": 2052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2057,
											"end": 2188,
											"name": "tag",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 2057,
											"end": 2188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2132,
											"end": 2163,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2132,
											"end": 2163,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2164,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2112,
											"end": 2182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 2112,
											"end": 2182,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2180,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2193,
											"end": 2440,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 2193,
											"end": 2440,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2252,
											"end": 2258,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2305,
											"end": 2307,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2302,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2284,
											"end": 2291,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2303,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2276,
											"end": 2308,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2273,
											"end": 2325,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2273,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 2273,
											"end": 2325,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2311,
											"end": 2323,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2273,
											"end": 2325,
											"name": "tag",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 2273,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2360,
											"end": 2369,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2347,
											"end": 2370,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 2379,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2445,
											"end": 2916,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 2445,
											"end": 2916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2537,
											"end": 2543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2553,
											"end": 2559,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2606,
											"end": 2608,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2594,
											"end": 2603,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2592,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2581,
											"end": 2604,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2609,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2626,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2626,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 2574,
											"end": 2626,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2622,
											"end": 2623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2619,
											"end": 2620,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2612,
											"end": 2624,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2574,
											"end": 2626,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 2574,
											"end": 2626,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2661,
											"end": 2670,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2671,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 2705,
											"end": 2710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 2680,
											"end": 2711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "tag",
											"source": 13,
											"value": "664"
										},
										{
											"begin": 2680,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2735,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2787,
											"end": 2789,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2772,
											"end": 2790,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 2759,
											"end": 2791,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 2800,
											"end": 2833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2800,
											"end": 2833,
											"name": "tag",
											"source": 13,
											"value": "665"
										},
										{
											"begin": 2800,
											"end": 2833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2445,
											"end": 2916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2445,
											"end": 2916,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2859,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 2908,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2891,
											"end": 2909,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2910,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2878,
											"end": 2910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2445,
											"end": 2916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3326,
											"end": 3453,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 3326,
											"end": 3453,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3387,
											"end": 3397,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 3382,
											"end": 3385,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 3378,
											"end": 3398,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 3375,
											"end": 3376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3399,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3418,
											"end": 3422,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 3415,
											"end": 3416,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3423,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3442,
											"end": 3446,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3439,
											"end": 3440,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3447,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 4514,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 3458,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3535,
											"end": 3541,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3549,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3598,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3584,
											"end": 3593,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3575,
											"end": 3582,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3571,
											"end": 3594,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3567,
											"end": 3599,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3564,
											"end": 3616,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3564,
											"end": 3616,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 3564,
											"end": 3616,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3612,
											"end": 3613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3610,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3602,
											"end": 3614,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3564,
											"end": 3616,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 3564,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3638,
											"end": 3661,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 3695,
											"end": 3700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 3670,
											"end": 3701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "tag",
											"source": 13,
											"value": "671"
										},
										{
											"begin": 3670,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3720,
											"end": 3725,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3776,
											"end": 3778,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3761,
											"end": 3779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3748,
											"end": 3780,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3799,
											"end": 3817,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3829,
											"end": 3843,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3829,
											"end": 3843,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3829,
											"end": 3843,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3860,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 3826,
											"end": 3860,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3856,
											"end": 3857,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3853,
											"end": 3854,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3846,
											"end": 3858,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3826,
											"end": 3860,
											"name": "tag",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 3826,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3894,
											"end": 3900,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3883,
											"end": 3892,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3879,
											"end": 3901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3901,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3869,
											"end": 3901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3939,
											"end": 3946,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3932,
											"end": 3936,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3928,
											"end": 3930,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3924,
											"end": 3937,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3920,
											"end": 3947,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3965,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 3910,
											"end": 3965,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3959,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3951,
											"end": 3963,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3910,
											"end": 3965,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 3910,
											"end": 3965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 3999,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3984,
											"end": 4000,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4019,
											"end": 4021,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4015,
											"end": 4017,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4022,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 4009,
											"end": 4045,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 4025,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "tag",
											"source": 13,
											"value": "675"
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4100,
											"end": 4102,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4094,
											"end": 4103,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4068,
											"end": 4070,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4154,
											"end": 4167,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4172,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4172,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4150,
											"end": 4172,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4174,
											"end": 4176,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4146,
											"end": 4177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4142,
											"end": 4182,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4183,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4218,
											"end": 4240,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4241,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4192,
											"end": 4264,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4192,
											"end": 4264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 4192,
											"end": 4264,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 4244,
											"end": 4262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 4244,
											"end": 4262,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4294,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4280,
											"end": 4282,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4273,
											"end": 4295,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4319,
											"end": 4321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4304,
											"end": 4322,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4359,
											"end": 4366,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4354,
											"end": 4356,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4349,
											"end": 4351,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4345,
											"end": 4347,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4341,
											"end": 4352,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4337,
											"end": 4357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4334,
											"end": 4367,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4380,
											"end": 4381,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4377,
											"end": 4378,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4370,
											"end": 4382,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "tag",
											"source": 13,
											"value": "678"
										},
										{
											"begin": 4331,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4431,
											"end": 4433,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4427,
											"end": 4429,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4423,
											"end": 4434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4420,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4410,
											"end": 4416,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4406,
											"end": 4421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4439,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 4481,
											"end": 4482,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4478,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4463,
											"end": 4469,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4459,
											"end": 4474,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4455,
											"end": 4479,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4448,
											"end": 4483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4492,
											"end": 4508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 4514,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 4514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 4514,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 4514,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 4514,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3458,
											"end": 4514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5438,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 4893,
											"end": 5438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4981,
											"end": 4987,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4995,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4997,
											"end": 5003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5011,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5046,
											"end": 5055,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5037,
											"end": 5044,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5033,
											"end": 5056,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5029,
											"end": 5061,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5026,
											"end": 5078,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5026,
											"end": 5078,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 5026,
											"end": 5078,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5074,
											"end": 5075,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5072,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5064,
											"end": 5076,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5026,
											"end": 5078,
											"name": "tag",
											"source": 13,
											"value": "682"
										},
										{
											"begin": 5026,
											"end": 5078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5120,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5087,
											"end": 5120,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5167,
											"end": 5169,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5156,
											"end": 5165,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5139,
											"end": 5171,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5171,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5171,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5222,
											"end": 5224,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5211,
											"end": 5220,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5207,
											"end": 5225,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5249,
											"end": 5267,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5241,
											"end": 5247,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5268,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5285,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 5235,
											"end": 5285,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5285,
											"name": "tag",
											"source": 13,
											"value": "683"
										},
										{
											"begin": 5235,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 5370,
											"end": 5377,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5361,
											"end": 5367,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5350,
											"end": 5359,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5346,
											"end": 5368,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5378,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 5320,
											"end": 5378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5378,
											"name": "tag",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 5320,
											"end": 5378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5438,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5438,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5438,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4893,
											"end": 5438,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5405,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4893,
											"end": 5438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5826,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 5443,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5520,
											"end": 5526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5528,
											"end": 5534,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5589,
											"end": 5591,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5577,
											"end": 5586,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5568,
											"end": 5575,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5587,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5560,
											"end": 5592,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5609,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 5557,
											"end": 5609,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5602,
											"end": 5603,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5595,
											"end": 5607,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5557,
											"end": 5609,
											"name": "tag",
											"source": 13,
											"value": "686"
										},
										{
											"begin": 5557,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5644,
											"end": 5653,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5631,
											"end": 5654,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5663,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 5688,
											"end": 5693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5663,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 5663,
											"end": 5694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5663,
											"end": 5694,
											"name": "tag",
											"source": 13,
											"value": "687"
										},
										{
											"begin": 5663,
											"end": 5694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5713,
											"end": 5718,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5750,
											"end": 5768,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5737,
											"end": 5769,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5737,
											"end": 5769,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5816,
											"end": 5818,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5801,
											"end": 5819,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5819,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5801,
											"end": 5819,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5788,
											"end": 5820,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5788,
											"end": 5820,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5826,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6039,
											"end": 6457,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 6039,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6188,
											"end": 6190,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6177,
											"end": 6186,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6170,
											"end": 6191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6151,
											"end": 6155,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6220,
											"end": 6226,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6227,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6263,
											"end": 6269,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6258,
											"end": 6260,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6247,
											"end": 6256,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6270,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6322,
											"end": 6328,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6317,
											"end": 6319,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6309,
											"end": 6315,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6305,
											"end": 6320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6300,
											"end": 6302,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6289,
											"end": 6298,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6285,
											"end": 6303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6279,
											"end": 6329,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 6378,
											"end": 6379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6364,
											"end": 6370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6353,
											"end": 6362,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6349,
											"end": 6371,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6345,
											"end": 6376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6338,
											"end": 6380,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6448,
											"end": 6450,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6441,
											"end": 6443,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6437,
											"end": 6444,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 6432,
											"end": 6434,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 6424,
											"end": 6430,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6420,
											"end": 6435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6416,
											"end": 6445,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6405,
											"end": 6414,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6401,
											"end": 6446,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6397,
											"end": 6451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6389,
											"end": 6451,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6389,
											"end": 6451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6389,
											"end": 6451,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6039,
											"end": 6457,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6039,
											"end": 6457,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6039,
											"end": 6457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6039,
											"end": 6457,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6039,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6462,
											"end": 7235,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6462,
											"end": 7235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6584,
											"end": 6590,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6598,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6600,
											"end": 6606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6614,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6661,
											"end": 6663,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6658,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6640,
											"end": 6647,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 6636,
											"end": 6659,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6632,
											"end": 6664,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6629,
											"end": 6681,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6629,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 6629,
											"end": 6681,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6677,
											"end": 6678,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6675,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6667,
											"end": 6679,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6629,
											"end": 6681,
											"name": "tag",
											"source": 13,
											"value": "691"
										},
										{
											"begin": 6629,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6717,
											"end": 6726,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6704,
											"end": 6727,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6746,
											"end": 6764,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6787,
											"end": 6789,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6779,
											"end": 6785,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6776,
											"end": 6790,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 6773,
											"end": 6807,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6773,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 6773,
											"end": 6807,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6803,
											"end": 6804,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6800,
											"end": 6801,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6793,
											"end": 6805,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6773,
											"end": 6807,
											"name": "tag",
											"source": 13,
											"value": "692"
										},
										{
											"begin": 6773,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 6904,
											"end": 6911,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 6895,
											"end": 6901,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6884,
											"end": 6893,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 6880,
											"end": 6902,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 6842,
											"end": 6912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6842,
											"end": 6912,
											"name": "tag",
											"source": 13,
											"value": "693"
										},
										{
											"begin": 6842,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6939,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6931,
											"end": 6939,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6816,
											"end": 6912,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7019,
											"end": 7021,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7004,
											"end": 7022,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7004,
											"end": 7022,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7023,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 6991,
											"end": 7023,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7035,
											"end": 7051,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7051,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7035,
											"end": 7051,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7068,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 7032,
											"end": 7068,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7064,
											"end": 7065,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7061,
											"end": 7062,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7054,
											"end": 7066,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7068,
											"name": "tag",
											"source": 13,
											"value": "694"
										},
										{
											"begin": 7032,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7032,
											"end": 7068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "684"
										},
										{
											"begin": 7167,
											"end": 7174,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 7156,
											"end": 7164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7145,
											"end": 7154,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7141,
											"end": 7165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7103,
											"end": 7175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 7103,
											"end": 7175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7240,
											"end": 7358,
											"name": "tag",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 7240,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7326,
											"end": 7331,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7319,
											"end": 7332,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7312,
											"end": 7333,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7305,
											"end": 7310,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7302,
											"end": 7334,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 7292,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "415"
										},
										{
											"begin": 7292,
											"end": 7352,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7348,
											"end": 7349,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7345,
											"end": 7346,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7350,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7672,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 7363,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7436,
											"end": 7442,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7489,
											"end": 7491,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7477,
											"end": 7486,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7475,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7464,
											"end": 7487,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7460,
											"end": 7492,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "699"
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7503,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7495,
											"end": 7507,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "tag",
											"source": 13,
											"value": "699"
										},
										{
											"begin": 7457,
											"end": 7509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7528,
											"end": 7551,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7518,
											"end": 7551,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7518,
											"end": 7551,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 7603,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7590,
											"end": 7599,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7586,
											"end": 7604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7573,
											"end": 7605,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 7636,
											"end": 7641,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7642,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 7614,
											"end": 7642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7614,
											"end": 7642,
											"name": "tag",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 7614,
											"end": 7642,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7661,
											"end": 7666,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7666,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7666,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7672,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7672,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7363,
											"end": 7672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7677,
											"end": 7992,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 7677,
											"end": 7992,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7745,
											"end": 7751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7806,
											"end": 7808,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7794,
											"end": 7803,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7785,
											"end": 7792,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7781,
											"end": 7804,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7777,
											"end": 7809,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7774,
											"end": 7826,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7774,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 7774,
											"end": 7826,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7822,
											"end": 7823,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7819,
											"end": 7820,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7812,
											"end": 7824,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7774,
											"end": 7826,
											"name": "tag",
											"source": 13,
											"value": "702"
										},
										{
											"begin": 7774,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7858,
											"end": 7867,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7845,
											"end": 7868,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7835,
											"end": 7868,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7835,
											"end": 7868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7907,
											"end": 7916,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7903,
											"end": 7921,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7890,
											"end": 7922,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "700"
										},
										{
											"begin": 7956,
											"end": 7961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7931,
											"end": 7962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 7931,
											"end": 7962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8182,
											"end": 8580,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 8182,
											"end": 8580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8384,
											"end": 8386,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8366,
											"end": 8387,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8366,
											"end": 8387,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8366,
											"end": 8387,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8423,
											"end": 8425,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8403,
											"end": 8421,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8396,
											"end": 8426,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8462,
											"end": 8496,
											"name": "PUSH",
											"source": 13,
											"value": "4F6E6C792061646D696E2063616E20706572666F726D20746869732061637469"
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8435,
											"end": 8497,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8528,
											"end": 8530,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8513,
											"end": 8531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8506,
											"end": 8538,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8570,
											"end": 8573,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 8555,
											"end": 8574,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8555,
											"end": 8574,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8182,
											"end": 8580,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9221,
											"end": 9466,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 9221,
											"end": 9466,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9288,
											"end": 9294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9341,
											"end": 9343,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9329,
											"end": 9338,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9320,
											"end": 9327,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9316,
											"end": 9339,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9312,
											"end": 9344,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9361,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 9309,
											"end": 9361,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9357,
											"end": 9358,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9355,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9347,
											"end": 9359,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9309,
											"end": 9361,
											"name": "tag",
											"source": 13,
											"value": "710"
										},
										{
											"begin": 9309,
											"end": 9361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9389,
											"end": 9398,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9399,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9408,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "625"
										},
										{
											"begin": 9430,
											"end": 9435,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9408,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "636"
										},
										{
											"begin": 9408,
											"end": 9436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9471,
											"end": 9810,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 9471,
											"end": 9810,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9673,
											"end": 9675,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9655,
											"end": 9676,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9655,
											"end": 9676,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9655,
											"end": 9676,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9712,
											"end": 9714,
											"name": "PUSH",
											"source": 13,
											"value": "F"
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9692,
											"end": 9710,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9685,
											"end": 9715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9746,
											"end": 9748,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9731,
											"end": 9749,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9724,
											"end": 9769,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9801,
											"end": 9803,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9786,
											"end": 9804,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9471,
											"end": 9810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9815,
											"end": 9942,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 9815,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9876,
											"end": 9886,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 9871,
											"end": 9874,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 9867,
											"end": 9887,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 9864,
											"end": 9865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9857,
											"end": 9888,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9907,
											"end": 9911,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9904,
											"end": 9905,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9897,
											"end": 9912,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9931,
											"end": 9935,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9928,
											"end": 9929,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9921,
											"end": 9936,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9947,
											"end": 10075,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 9947,
											"end": 10075,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10014,
											"end": 10023,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10035,
											"end": 10046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10035,
											"end": 10046,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10035,
											"end": 10046,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10069,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10032,
											"end": 10069,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 10032,
											"end": 10069,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 10049,
											"end": 10067,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 10049,
											"end": 10067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10495,
											"end": 10622,
											"name": "tag",
											"source": 13,
											"value": "217"
										},
										{
											"begin": 10495,
											"end": 10622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10556,
											"end": 10566,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 10551,
											"end": 10554,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 10544,
											"end": 10545,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10537,
											"end": 10568,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10587,
											"end": 10591,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 10584,
											"end": 10585,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10577,
											"end": 10592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10615,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10608,
											"end": 10609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10616,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 11686,
											"name": "tag",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 10627,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10915,
											"end": 10917,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10927,
											"end": 10948,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 10948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10927,
											"end": 10948,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10900,
											"end": 10918,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10900,
											"end": 10918,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11005,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11005,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10983,
											"end": 11005,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11062,
											"end": 11068,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11036,
											"end": 11038,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11021,
											"end": 11039,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10867,
											"end": 10871,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "tag",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11110,
											"end": 11116,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11104,
											"end": 11117,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11185,
											"end": 11191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11172,
											"end": 11192,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 11205,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "723"
										},
										{
											"begin": 11230,
											"end": 11235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11205,
											"end": 11236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 11205,
											"end": 11236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11205,
											"end": 11236,
											"name": "tag",
											"source": 13,
											"value": "723"
										},
										{
											"begin": 11205,
											"end": 11236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11261,
											"end": 11292,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 11249,
											"end": 11293,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11249,
											"end": 11293,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11316,
											"end": 11320,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11375,
											"end": 11390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11375,
											"end": 11390,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11375,
											"end": 11390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11375,
											"end": 11390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11352,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11352,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11340,
											"end": 11352,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11289,
											"end": 11290,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 11125,
											"end": 11134,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "720"
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "tag",
											"source": 13,
											"value": "722"
										},
										{
											"begin": 11096,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11438,
											"end": 11457,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11438,
											"end": 11457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11438,
											"end": 11457,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11431,
											"end": 11435,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11416,
											"end": 11436,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11416,
											"end": 11436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11409,
											"end": 11458,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11486,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11467,
											"end": 11486,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11498,
											"end": 11529,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11498,
											"end": 11529,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11546,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11546,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 11495,
											"end": 11546,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11542,
											"end": 11543,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11539,
											"end": 11540,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11532,
											"end": 11544,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11546,
											"name": "tag",
											"source": 13,
											"value": "724"
										},
										{
											"begin": 11495,
											"end": 11546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11576,
											"end": 11582,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 11573,
											"end": 11574,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 11569,
											"end": 11583,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 11555,
											"end": 11583,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11555,
											"end": 11583,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11629,
											"end": 11635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11621,
											"end": 11627,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11614,
											"end": 11618,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11609,
											"end": 11612,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11605,
											"end": 11619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11592,
											"end": 11636,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 11657,
											"end": 11673,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11675,
											"end": 11679,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11653,
											"end": 11680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11653,
											"end": 11680,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 10627,
											"end": 11686,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10627,
											"end": 11686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12041,
											"end": 12176,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 12041,
											"end": 12176,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12083,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12101,
											"end": 12118,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12101,
											"end": 12118,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12101,
											"end": 12118,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12098,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 12098,
											"end": 12141,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 12121,
											"end": 12139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "tag",
											"source": 13,
											"value": "728"
										},
										{
											"begin": 12121,
											"end": 12139,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12168,
											"end": 12169,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12157,
											"end": 12170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12157,
											"end": 12170,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12041,
											"end": 12176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12181,
											"end": 12365,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 12181,
											"end": 12365,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12251,
											"end": 12257,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12304,
											"end": 12306,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12292,
											"end": 12301,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12283,
											"end": 12290,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12279,
											"end": 12302,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12275,
											"end": 12307,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 12272,
											"end": 12324,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12272,
											"end": 12324,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 12272,
											"end": 12324,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12310,
											"end": 12322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12272,
											"end": 12324,
											"name": "tag",
											"source": 13,
											"value": "730"
										},
										{
											"begin": 12272,
											"end": 12324,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12343,
											"end": 12359,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 12343,
											"end": 12359,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12181,
											"end": 12365,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12181,
											"end": 12365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12584,
											"end": 12752,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 12584,
											"end": 12752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12657,
											"end": 12666,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12697,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12688,
											"end": 12697,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 12705,
											"end": 12720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12705,
											"end": 12720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12705,
											"end": 12720,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12699,
											"end": 12721,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 12699,
											"end": 12721,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 12722,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 12675,
											"end": 12746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 12675,
											"end": 12746,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 12726,
											"end": 12744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14604,
											"end": 14729,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 14604,
											"end": 14729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14669,
											"end": 14678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14669,
											"end": 14678,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14669,
											"end": 14678,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14690,
											"end": 14700,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14690,
											"end": 14700,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14690,
											"end": 14700,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14687,
											"end": 14723,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14687,
											"end": 14723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 14687,
											"end": 14723,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14703,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 14703,
											"end": 14721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 14703,
											"end": 14721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15776,
											"end": 16734,
											"name": "tag",
											"source": 13,
											"value": "436"
										},
										{
											"begin": 15776,
											"end": 16734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16063,
											"end": 16066,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16094,
											"end": 16097,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16141,
											"end": 16147,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16063,
											"end": 16066,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "tag",
											"source": 13,
											"value": "747"
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16189,
											"end": 16195,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16186,
											"end": 16187,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16183,
											"end": 16196,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16264,
											"end": 16270,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16251,
											"end": 16271,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 16284,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 16309,
											"end": 16314,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 16284,
											"end": 16315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "634"
										},
										{
											"begin": 16284,
											"end": 16315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16284,
											"end": 16315,
											"name": "tag",
											"source": 13,
											"value": "750"
										},
										{
											"begin": 16284,
											"end": 16315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16342,
											"end": 16373,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16374,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16328,
											"end": 16374,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16397,
											"end": 16401,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16423,
											"end": 16437,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16423,
											"end": 16437,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16423,
											"end": 16437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16423,
											"end": 16437,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16460,
											"end": 16475,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16370,
											"end": 16371,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16204,
											"end": 16213,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "747"
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "tag",
											"source": 13,
											"value": "749"
										},
										{
											"begin": 16175,
											"end": 16485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 16497,
											"end": 16528,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16497,
											"end": 16528,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 16494,
											"end": 16545,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16494,
											"end": 16545,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "751"
										},
										{
											"begin": 16494,
											"end": 16545,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16541,
											"end": 16542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16538,
											"end": 16539,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16531,
											"end": 16543,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 16494,
											"end": 16545,
											"name": "tag",
											"source": 13,
											"value": "751"
										},
										{
											"begin": 16494,
											"end": 16545,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16575,
											"end": 16581,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16572,
											"end": 16573,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 16568,
											"end": 16582,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 16619,
											"end": 16625,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 16611,
											"end": 16617,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16604,
											"end": 16609,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16591,
											"end": 16626,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 16648,
											"end": 16666,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16696,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16696,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16675,
											"end": 16696,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16723,
											"end": 16727,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16712,
											"end": 16728,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16712,
											"end": 16728,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 15776,
											"end": 16734,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15776,
											"end": 16734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18340,
											"end": 18467,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 18340,
											"end": 18467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18401,
											"end": 18411,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B71"
										},
										{
											"begin": 18396,
											"end": 18399,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 18392,
											"end": 18412,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 18389,
											"end": 18390,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18382,
											"end": 18413,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18432,
											"end": 18436,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 18429,
											"end": 18430,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 18422,
											"end": 18437,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 18456,
											"end": 18460,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 18453,
											"end": 18454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18446,
											"end": 18461,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 18472,
											"end": 18773,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 18472,
											"end": 18773,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18601,
											"end": 18604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18639,
											"end": 18645,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18633,
											"end": 18646,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 18685,
											"end": 18691,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 18678,
											"end": 18682,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 18670,
											"end": 18676,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 18666,
											"end": 18683,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18661,
											"end": 18664,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 18655,
											"end": 18692,
											"name": "MCOPY",
											"source": 13
										},
										{
											"begin": 18747,
											"end": 18748,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18711,
											"end": 18727,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18711,
											"end": 18727,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18736,
											"end": 18749,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18736,
											"end": 18749,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18736,
											"end": 18749,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18711,
											"end": 18727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18472,
											"end": 18773,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18472,
											"end": 18773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
								"contracts/sis.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"admin()": "f851a440",
							"balances(address)": "27e235e3",
							"batchUpdateBalances(address[],uint256[],uint256,bytes)": "1145a4ff",
							"batchUpdateChannelbyadmin(address[],uint256[])": "c6b0da1b",
							"changeAdmin(address)": "8f283970",
							"closeChannel(uint256,uint256,bytes)": "eecbbb72",
							"closeChannelByDAO(address,uint256,uint256)": "6e631a4d",
							"depositToReserve(uint256)": "b17d718e",
							"initialize(address,address,uint256)": "1794bb3c",
							"nextVoteId()": "e207d04d",
							"openChannel(uint256)": "fd85b1a7",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"pointToken()": "2251d3f0",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"reserveBalance()": "a10954fe",
							"startVoteToCloseChannel(address)": "14068e94",
							"totalWeights(uint256)": "b62e1efc",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateChannelState(uint256,uint256,bytes)": "68f25734",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"usedNonces(bytes32)": "feb61724",
							"vote(uint256,bool)": "c9d27afe",
							"voteWeights(uint256)": "56f40aa2",
							"votes(uint256,address)": "d23254b4",
							"withdrawFromReserve(uint256)": "0a8bcdb9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"newBalances\",\"type\":\"uint256[]\"}],\"name\":\"BalancesBatchUpdatedbyadmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"newBalances\",\"type\":\"uint256[]\"}],\"name\":\"BalancesBatchUpdatedbyuser\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ChannelClosed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"}],\"name\":\"ChannelClosedByDAO\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ChannelOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"ChannelStateUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DepositedToReserve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"VoteStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnFromReserve\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"newBalances\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"close_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adminSignature\",\"type\":\"bytes\"}],\"name\":\"batchUpdateBalances\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"participants\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"newBalances\",\"type\":\"uint256[]\"}],\"name\":\"batchUpdateChannelbyadmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"close_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adminSignature\",\"type\":\"bytes\"}],\"name\":\"closeChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"}],\"name\":\"closeChannelByDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin_\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"pointToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialReserveBalance\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextVoteId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"openChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pointToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"participant\",\"type\":\"address\"}],\"name\":\"startVoteToCloseChannel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"totalWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"channel_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"adminSignature\",\"type\":\"bytes\"}],\"name\":\"updateChannelState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"usedNonces\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"voteId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approve\",\"type\":\"bool\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"voteWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PicWe_StateIdentification contract.      This contract is used for state identification in PicWe.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"batchUpdateBalances(address[],uint256[],uint256,bytes)\":{\"details\":\"Batch update balances.\",\"params\":{\"adminSignature\":\"- The signature of the admin\",\"close_nonce\":\"- The nonce\",\"newBalances\":\"- The new balances of the participants\",\"participants\":\"- The addresses of the participants\"}},\"batchUpdateChannelbyadmin(address[],uint256[])\":{\"details\":\"Batch update channel by admin.\",\"params\":{\"newBalances\":\"- The new balances of the participants\",\"participants\":\"- The addresses of the participants\"}},\"changeAdmin(address)\":{\"details\":\"Change the admin.      Only the owner can call this function.\",\"params\":{\"newAdmin\":\"- The address of the new admin\"}},\"closeChannel(uint256,uint256,bytes)\":{\"details\":\"Close a channel.\",\"params\":{\"adminSignature\":\"- The signature of the admin\",\"close_nonce\":\"- The nonce\",\"newBalance\":\"- The new balance of the channel\"}},\"closeChannelByDAO(address,uint256,uint256)\":{\"details\":\"Close a channel by DAO.\",\"params\":{\"newBalance\":\"- The new balance of the participant\",\"participant\":\"- The address of the participant\",\"voteId\":\"- The ID of the vote\"}},\"constructor\":{\"details\":\"Constructor for PicWe_StateIdentification contract.      This is necessary for contract initialization.\"},\"depositToReserve(uint256)\":{\"details\":\"Deposit to reserveBalance.      Only the admin can call this function.\",\"params\":{\"amount\":\"- The amount to deposit\"}},\"initialize(address,address,uint256)\":{\"details\":\"Initialize the contract.\",\"params\":{\"admin_\":\"- The address of the admin\",\"initialReserveBalance\":\"- The initial reserve balance\",\"pointToken_\":\"- The address of the point token\"}},\"openChannel(uint256)\":{\"details\":\"Open a channel.\",\"params\":{\"amount\":\"- The amount to open the channel with\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause the contract.      Only the owner can call this function.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"startVoteToCloseChannel(address)\":{\"details\":\"Start a vote to close a channel.\",\"params\":{\"participant\":\"- The address of the participant\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause the contract.      Only the owner can call this function.\"},\"updateChannelState(uint256,uint256,bytes)\":{\"details\":\"Update the channel state.\",\"params\":{\"adminSignature\":\"- The signature of the admin\",\"channel_nonce\":\"- The nonce of the channel\",\"newBalance\":\"- The new balance of the channel\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"vote(uint256,bool)\":{\"details\":\"Vote.\",\"params\":{\"approve\":\"- Whether to approve the vote\",\"voteId\":\"- The ID of the vote\"}},\"withdrawFromReserve(uint256)\":{\"details\":\"Withdraw from reserveBalance.      Only the admin can call this function.\",\"params\":{\"amount\":\"- The amount to withdraw\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/sis.sol\":\"PicWe_StateIdentification\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xeed0a08b0b091f528356cbc7245891a4c748682d4f6a18055e8e6ca77d12a6cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba80ba06c8e6be852847e4c5f4492cef801feb6558ae09ed705ff2e04ea8b13c\",\"dweb:/ipfs/QmXRJDv3xHLVQCVXg1ZvR35QS9sij5y9NDWYzMfUfAdTHF\"]},\"contracts/sis.sol\":{\"keccak256\":\"0xe9e419bd98085b672a044877a67b8a8b89f43eff1c2950e31cf72c9a3120b74b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1153535eaa8a4b964f5a90fcbbef00b3a7e08b566406ccb8ae21913dfe935910\",\"dweb:/ipfs/QmTaF6r7cna2ScWzNtiyfv2xw5rL58Dv135qZCPKPTMLyk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1989,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "admin",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1992,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "pointToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)1616"
							},
							{
								"astId": 1996,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "balances",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2000,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "usedNonces",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_bytes32,t_bool)"
							},
							{
								"astId": 2006,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "votes",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2010,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "voteWeights",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2014,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "totalWeights",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 2018,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "voteToParticipant",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 2020,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "nextVoteId",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2022,
								"contract": "contracts/sis.sol:PicWe_StateIdentification",
								"label": "reserveBalance",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)1616": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 677,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								676,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1165
						],
						"IERC1822Proxiable": [
							862
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 863,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 862,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1166,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1165,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 862,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								862,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 630,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 630,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										861
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 892,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 630,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 630,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 923,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 630,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 630,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 630,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 892,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 984,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1165,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1165_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 897,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 862,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$862_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$862",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 861,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 630,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5606:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								897,
								910,
								1188,
								1191
							],
							"usedEvents": [
								219,
								876
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						]
					},
					"id": 677,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 677,
							"sourceUnit": 449,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 636,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:3"
									},
									"id": 637,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 635,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 676,
							"linearizedBaseContracts": [
								676,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 676,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 648,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 649,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 646,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 645,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 676,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 657,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 654,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 653,
												"id": 656,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 658,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 658,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 676,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 663,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 662,
												"id": 665,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 676,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 671,
												"id": 673,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 676,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 677,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"Initializable": [
							448
						],
						"PausableUpgradeable": [
							852
						]
					},
					"id": 853,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 678,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 680,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 853,
							"sourceUnit": 677,
							"src": "128:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 679,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 676,
										"src": "136:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 682,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 853,
							"sourceUnit": 449,
							"src": "196:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 681,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 684,
										"name": "Initializable",
										"nameLocations": [
											"742:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "742:13:4"
									},
									"id": 685,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:4"
								},
								{
									"baseName": {
										"id": 686,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "757:18:4"
									},
									"id": 687,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:4"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 683,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 852,
							"linearizedBaseContracts": [
								852,
								676,
								448
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 691,
									"members": [
										{
											"constant": false,
											"id": 690,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 691,
											"src": "886:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 689,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:4",
									"nodeType": "StructDefinition",
									"scope": 852,
									"src": "853:52:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 694,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:4",
									"nodeType": "VariableDeclaration",
									"scope": 852,
									"src": "1023:117:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 692,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 693,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "1227:82:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:4",
													"nodeType": "YulBlock",
													"src": "1246:57:4",
													"statements": [
														{
															"nativeSrc": "1260:33:4",
															"nodeType": "YulAssignment",
															"src": "1260:33:4",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:4",
																"nodeType": "YulIdentifier",
																"src": "1270:23:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 698,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 694,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:4",
														"valueSize": 1
													}
												],
												"id": 700,
												"nodeType": "InlineAssembly",
												"src": "1237:66:4"
											}
										]
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:4"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "1200:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 697,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 696,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 691,
														"src": "1200:15:4"
													},
													"referencedDeclaration": 691,
													"src": "1200:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:4"
									},
									"scope": 852,
									"src": "1147:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 707,
									"name": "Paused",
									"nameLocation": "1399:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1406:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:4"
									},
									"src": "1393:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 712,
									"name": "Unpaused",
									"nameLocation": "1510:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 712,
												"src": "1519:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:4"
									},
									"src": "1504:32:4"
								},
								{
									"documentation": {
										"id": 713,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 715,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:4"
									},
									"src": "1623:22:4"
								},
								{
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 718,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:4"
									},
									"src": "1736:22:4"
								},
								{
									"body": {
										"id": 727,
										"nodeType": "Block",
										"src": "1889:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 724,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1899:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:4"
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 728,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 722,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 721,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1872:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:4"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:4"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:4"
									},
									"scope": 852,
									"src": "1836:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "2002:93:4",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "2012:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 734,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 733,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "2012:15:4"
															},
															"referencedDeclaration": 691,
															"src": "2012:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 736,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2040:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:4"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 739,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "2071:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "2071:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:4"
											}
										]
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 731,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 730,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1985:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:4"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:4"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:4"
									},
									"scope": 852,
									"src": "1939:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "2306:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 749,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "2316:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 751,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:4"
											},
											{
												"id": 752,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:4"
											}
										]
									},
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 754,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:4"
									},
									"src": "2281:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "2553:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 757,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "2563:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:4"
											},
											{
												"id": 760,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:4"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 762,
									"name": "whenPaused",
									"nameLocation": "2540:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:4"
									},
									"src": "2531:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 777,
										"nodeType": "Block",
										"src": "2745:92:4",
										"statements": [
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 777,
														"src": "2755:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 769,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 768,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "2755:15:4"
															},
															"referencedDeclaration": 691,
															"src": "2755:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 771,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2783:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:4"
											},
											{
												"expression": {
													"expression": {
														"id": 774,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "2821:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 775,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:4",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 690,
													"src": "2821:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 767,
												"id": 776,
												"nodeType": "Return",
												"src": "2814:16:4"
											}
										]
									},
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 778,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:4"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "2739:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:4"
									},
									"scope": 852,
									"src": "2692:145:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "2956:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 782,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "2970:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 788,
												"nodeType": "IfStatement",
												"src": "2966:61:4",
												"trueBody": {
													"id": 787,
													"nodeType": "Block",
													"src": "2980:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 784,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "3001:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 786,
															"nodeType": "RevertStatement",
															"src": "2994:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:4"
									},
									"returnParameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:4"
									},
									"scope": 852,
									"src": "2905:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "3153:78:4",
										"statements": [
											{
												"condition": {
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 794,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "3168:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "3163:62:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "3178:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 797,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "3199:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "3192:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:4"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:4"
									},
									"scope": 852,
									"src": "3105:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "3415:127:4",
										"statements": [
											{
												"assignments": [
													811
												],
												"declarations": [
													{
														"constant": false,
														"id": 811,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "3425:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 810,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 809,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "3425:15:4"
															},
															"referencedDeclaration": 691,
															"src": "3425:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 814,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 812,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3453:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:4"
											},
											{
												"expression": {
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 815,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "3484:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "3484:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 822,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3522:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 821,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "3515:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "EmitStatement",
												"src": "3510:25:4"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 807,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 806,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "3401:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:4"
									},
									"scope": 852,
									"src": "3366:176:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "3722:130:4",
										"statements": [
											{
												"assignments": [
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "3732:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 834,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 833,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 691,
																"src": "3732:15:4"
															},
															"referencedDeclaration": 691,
															"src": "3732:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 838,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 836,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3760:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$691_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:4"
											},
											{
												"expression": {
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 839,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3791:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$691_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 690,
														"src": "3791:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 846,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3832:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 845,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 712,
														"src": "3823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "EmitStatement",
												"src": "3818:27:4"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 830,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 762,
												"src": "3711:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:4"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:4"
									},
									"scope": 852,
									"src": "3674:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 853,
							"src": "701:3153:4",
							"usedErrors": [
								211,
								214,
								715,
								718
							],
							"usedEvents": [
								219,
								707,
								712
							]
						}
					],
					"src": "102:3753:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							862
						]
					},
					"id": 863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 854,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 855,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:5",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 862,
							"linearizedBaseContracts": [
								862
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:5",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:5"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "868:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 858,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:5"
									},
									"scope": 862,
									"src": "820:57:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 863,
							"src": "343:536:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1428
						],
						"ERC1967Utils": [
							1165
						],
						"IBeacon": [
							1175
						],
						"StorageSlot": [
							1538
						]
					},
					"id": 1166,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 864,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 866,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1176,
							"src": "140:46:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 865,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1175,
										"src": "148:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1429,
							"src": "187:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 867,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1428,
										"src": "195:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1166,
							"sourceUnit": 1539,
							"src": "236:56:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 869,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1538,
										"src": "244:11:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 871,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:6",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1165,
							"linearizedBaseContracts": [
								1165
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:6",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 876,
									"name": "Upgraded",
									"nameLocation": "739:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "748:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:6"
									},
									"src": "733:47:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:6",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 883,
									"name": "AdminChanged",
									"nameLocation": "864:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "877:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "900:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:6"
									},
									"src": "858:60:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:6",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 888,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "1009:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:6"
									},
									"src": "988:45:6"
								},
								{
									"constant": true,
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:6",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 892,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "1279:114:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 890,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 891,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 893,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:6",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 897,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 897,
												"src": "1509:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:6"
									},
									"src": "1474:59:6"
								},
								{
									"documentation": {
										"id": 898,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:6",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 902,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "1630:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:6"
									},
									"src": "1604:41:6"
								},
								{
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:6",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 907,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "1744:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:6"
									},
									"src": "1717:43:6"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:6",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 910,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:6"
									},
									"src": "1853:26:6"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "2018:77:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 918,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 892,
																"src": "2062:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 916,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "2035:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1538_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1460,
															"src": "2035:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1434_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 919,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1433,
													"src": "2035:53:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 915,
												"id": 921,
												"nodeType": "Return",
												"src": "2028:60:6"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:6",
										"text": " @dev Returns the current implementation address."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:6"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "2009:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:6"
									},
									"scope": 1165,
									"src": "1957:138:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "2249:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 929,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 926,
																"src": "2263:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"nodeType": "IfStatement",
												"src": "2259:119:6",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "2299:79:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 935,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "2349:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 934,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "2320:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 937,
															"nodeType": "RevertStatement",
															"src": "2313:54:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 892,
																	"src": "2414:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 940,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "2387:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1538_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1460,
																"src": "2387:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1434_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1433,
														"src": "2387:53:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 946,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "2443:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:6"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:6",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "2214:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:6"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:6"
									},
									"scope": 1165,
									"src": "2186:281:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "2860:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 959,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2889:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 958,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "2870:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 963,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2931:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 962,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 876,
														"src": "2922:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 965,
												"nodeType": "EmitStatement",
												"src": "2917:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 966,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "2964:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 968,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "3065:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 978,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "3079:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 980,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:6"
														}
													]
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "2960:148:6",
												"trueBody": {
													"id": 977,
													"nodeType": "Block",
													"src": "2981:78:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "3024:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "3043:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 970,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "2995:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1428_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1347,
																	"src": "2995:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 976,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:6",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2805:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "2832:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:6"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:6"
									},
									"scope": 1165,
									"src": "2779:335:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:6",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 988,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "3335:105:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 986,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 987,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "3844:68:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 996,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "3888:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 994,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "3861:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1538_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1460,
															"src": "3861:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1434_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 998,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1433,
													"src": "3861:44:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 993,
												"id": 999,
												"nodeType": "Return",
												"src": "3854:51:6"
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:6",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:6"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "3835:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:6"
									},
									"scope": 1165,
									"src": "3792:120:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "4039:172:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1007,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "4053:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1008,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1021,
												"nodeType": "IfStatement",
												"src": "4049:91:6",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "4077:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1016,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1015,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1014,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1017,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1013,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 902,
																	"src": "4098:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "RevertStatement",
															"src": "4091:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1025,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "4176:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1022,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "4149:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1538_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1460,
																"src": "4149:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1434_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1433,
														"src": "4149:44:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1028,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "4196:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1030,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:6"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:6",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "4013:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1003,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:6"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:6"
									},
									"scope": 1165,
									"src": "3994:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "4379:85:6",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1039,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1001,
																"src": "4407:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "4419:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1038,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "4394:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1043,
												"nodeType": "EmitStatement",
												"src": "4389:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "4448:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1044,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "4438:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1047,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:6"
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:6",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "4352:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:6"
									},
									"returnParameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:6"
									},
									"scope": 1165,
									"src": "4331:133:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:6",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1053,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:6",
									"nodeType": "VariableDeclaration",
									"scope": 1165,
									"src": "4741:106:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1051,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1052,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "4963:69:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1061,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1053,
																"src": "5007:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1059,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1538,
																"src": "4980:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1538_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:6",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1460,
															"src": "4980:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1434_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:6",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1433,
													"src": "4980:45:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1058,
												"id": 1064,
												"nodeType": "Return",
												"src": "4973:52:6"
											}
										]
									},
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:6",
										"text": " @dev Returns the current beacon."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "4954:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:6"
									},
									"scope": 1165,
									"src": "4910:122:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "5161:390:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1072,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "5175:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "5171:95:6",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "5203:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1069,
																		"src": "5245:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1077,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "5224:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1080,
															"nodeType": "RevertStatement",
															"src": "5217:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1086,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1053,
																	"src": "5303:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1083,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1538,
																	"src": "5276:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1538_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1085,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:6",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1460,
																"src": "5276:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1434_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1088,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1433,
														"src": "5276:45:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1089,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "5324:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:6"
											},
											{
												"assignments": [
													1093
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:6",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "5344:28:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1092,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1095,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1069,
																	"src": "5383:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1094,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1175,
																"src": "5375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1175_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1175",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:6",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1174,
														"src": "5375:33:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1100,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "5424:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "5420:125:6",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "5463:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1106,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1093,
																		"src": "5513:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1105,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "5484:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "5477:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:6",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "5134:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1068,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:6"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 1165,
									"src": "5114:437:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "6155:254:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1121,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "6176:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1120,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "6165:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1125,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "6216:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1124,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "6201:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1127,
												"nodeType": "EmitStatement",
												"src": "6196:30:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1128,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "6241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1130,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1147,
													"nodeType": "Block",
													"src": "6360:43:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1144,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "6374:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1146,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:6"
														}
													]
												},
												"id": 1148,
												"nodeType": "IfStatement",
												"src": "6237:166:6",
												"trueBody": {
													"id": 1143,
													"nodeType": "Block",
													"src": "6258:96:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1136,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1115,
																						"src": "6309:9:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1135,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "6301:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1175_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1175",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:6",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1174,
																			"src": "6301:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1140,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1117,
																		"src": "6338:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1132,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "6272:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1428_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:6",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1347,
																	"src": "6272:28:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1142,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:6",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "6108:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "6127:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:6"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:6"
									},
									"scope": 1165,
									"src": "6076:333:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1163,
										"nodeType": "Block",
										"src": "6634:86:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1154,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:6",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "6644:70:6",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "6663:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1158,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "6684:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1160,
															"nodeType": "RevertStatement",
															"src": "6677:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:6",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:6"
									},
									"scope": 1165,
									"src": "6598:122:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1166,
							"src": "449:6273:6",
							"usedErrors": [
								897,
								902,
								907,
								910
							],
							"usedEvents": [
								876,
								883,
								888
							]
						}
					],
					"src": "114:6609:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1175
						]
					},
					"id": 1176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1167,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1168,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:7",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1175,
							"linearizedBaseContracts": [
								1175
							],
							"name": "IBeacon",
							"nameLocation": "224:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:7",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:7"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "460:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:7"
									},
									"scope": 1175,
									"src": "411:58:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1176,
							"src": "214:257:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1428
						]
					},
					"id": 1429,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1178,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:8",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1428,
							"linearizedBaseContracts": [
								1428
							],
							"name": "Address",
							"nameLocation": "203:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1183,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "349:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:8"
									},
									"src": "316:50:8"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:8",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1188,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "475:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:8"
									},
									"src": "452:39:8"
								},
								{
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1191,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:8"
									},
									"src": "591:24:8"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "1602:260:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1201,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1428",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1428",
																		"typeString": "library Address"
																	}
																],
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1199,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1204,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1196,
														"src": "1640:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "1612:109:8",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "1648:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1209,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1428",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1428",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1207,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1206,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "1669:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1212,
															"nodeType": "RevertStatement",
															"src": "1662:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1216,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1216,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1231,
														"src": "1732:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1215,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1223,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1217,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1194,
																"src": "1750:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1219,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "1772:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:8"
											},
											{
												"condition": {
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:8",
													"subExpression": {
														"id": 1224,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "1798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "IfStatement",
												"src": "1793:63:8",
												"trueBody": {
													"id": 1229,
													"nodeType": "Block",
													"src": "1807:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1226,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "1828:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1228,
															"nodeType": "RevertStatement",
															"src": "1821:24:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:8",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "1550:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:8",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "1577:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:8"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:8"
									},
									"scope": 1428,
									"src": "1531:331:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "2794:62:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1243,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1235,
															"src": "2833:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1244,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "2841:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1242,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "2811:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1241,
												"id": 1247,
												"nodeType": "Return",
												"src": "2804:45:8"
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:8",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2727:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2743:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:8"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2780:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:8"
									},
									"scope": 1428,
									"src": "2705:151:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "3293:279:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1263,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1428",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1428",
																		"typeString": "library Address"
																	}
																],
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1261,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:8",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1266,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1256,
														"src": "3331:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1276,
												"nodeType": "IfStatement",
												"src": "3303:108:8",
												"trueBody": {
													"id": 1275,
													"nodeType": "Block",
													"src": "3338:73:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1271,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1428",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1428",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1270,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1269,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1272,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1268,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "3359:26:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1274,
															"nodeType": "RevertStatement",
															"src": "3352:48:8"
														}
													]
												}
											},
											{
												"assignments": [
													1278,
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1278,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "3421:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1277,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1294,
														"src": "3435:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1279,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1287,
												"initialValue": {
													"arguments": [
														{
															"id": 1285,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "3488:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1281,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "3462:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:8",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1283,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "3481:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1289,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "3537:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "3545:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1291,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1280,
															"src": "3554:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1288,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "3510:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1293,
												"nodeType": "Return",
												"src": "3503:62:8"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "3211:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "3227:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1253,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "3246:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:8"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "3279:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:8"
									},
									"scope": 1428,
									"src": "3180:392:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "3811:154:8",
										"statements": [
											{
												"assignments": [
													1306,
													1308
												],
												"declarations": [
													{
														"constant": false,
														"id": 1306,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "3822:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1305,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1308,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1320,
														"src": "3836:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1307,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1313,
												"initialValue": {
													"arguments": [
														{
															"id": 1311,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "3881:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1309,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "3863:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1310,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:8",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1315,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "3930:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1316,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1306,
															"src": "3938:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1317,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "3947:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1314,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "3903:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1304,
												"id": 1319,
												"nodeType": "Return",
												"src": "3896:62:8"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3739:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3755:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:8"
									},
									"returnParameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "3797:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1302,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:8"
									},
									"scope": 1428,
									"src": "3711:254:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "4203:156:8",
										"statements": [
											{
												"assignments": [
													1332,
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "4214:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1331,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1346,
														"src": "4228:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1333,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1339,
												"initialValue": {
													"arguments": [
														{
															"id": 1337,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4275:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1335,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "4255:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:8",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "4324:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1342,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4332:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1343,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "4341:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1340,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "4297:26:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1330,
												"id": 1345,
												"nodeType": "Return",
												"src": "4290:62:8"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:8",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "4136:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "4152:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:8"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "4189:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1328,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:8"
									},
									"scope": 1428,
									"src": "4106:253:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "4783:424:8",
										"statements": [
											{
												"condition": {
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:8",
													"subExpression": {
														"id": 1359,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1352,
														"src": "4798:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1384,
													"nodeType": "Block",
													"src": "4857:344:8",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1366,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1354,
																			"src": "5045:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1368,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1374,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1370,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1350,
																				"src": "5071:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1371,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1372,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1381,
															"nodeType": "IfStatement",
															"src": "5041:119:8",
															"trueBody": {
																"id": 1380,
																"nodeType": "Block",
																"src": "5096:64:8",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1377,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1350,
																					"src": "5138:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1376,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1188,
																				"src": "5121:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1378,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1379,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:8"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1382,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "5180:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1358,
															"id": 1383,
															"nodeType": "Return",
															"src": "5173:17:8"
														}
													]
												},
												"id": 1385,
												"nodeType": "IfStatement",
												"src": "4793:408:8",
												"trueBody": {
													"id": 1365,
													"nodeType": "Block",
													"src": "4807:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1362,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1354,
																		"src": "4829:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1361,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "4821:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1364,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:8",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4670:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4694:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1351,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4716:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1353,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:8"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "4769:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:8"
									},
									"scope": 1428,
									"src": "4625:582:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1408,
										"nodeType": "Block",
										"src": "5509:122:8",
										"statements": [
											{
												"condition": {
													"id": 1398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:8",
													"subExpression": {
														"id": 1397,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "5524:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1406,
													"nodeType": "Block",
													"src": "5583:42:8",
													"statements": [
														{
															"expression": {
																"id": 1404,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1392,
																"src": "5604:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1396,
															"id": 1405,
															"nodeType": "Return",
															"src": "5597:17:8"
														}
													]
												},
												"id": 1407,
												"nodeType": "IfStatement",
												"src": "5519:106:8",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "5533:44:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1400,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "5555:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1399,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1427,
																	"src": "5547:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1402,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:8",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "5433:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "5447:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:8"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1409,
												"src": "5495:12:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:8"
									},
									"scope": 1428,
									"src": "5407:224:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "5798:461:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1415,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "5874:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1424,
													"nodeType": "Block",
													"src": "6204:49:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1421,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1191,
																	"src": "6225:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1423,
															"nodeType": "RevertStatement",
															"src": "6218:24:8"
														}
													]
												},
												"id": 1425,
												"nodeType": "IfStatement",
												"src": "5870:383:8",
												"trueBody": {
													"id": 1420,
													"nodeType": "Block",
													"src": "5897:301:8",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:8",
																"nodeType": "YulBlock",
																"src": "6055:133:8",
																"statements": [
																	{
																		"nativeSrc": "6073:40:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:8"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:8"
																			},
																			"nativeSrc": "6096:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:8"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:8",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:8",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:8",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:8"
																					},
																					"nativeSrc": "6137:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:8"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:8",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:8"
																			},
																			"nativeSrc": "6130:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:8"
																		},
																		"nativeSrc": "6130:44:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:8"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1412,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:8",
																	"valueSize": 1
																},
																{
																	"declaration": 1412,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:8",
																	"valueSize": 1
																}
															],
															"id": 1419,
															"nodeType": "InlineAssembly",
															"src": "6046:142:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1410,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:8",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "5760:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:8"
									},
									"returnParameters": {
										"id": 1414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:8"
									},
									"scope": 1428,
									"src": "5743:516:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1429,
							"src": "195:6066:8",
							"usedErrors": [
								1183,
								1188,
								1191
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1538
						]
					},
					"id": 1539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1430,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1431,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:9",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1434,
									"members": [
										{
											"constant": false,
											"id": 1433,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1434,
											"src": "1300:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1432,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:9",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1271:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1437,
									"members": [
										{
											"constant": false,
											"id": 1436,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1437,
											"src": "1355:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1435,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:9",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1326:46:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1440,
									"members": [
										{
											"constant": false,
											"id": 1439,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1440,
											"src": "1407:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1438,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:9",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1378:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1443,
									"members": [
										{
											"constant": false,
											"id": 1442,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1443,
											"src": "1462:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1441,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:9",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1433:49:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1446,
									"members": [
										{
											"constant": false,
											"id": 1445,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1446,
											"src": "1516:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1444,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:9",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:9",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1488:47:9",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1449,
									"members": [
										{
											"constant": false,
											"id": 1448,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 1449,
											"src": "1568:11:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1447,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:9",
									"nodeType": "StructDefinition",
									"scope": 1538,
									"src": "1541:45:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "1768:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:9",
													"nodeType": "YulBlock",
													"src": "1830:38:9",
													"statements": [
														{
															"nativeSrc": "1844:14:9",
															"nodeType": "YulAssignment",
															"src": "1844:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:9",
																"nodeType": "YulIdentifier",
																"src": "1854:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1456,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1452,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:9",
														"valueSize": 1
													}
												],
												"id": 1458,
												"nodeType": "InlineAssembly",
												"src": "1821:47:9"
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:9",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1708:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:9"
									},
									"returnParameters": {
										"id": 1457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "1745:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1454,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1434,
														"src": "1745:11:9"
													},
													"referencedDeclaration": 1434,
													"src": "1745:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1434_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:9"
									},
									"scope": 1538,
									"src": "1684:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1470,
										"nodeType": "Block",
										"src": "2056:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:9",
													"nodeType": "YulBlock",
													"src": "2118:38:9",
													"statements": [
														{
															"nativeSrc": "2132:14:9",
															"nodeType": "YulAssignment",
															"src": "2132:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:9",
																"nodeType": "YulIdentifier",
																"src": "2142:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1463,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:9",
														"valueSize": 1
													}
												],
												"id": 1469,
												"nodeType": "InlineAssembly",
												"src": "2109:47:9"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:9",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "1996:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:9"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "2033:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1437_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1465,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1437,
														"src": "2033:11:9"
													},
													"referencedDeclaration": 1437,
													"src": "2033:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1437_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:9"
									},
									"scope": 1538,
									"src": "1972:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "2344:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:9",
													"nodeType": "YulBlock",
													"src": "2406:38:9",
													"statements": [
														{
															"nativeSrc": "2420:14:9",
															"nodeType": "YulAssignment",
															"src": "2420:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:9",
																"nodeType": "YulIdentifier",
																"src": "2430:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1478,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1474,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:9",
														"valueSize": 1
													}
												],
												"id": 1480,
												"nodeType": "InlineAssembly",
												"src": "2397:47:9"
											}
										]
									},
									"documentation": {
										"id": 1472,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:9",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "2284:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:9"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1482,
												"src": "2321:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1440_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1476,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1440,
														"src": "2321:11:9"
													},
													"referencedDeclaration": 1440,
													"src": "2321:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1440_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:9"
									},
									"scope": 1538,
									"src": "2260:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "2632:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:9",
													"nodeType": "YulBlock",
													"src": "2694:38:9",
													"statements": [
														{
															"nativeSrc": "2708:14:9",
															"nodeType": "YulAssignment",
															"src": "2708:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:9",
																"nodeType": "YulIdentifier",
																"src": "2718:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1489,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1485,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:9",
														"valueSize": 1
													}
												],
												"id": 1491,
												"nodeType": "InlineAssembly",
												"src": "2685:47:9"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:9",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2572:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1484,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:9"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "2609:21:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1443_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1487,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1443,
														"src": "2609:11:9"
													},
													"referencedDeclaration": 1443,
													"src": "2609:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1443_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:9"
									},
									"scope": 1538,
									"src": "2548:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "2917:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:9",
													"nodeType": "YulBlock",
													"src": "2979:38:9",
													"statements": [
														{
															"nativeSrc": "2993:14:9",
															"nodeType": "YulAssignment",
															"src": "2993:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:9",
																"nodeType": "YulIdentifier",
																"src": "3003:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1500,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1496,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:9",
														"valueSize": 1
													}
												],
												"id": 1502,
												"nodeType": "InlineAssembly",
												"src": "2970:47:9"
											}
										]
									},
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:9",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2858:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1495,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:9"
									},
									"returnParameters": {
										"id": 1501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2895:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1446_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1499,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1498,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1446,
														"src": "2895:10:9"
													},
													"referencedDeclaration": 1446,
													"src": "2895:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1446_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:9"
									},
									"scope": 1538,
									"src": "2835:188:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "3225:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:9",
													"nodeType": "YulBlock",
													"src": "3287:44:9",
													"statements": [
														{
															"nativeSrc": "3301:20:9",
															"nodeType": "YulAssignment",
															"src": "3301:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:9",
																"nodeType": "YulIdentifier",
																"src": "3311:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1511,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1507,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1513,
												"nodeType": "InlineAssembly",
												"src": "3278:53:9"
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:9",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "3158:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1506,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:9"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1511,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "3203:20:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1446_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1509,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1446,
														"src": "3203:10:9"
													},
													"referencedDeclaration": 1446,
													"src": "3203:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1446_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:9"
									},
									"scope": 1538,
									"src": "3135:202:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "3513:106:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:9",
													"nodeType": "YulBlock",
													"src": "3575:38:9",
													"statements": [
														{
															"nativeSrc": "3589:14:9",
															"nodeType": "YulAssignment",
															"src": "3589:14:9",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:9",
																"nodeType": "YulIdentifier",
																"src": "3599:4:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1522,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1518,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:9",
														"valueSize": 1
													}
												],
												"id": 1524,
												"nodeType": "InlineAssembly",
												"src": "3566:47:9"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:9",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "3455:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1517,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:9"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "3492:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1449_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1521,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1520,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "3492:9:9"
													},
													"referencedDeclaration": 1449,
													"src": "3492:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1449_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:9"
									},
									"scope": 1538,
									"src": "3433:186:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1536,
										"nodeType": "Block",
										"src": "3816:112:9",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:9",
													"nodeType": "YulBlock",
													"src": "3878:44:9",
													"statements": [
														{
															"nativeSrc": "3892:20:9",
															"nodeType": "YulAssignment",
															"src": "3892:20:9",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:9",
																"nodeType": "YulIdentifier",
																"src": "3902:10:9"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:9"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1533,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:9",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1529,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:9",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1535,
												"nodeType": "InlineAssembly",
												"src": "3869:53:9"
											}
										]
									},
									"documentation": {
										"id": 1527,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:9",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1537,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "3751:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1528,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:9"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1533,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "3795:19:9",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1449_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1532,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1531,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1449,
														"src": "3795:9:9"
													},
													"referencedDeclaration": 1449,
													"src": "3795:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1449_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:9"
									},
									"scope": 1538,
									"src": "3729:199:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1539,
							"src": "1245:2685:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1616
						]
					},
					"id": 1617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1541,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:10",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1616,
							"linearizedBaseContracts": [
								1616
							],
							"name": "IERC20",
							"nameLocation": "213:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1542,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:10",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1550,
									"name": "Transfer",
									"nameLocation": "395:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "404:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "426:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1548,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1550,
												"src": "446:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:10"
									},
									"src": "389:72:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:10",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1559,
									"name": "Approval",
									"nameLocation": "626:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "635:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "658:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "683:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:10"
									},
									"src": "620:78:10"
								},
								{
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:10",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:10"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "820:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:10"
									},
									"scope": 1616,
									"src": "774:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:10",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "930:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:10"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "970:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:10"
									},
									"scope": 1616,
									"src": "911:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:10",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1583,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1221:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1233:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:10"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1583,
												"src": "1266:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1580,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:10"
									},
									"scope": 1616,
									"src": "1203:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1584,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:10",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1566:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1581:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:10"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "1621:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:10"
									},
									"scope": 1616,
									"src": "1547:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:10",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2325:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2342:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:10"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "2375:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1600,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:10"
									},
									"scope": 1616,
									"src": "2308:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:10",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "2711:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "2725:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "2737:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:10"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1615,
												"src": "2770:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1612,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:10"
									},
									"scope": 1616,
									"src": "2689:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1617,
							"src": "203:2575:10",
							"usedErrors": [],
							"usedEvents": [
								1550,
								1559
							]
						}
					],
					"src": "106:2673:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
					"exportedSymbols": {
						"ECDSA": [
							1964
						]
					},
					"id": 1965,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ECDSA",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1619,
								"nodeType": "StructuredDocumentation",
								"src": "138:205:11",
								"text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
							},
							"fullyImplemented": true,
							"id": 1964,
							"linearizedBaseContracts": [
								1964
							],
							"name": "ECDSA",
							"nameLocation": "352:5:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ECDSA.RecoverError",
									"id": 1624,
									"members": [
										{
											"id": 1620,
											"name": "NoError",
											"nameLocation": "392:7:11",
											"nodeType": "EnumValue",
											"src": "392:7:11"
										},
										{
											"id": 1621,
											"name": "InvalidSignature",
											"nameLocation": "409:16:11",
											"nodeType": "EnumValue",
											"src": "409:16:11"
										},
										{
											"id": 1622,
											"name": "InvalidSignatureLength",
											"nameLocation": "435:22:11",
											"nodeType": "EnumValue",
											"src": "435:22:11"
										},
										{
											"id": 1623,
											"name": "InvalidSignatureS",
											"nameLocation": "467:17:11",
											"nodeType": "EnumValue",
											"src": "467:17:11"
										}
									],
									"name": "RecoverError",
									"nameLocation": "369:12:11",
									"nodeType": "EnumDefinition",
									"src": "364:126:11"
								},
								{
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "496:63:11",
										"text": " @dev The signature derives the `address(0)`."
									},
									"errorSelector": "f645eedf",
									"id": 1627,
									"name": "ECDSAInvalidSignature",
									"nameLocation": "570:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "591:2:11"
									},
									"src": "564:30:11"
								},
								{
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "600:60:11",
										"text": " @dev The signature has an invalid length."
									},
									"errorSelector": "fce698f7",
									"id": 1632,
									"name": "ECDSAInvalidSignatureLength",
									"nameLocation": "671:27:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "707:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "699:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "699:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "698:16:11"
									},
									"src": "665:50:11"
								},
								{
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "721:85:11",
										"text": " @dev The signature has an S value that is in the upper half order."
									},
									"errorSelector": "d78bce0c",
									"id": 1637,
									"name": "ECDSAInvalidSignatureS",
									"nameLocation": "817:22:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "848:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "840:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1634,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "840:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "839:11:11"
									},
									"src": "811:40:11"
								},
								{
									"body": {
										"id": 1689,
										"nodeType": "Block",
										"src": "2242:653:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1652,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1642,
															"src": "2256:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2266:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2256:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "3635",
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:2:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65_by_1",
															"typeString": "int_const 65"
														},
														"value": "65"
													},
													"src": "2256:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1687,
													"nodeType": "Block",
													"src": "2781:108:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2811:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1675,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2803:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1674,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2803:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2803:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1678,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "2815:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2828:22:11",
																		"memberName": "InvalidSignatureLength",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1622,
																		"src": "2815:35:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1624",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1682,
																					"name": "signature",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1642,
																					"src": "2860:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2870:6:11",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "2860:16:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2852:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1680,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "2852:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2852:25:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1685,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2802:76:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1651,
															"id": 1686,
															"nodeType": "Return",
															"src": "2795:83:11"
														}
													]
												},
												"id": 1688,
												"nodeType": "IfStatement",
												"src": "2252:637:11",
												"trueBody": {
													"id": 1673,
													"nodeType": "Block",
													"src": "2280:495:11",
													"statements": [
														{
															"assignments": [
																1657
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1657,
																	"mutability": "mutable",
																	"name": "r",
																	"nameLocation": "2302:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1673,
																	"src": "2294:9:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1656,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2294:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1658,
															"nodeType": "VariableDeclarationStatement",
															"src": "2294:9:11"
														},
														{
															"assignments": [
																1660
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1660,
																	"mutability": "mutable",
																	"name": "s",
																	"nameLocation": "2325:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1673,
																	"src": "2317:9:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1659,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2317:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1661,
															"nodeType": "VariableDeclarationStatement",
															"src": "2317:9:11"
														},
														{
															"assignments": [
																1663
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1663,
																	"mutability": "mutable",
																	"name": "v",
																	"nameLocation": "2346:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 1673,
																	"src": "2340:7:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1662,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "2340:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1664,
															"nodeType": "VariableDeclarationStatement",
															"src": "2340:7:11"
														},
														{
															"AST": {
																"nativeSrc": "2548:171:11",
																"nodeType": "YulBlock",
																"src": "2548:171:11",
																"statements": [
																	{
																		"nativeSrc": "2566:32:11",
																		"nodeType": "YulAssignment",
																		"src": "2566:32:11",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2581:9:11",
																							"nodeType": "YulIdentifier",
																							"src": "2581:9:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2592:4:11",
																							"nodeType": "YulLiteral",
																							"src": "2592:4:11",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2577:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2577:3:11"
																					},
																					"nativeSrc": "2577:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2577:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2571:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2571:5:11"
																			},
																			"nativeSrc": "2571:27:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2571:27:11"
																		},
																		"variableNames": [
																			{
																				"name": "r",
																				"nativeSrc": "2566:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2566:1:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2615:32:11",
																		"nodeType": "YulAssignment",
																		"src": "2615:32:11",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "signature",
																							"nativeSrc": "2630:9:11",
																							"nodeType": "YulIdentifier",
																							"src": "2630:9:11"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2641:4:11",
																							"nodeType": "YulLiteral",
																							"src": "2641:4:11",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2626:3:11",
																						"nodeType": "YulIdentifier",
																						"src": "2626:3:11"
																					},
																					"nativeSrc": "2626:20:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2626:20:11"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "2620:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2620:5:11"
																			},
																			"nativeSrc": "2620:27:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2620:27:11"
																		},
																		"variableNames": [
																			{
																				"name": "s",
																				"nativeSrc": "2615:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2615:1:11"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2664:41:11",
																		"nodeType": "YulAssignment",
																		"src": "2664:41:11",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "signature",
																									"nativeSrc": "2687:9:11",
																									"nodeType": "YulIdentifier",
																									"src": "2687:9:11"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2698:4:11",
																									"nodeType": "YulLiteral",
																									"src": "2698:4:11",
																									"type": "",
																									"value": "0x60"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2683:3:11",
																								"nodeType": "YulIdentifier",
																								"src": "2683:3:11"
																							},
																							"nativeSrc": "2683:20:11",
																							"nodeType": "YulFunctionCall",
																							"src": "2683:20:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2677:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2677:5:11"
																					},
																					"nativeSrc": "2677:27:11",
																					"nodeType": "YulFunctionCall",
																					"src": "2677:27:11"
																				}
																			],
																			"functionName": {
																				"name": "byte",
																				"nativeSrc": "2669:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2669:4:11"
																			},
																			"nativeSrc": "2669:36:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2669:36:11"
																		},
																		"variableNames": [
																			{
																				"name": "v",
																				"nativeSrc": "2664:1:11",
																				"nodeType": "YulIdentifier",
																				"src": "2664:1:11"
																			}
																		]
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1657,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2566:1:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1660,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2615:1:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1642,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2581:9:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1642,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2630:9:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1642,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2687:9:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1663,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "2664:1:11",
																	"valueSize": 1
																}
															],
															"id": 1665,
															"nodeType": "InlineAssembly",
															"src": "2539:180:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1667,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "2750:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1668,
																		"name": "v",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1663,
																		"src": "2756:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	{
																		"id": 1669,
																		"name": "r",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "2759:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1670,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "2762:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1666,
																	"name": "tryRecover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1690,
																		1770,
																		1878
																	],
																	"referencedDeclaration": 1878,
																	"src": "2739:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
																		"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2739:25:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1651,
															"id": 1672,
															"nodeType": "Return",
															"src": "2732:32:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "857:1267:11",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
									},
									"id": 1690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "2138:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "2157:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2149:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1639,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "2176:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2163:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2163:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:38:11"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2210:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2210:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2219:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1624",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1647,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1646,
														"name": "RecoverError",
														"nameLocations": [
															"2219:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1624,
														"src": "2219:12:11"
													},
													"referencedDeclaration": 1624,
													"src": "2219:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1624",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "2233:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1649,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2209:32:11"
									},
									"scope": 1964,
									"src": "2129:766:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1719,
										"nodeType": "Block",
										"src": "3789:168:11",
										"statements": [
											{
												"assignments": [
													1701,
													1704,
													1706
												],
												"declarations": [
													{
														"constant": false,
														"id": 1701,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "3808:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1719,
														"src": "3800:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1700,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3800:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1704,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "3832:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1719,
														"src": "3819:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1624",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1703,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1702,
																"name": "RecoverError",
																"nameLocations": [
																	"3819:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1624,
																"src": "3819:12:11"
															},
															"referencedDeclaration": 1624,
															"src": "3819:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1706,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "3847:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1719,
														"src": "3839:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1705,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3839:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1711,
												"initialValue": {
													"arguments": [
														{
															"id": 1708,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "3870:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1709,
															"name": "signature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "3876:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1707,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1690,
															1770,
															1878
														],
														"referencedDeclaration": 1690,
														"src": "3859:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3799:87:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1713,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "3908:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1714,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1706,
															"src": "3915:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1712,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "3896:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1624_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3896:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1716,
												"nodeType": "ExpressionStatement",
												"src": "3896:28:11"
											},
											{
												"expression": {
													"id": 1717,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1701,
													"src": "3941:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1718,
												"nodeType": "Return",
												"src": "3934:16:11"
											}
										]
									},
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "2901:796:11",
										"text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
									},
									"id": 1720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "3711:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "3727:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "3719:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3719:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "signature",
												"nameLocation": "3746:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "3733:22:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3733:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3718:38:11"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "3780:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3780:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:9:11"
									},
									"scope": 1964,
									"src": "3702:255:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "4285:342:11",
										"statements": [
											{
												"id": 1768,
												"nodeType": "UncheckedBlock",
												"src": "4295:326:11",
												"statements": [
													{
														"assignments": [
															1738
														],
														"declarations": [
															{
																"constant": false,
																"id": 1738,
																"mutability": "mutable",
																"name": "s",
																"nameLocation": "4327:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1768,
																"src": "4319:9:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"typeName": {
																	"id": 1737,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "4319:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1745,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															"id": 1744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1739,
																"name": "vs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "4331:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4344:66:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		},
																		"value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
																			"typeString": "int_const 5789...(69 digits omitted)...9967"
																		}
																	],
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4336:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes32_$",
																		"typeString": "type(bytes32)"
																	},
																	"typeName": {
																		"id": 1740,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "4336:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4336:75:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"src": "4331:80:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4319:92:11"
													},
													{
														"assignments": [
															1747
														],
														"declarations": [
															{
																"constant": false,
																"id": 1747,
																"mutability": "mutable",
																"name": "v",
																"nameLocation": "4528:1:11",
																"nodeType": "VariableDeclaration",
																"scope": 1768,
																"src": "4522:7:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 1746,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4522:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1760,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"arguments": [
																						{
																							"id": 1752,
																							"name": "vs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1727,
																							"src": "4547:2:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1751,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4539:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1750,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "4539:7:11",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1753,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4539:11:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">>",
																				"rightExpression": {
																					"hexValue": "323535",
																					"id": 1754,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "4554:3:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_255_by_1",
																						"typeString": "int_const 255"
																					},
																					"value": "255"
																				},
																				"src": "4539:18:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1756,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4538:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "3237",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4561:2:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_27_by_1",
																			"typeString": "int_const 27"
																		},
																		"value": "27"
																	},
																	"src": "4538:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4532:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1748,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "4532:5:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4532:32:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4522:42:11"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1762,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1723,
																	"src": "4596:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1763,
																	"name": "v",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "4602:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																{
																	"id": 1764,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "4605:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 1765,
																	"name": "s",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "4608:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1761,
																"name": "tryRecover",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1690,
																	1770,
																	1878
																],
																"referencedDeclaration": 1878,
																"src": "4585:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
																	"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"id": 1766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4585:25:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
																"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
															}
														},
														"functionReturnParameters": 1736,
														"id": 1767,
														"nodeType": "Return",
														"src": "4578:32:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "3963:205:11",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]"
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "4182:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4201:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4193:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1722,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4193:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4215:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4207:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1724,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4226:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4218:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1726,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4218:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4192:37:11"
									},
									"returnParameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4253:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4253:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4262:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1624",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1732,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1731,
														"name": "RecoverError",
														"nameLocations": [
															"4262:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1624,
														"src": "4262:12:11"
													},
													"referencedDeclaration": 1624,
													"src": "4262:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1624",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "4276:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1734,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4276:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4252:32:11"
									},
									"scope": 1964,
									"src": "4173:454:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "4840:164:11",
										"statements": [
											{
												"assignments": [
													1783,
													1786,
													1788
												],
												"declarations": [
													{
														"constant": false,
														"id": 1783,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "4859:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "4851:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1782,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4851:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "4883:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "4870:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1624",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1785,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1784,
																"name": "RecoverError",
																"nameLocations": [
																	"4870:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1624,
																"src": "4870:12:11"
															},
															"referencedDeclaration": 1624,
															"src": "4870:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1788,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "4898:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "4890:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1787,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "4890:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1794,
												"initialValue": {
													"arguments": [
														{
															"id": 1790,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1773,
															"src": "4921:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1791,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "4927:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1792,
															"name": "vs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "4930:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1789,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1690,
															1770,
															1878
														],
														"referencedDeclaration": 1770,
														"src": "4910:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
															"typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4910:23:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:83:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1796,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1786,
															"src": "4955:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1797,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "4962:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1795,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "4943:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1624_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "ExpressionStatement",
												"src": "4943:28:11"
											},
											{
												"expression": {
													"id": 1800,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1783,
													"src": "4988:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1781,
												"id": 1801,
												"nodeType": "Return",
												"src": "4981:16:11"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "4633:116:11",
										"text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "4763:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "4779:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "4771:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1772,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4771:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4793:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "4785:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1774,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4785:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "vs",
												"nameLocation": "4804:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "4796:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1776,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4770:37:11"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "4831:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4831:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4830:9:11"
									},
									"scope": 1964,
									"src": "4754:250:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1877,
										"nodeType": "Block",
										"src": "5298:1372:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1824,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1812,
																"src": "6194:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6186:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1822,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6186:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1825,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6186:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
														"id": 1826,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6199:66:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
															"typeString": "int_const 5789...(69 digits omitted)...7168"
														},
														"value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
													},
													"src": "6186:79:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1838,
												"nodeType": "IfStatement",
												"src": "6182:164:11",
												"trueBody": {
													"id": 1837,
													"nodeType": "Block",
													"src": "6267:79:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6297:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6289:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1828,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6289:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6289:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1832,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "6301:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6314:17:11",
																		"memberName": "InvalidSignatureS",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1623,
																		"src": "6301:30:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1624",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"id": 1834,
																		"name": "s",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1812,
																		"src": "6333:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1835,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6288:47:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1821,
															"id": 1836,
															"nodeType": "Return",
															"src": "6281:54:11"
														}
													]
												}
											},
											{
												"assignments": [
													1840
												],
												"declarations": [
													{
														"constant": false,
														"id": 1840,
														"mutability": "mutable",
														"name": "signer",
														"nameLocation": "6448:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1877,
														"src": "6440:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1839,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6440:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1847,
												"initialValue": {
													"arguments": [
														{
															"id": 1842,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "6467:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1843,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "6473:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1844,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "6476:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1845,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1812,
															"src": "6479:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1841,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967290,
														"src": "6457:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6457:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6440:41:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1848,
														"name": "signer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1840,
														"src": "6495:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6513:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6505:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1849,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6505:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6505:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6495:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1867,
												"nodeType": "IfStatement",
												"src": "6491:113:11",
												"trueBody": {
													"id": 1866,
													"nodeType": "Block",
													"src": "6517:87:11",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6547:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6539:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1854,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6539:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6539:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1858,
																			"name": "RecoverError",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "6551:12:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																				"typeString": "type(enum ECDSA.RecoverError)"
																			}
																		},
																		"id": 1859,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "6564:16:11",
																		"memberName": "InvalidSignature",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1621,
																		"src": "6551:29:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_RecoverError_$1624",
																			"typeString": "enum ECDSA.RecoverError"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6590:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1861,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6582:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes32_$",
																				"typeString": "type(bytes32)"
																			},
																			"typeName": {
																				"id": 1860,
																				"name": "bytes32",
																				"nodeType": "ElementaryTypeName",
																				"src": "6582:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6582:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"id": 1864,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6538:55:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
																	"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
																}
															},
															"functionReturnParameters": 1821,
															"id": 1865,
															"nodeType": "Return",
															"src": "6531:62:11"
														}
													]
												}
											},
											{
												"expression": {
													"components": [
														{
															"id": 1868,
															"name": "signer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1840,
															"src": "6622:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1869,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "6630:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6643:7:11",
															"memberName": "NoError",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1620,
															"src": "6630:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6660:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6652:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1871,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6652:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1874,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6652:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"id": 1875,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6621:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"functionReturnParameters": 1821,
												"id": 1876,
												"nodeType": "Return",
												"src": "6614:49:11"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "5010:125:11",
										"text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryRecover",
									"nameLocation": "5149:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "5177:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5169:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1805,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5169:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "5197:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5191:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1807,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5191:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "5216:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5208:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1809,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5208:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "5235:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5227:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1811,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5159:83:11"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5266:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5266:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5275:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1624",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1817,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1816,
														"name": "RecoverError",
														"nameLocations": [
															"5275:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1624,
														"src": "5275:12:11"
													},
													"referencedDeclaration": 1624,
													"src": "5275:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1624",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1878,
												"src": "5289:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5289:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5265:32:11"
									},
									"scope": 1964,
									"src": "5140:1530:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "6897:166:11",
										"statements": [
											{
												"assignments": [
													1893,
													1896,
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1893,
														"mutability": "mutable",
														"name": "recovered",
														"nameLocation": "6916:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1913,
														"src": "6908:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1892,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6908:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1896,
														"mutability": "mutable",
														"name": "error",
														"nameLocation": "6940:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 1913,
														"src": "6927:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1624",
															"typeString": "enum ECDSA.RecoverError"
														},
														"typeName": {
															"id": 1895,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1894,
																"name": "RecoverError",
																"nameLocations": [
																	"6927:12:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1624,
																"src": "6927:12:11"
															},
															"referencedDeclaration": 1624,
															"src": "6927:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "errorArg",
														"nameLocation": "6955:8:11",
														"nodeType": "VariableDeclaration",
														"scope": 1913,
														"src": "6947:16:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1897,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"arguments": [
														{
															"id": 1900,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1881,
															"src": "6978:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1901,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "6984:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1902,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1885,
															"src": "6987:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 1903,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "6990:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1899,
														"name": "tryRecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1690,
															1770,
															1878
														],
														"referencedDeclaration": 1878,
														"src": "6967:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6967:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$1624_$_t_bytes32_$",
														"typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6907:85:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1907,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1896,
															"src": "7014:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														{
															"id": 1908,
															"name": "errorArg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "7021:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1906,
														"name": "_throwError",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "7002:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$1624_$_t_bytes32_$returns$__$",
															"typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7002:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1910,
												"nodeType": "ExpressionStatement",
												"src": "7002:28:11"
											},
											{
												"expression": {
													"id": 1911,
													"name": "recovered",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1893,
													"src": "7047:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1891,
												"id": 1912,
												"nodeType": "Return",
												"src": "7040:16:11"
											}
										]
									},
									"documentation": {
										"id": 1879,
										"nodeType": "StructuredDocumentation",
										"src": "6676:122:11",
										"text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "recover",
									"nameLocation": "6812:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "hash",
												"nameLocation": "6828:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "6820:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1880,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6820:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "6840:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "6834:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1882,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6834:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "6851:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "6843:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1884,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6843:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "6862:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "6854:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1886,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6819:45:11"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "6888:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1889,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6888:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6887:9:11"
									},
									"scope": 1964,
									"src": "6803:260:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1962,
										"nodeType": "Block",
										"src": "7268:460:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_RecoverError_$1624",
														"typeString": "enum ECDSA.RecoverError"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1923,
														"name": "error",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "7282:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1624",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 1924,
															"name": "RecoverError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "7291:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																"typeString": "type(enum ECDSA.RecoverError)"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7304:7:11",
														"memberName": "NoError",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1620,
														"src": "7291:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_RecoverError_$1624",
															"typeString": "enum ECDSA.RecoverError"
														}
													},
													"src": "7282:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_RecoverError_$1624",
															"typeString": "enum ECDSA.RecoverError"
														},
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1929,
															"name": "error",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1918,
															"src": "7378:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1930,
																"name": "RecoverError",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "7387:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																	"typeString": "type(enum ECDSA.RecoverError)"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "7400:16:11",
															"memberName": "InvalidSignature",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1621,
															"src": "7387:29:11",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															}
														},
														"src": "7378:38:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_RecoverError_$1624",
																"typeString": "enum ECDSA.RecoverError"
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1937,
																"name": "error",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "7483:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1624",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1938,
																	"name": "RecoverError",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "7492:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																		"typeString": "type(enum ECDSA.RecoverError)"
																	}
																},
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7505:22:11",
																"memberName": "InvalidSignatureLength",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1622,
																"src": "7492:35:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_RecoverError_$1624",
																	"typeString": "enum ECDSA.RecoverError"
																}
															},
															"src": "7483:44:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_RecoverError_$1624",
																	"typeString": "enum ECDSA.RecoverError"
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1949,
																	"name": "error",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "7617:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1624",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 1950,
																		"name": "RecoverError",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "7626:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_RecoverError_$1624_$",
																			"typeString": "type(enum ECDSA.RecoverError)"
																		}
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "7639:17:11",
																	"memberName": "InvalidSignatureS",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1623,
																	"src": "7626:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_RecoverError_$1624",
																		"typeString": "enum ECDSA.RecoverError"
																	}
																},
																"src": "7617:39:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1958,
															"nodeType": "IfStatement",
															"src": "7613:109:11",
															"trueBody": {
																"id": 1957,
																"nodeType": "Block",
																"src": "7658:64:11",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1954,
																					"name": "errorArg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1920,
																					"src": "7702:8:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 1953,
																				"name": "ECDSAInvalidSignatureS",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1637,
																				"src": "7679:22:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																					"typeString": "function (bytes32) pure"
																				}
																			},
																			"id": 1955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7679:32:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1956,
																		"nodeType": "RevertStatement",
																		"src": "7672:39:11"
																	}
																]
															}
														},
														"id": 1959,
														"nodeType": "IfStatement",
														"src": "7479:243:11",
														"trueBody": {
															"id": 1948,
															"nodeType": "Block",
															"src": "7529:78:11",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1944,
																						"name": "errorArg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1920,
																						"src": "7586:8:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"id": 1943,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "7578:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1942,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "7578:7:11",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "7578:17:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1941,
																			"name": "ECDSAInvalidSignatureLength",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1632,
																			"src": "7550:27:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																				"typeString": "function (uint256) pure"
																			}
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7550:46:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1947,
																	"nodeType": "RevertStatement",
																	"src": "7543:53:11"
																}
															]
														}
													},
													"id": 1960,
													"nodeType": "IfStatement",
													"src": "7374:348:11",
													"trueBody": {
														"id": 1936,
														"nodeType": "Block",
														"src": "7418:55:11",
														"statements": [
															{
																"errorCall": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1933,
																		"name": "ECDSAInvalidSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "7439:21:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7439:23:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1935,
																"nodeType": "RevertStatement",
																"src": "7432:30:11"
															}
														]
													}
												},
												"id": 1961,
												"nodeType": "IfStatement",
												"src": "7278:444:11",
												"trueBody": {
													"id": 1928,
													"nodeType": "Block",
													"src": "7313:55:11",
													"statements": [
														{
															"functionReturnParameters": 1922,
															"id": 1927,
															"nodeType": "Return",
															"src": "7327:7:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "7069:122:11",
										"text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
									},
									"id": 1963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_throwError",
									"nameLocation": "7205:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "error",
												"nameLocation": "7230:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "7217:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_RecoverError_$1624",
													"typeString": "enum ECDSA.RecoverError"
												},
												"typeName": {
													"id": 1917,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1916,
														"name": "RecoverError",
														"nameLocations": [
															"7217:12:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1624,
														"src": "7217:12:11"
													},
													"referencedDeclaration": 1624,
													"src": "7217:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_RecoverError_$1624",
														"typeString": "enum ECDSA.RecoverError"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "errorArg",
												"nameLocation": "7245:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "7237:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1919,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7216:38:11"
									},
									"returnParameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7268:0:11"
									},
									"scope": 1964,
									"src": "7196:532:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1965,
							"src": "344:7386:11",
							"usedErrors": [
								1627,
								1632,
								1637
							],
							"usedEvents": []
						}
					],
					"src": "112:7619:11"
				},
				"id": 11
			},
			"contracts/sis.sol": {
				"ast": {
					"absolutePath": "contracts/sis.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							676
						],
						"ECDSA": [
							1964
						],
						"ERC1967Utils": [
							1165
						],
						"IERC1822Proxiable": [
							862
						],
						"IERC20": [
							1616
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"PausableUpgradeable": [
							852
						],
						"PicWe_StateIdentification": [
							2852
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 2853,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1966,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.1/utils/PausableUpgradeable.sol",
							"id": 1967,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2853,
							"sourceUnit": 853,
							"src": "61:81:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.1/access/OwnableUpgradeable.sol",
							"id": 1968,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2853,
							"sourceUnit": 195,
							"src": "144:81:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/Initializable.sol",
							"id": 1969,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2853,
							"sourceUnit": 449,
							"src": "227:81:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.1/proxy/utils/UUPSUpgradeable.sol",
							"id": 1970,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2853,
							"sourceUnit": 631,
							"src": "310:83:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable@5.0.1/utils/ContextUpgradeable.sol",
							"id": 1971,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2853,
							"sourceUnit": 677,
							"src": "395:80:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts@5.0.1/token/ERC20/IERC20.sol",
							"id": 1972,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2853,
							"sourceUnit": 1617,
							"src": "477:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
							"file": "@openzeppelin/contracts@5.0.1/utils/cryptography/ECDSA.sol",
							"id": 1973,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2853,
							"sourceUnit": 1965,
							"src": "541:68:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1975,
										"name": "Initializable",
										"nameLocations": [
											"772:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "772:13:12"
									},
									"id": 1976,
									"nodeType": "InheritanceSpecifier",
									"src": "772:13:12"
								},
								{
									"baseName": {
										"id": 1977,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"787:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 676,
										"src": "787:18:12"
									},
									"id": 1978,
									"nodeType": "InheritanceSpecifier",
									"src": "787:18:12"
								},
								{
									"baseName": {
										"id": 1979,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"807:19:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 852,
										"src": "807:19:12"
									},
									"id": 1980,
									"nodeType": "InheritanceSpecifier",
									"src": "807:19:12"
								},
								{
									"baseName": {
										"id": 1981,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"828:18:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "828:18:12"
									},
									"id": 1982,
									"nodeType": "InheritanceSpecifier",
									"src": "828:18:12"
								},
								{
									"baseName": {
										"id": 1983,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"848:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "848:15:12"
									},
									"id": 1984,
									"nodeType": "InheritanceSpecifier",
									"src": "848:15:12"
								}
							],
							"canonicalName": "PicWe_StateIdentification",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1974,
								"nodeType": "StructuredDocumentation",
								"src": "613:119:12",
								"text": " @dev PicWe_StateIdentification contract.\n      This contract is used for state identification in PicWe."
							},
							"fullyImplemented": true,
							"id": 2852,
							"linearizedBaseContracts": [
								2852,
								630,
								862,
								194,
								852,
								676,
								448
							],
							"name": "PicWe_StateIdentification",
							"nameLocation": "743:25:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1987,
									"libraryName": {
										"id": 1985,
										"name": "ECDSA",
										"nameLocations": [
											"876:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1964,
										"src": "876:5:12"
									},
									"nodeType": "UsingForDirective",
									"src": "870:24:12",
									"typeName": {
										"id": 1986,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "886:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 1989,
									"mutability": "mutable",
									"name": "admin",
									"nameLocation": "917:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "902:20:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1988,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "902:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2251d3f0",
									"id": 1992,
									"mutability": "mutable",
									"name": "pointToken",
									"nameLocation": "943:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "929:24:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1616",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1991,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1990,
											"name": "IERC20",
											"nameLocations": [
												"929:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1616,
											"src": "929:6:12"
										},
										"referencedDeclaration": 1616,
										"src": "929:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1616",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "27e235e3",
									"id": 1996,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "995:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "960:43:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1995,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1993,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "968:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "960:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1994,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "979:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "feb61724",
									"id": 2000,
									"mutability": "mutable",
									"name": "usedNonces",
									"nameLocation": "1042:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "1010:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 1999,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1997,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "1018:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "1010:24:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1998,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1029:4:12",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d23254b4",
									"id": 2006,
									"mutability": "mutable",
									"name": "votes",
									"nameLocation": "1111:5:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "1059:57:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 2005,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2001,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1067:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1059:44:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2004,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2002,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1086:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1078:24:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2003,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1097:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "56f40aa2",
									"id": 2010,
									"mutability": "mutable",
									"name": "voteWeights",
									"nameLocation": "1159:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "1124:46:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2009,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2007,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1132:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1124:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2008,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1143:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b62e1efc",
									"id": 2014,
									"mutability": "mutable",
									"name": "totalWeights",
									"nameLocation": "1214:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "1179:47:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2013,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2011,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1187:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1179:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2012,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1198:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2018,
									"mutability": "mutable",
									"name": "voteToParticipant",
									"nameLocation": "1271:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "1235:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 2017,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2015,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1243:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1235:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2016,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1254:7:12",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "e207d04d",
									"id": 2020,
									"mutability": "mutable",
									"name": "nextVoteId",
									"nameLocation": "1310:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "1295:25:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2019,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1295:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a10954fe",
									"id": 2022,
									"mutability": "mutable",
									"name": "reserveBalance",
									"nameLocation": "1342:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 2852,
									"src": "1327:29:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1327:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8610d91e9f8a63773d7a3c13aa8bb8407203532a61bb703c06fce895f9622d0d",
									"id": 2028,
									"name": "VoteStarted",
									"nameLocation": "1371:11:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"indexed": false,
												"mutability": "mutable",
												"name": "voteId",
												"nameLocation": "1391:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "1383:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1383:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2026,
												"indexed": true,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1415:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "1399:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1399:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1382:45:12"
									},
									"src": "1365:63:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1abe610cf2bf87e57dcc1181fcf5ac0934e843d8344ab9eed6e86c799f62585e",
									"id": 2036,
									"name": "Voted",
									"nameLocation": "1440:5:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"indexed": false,
												"mutability": "mutable",
												"name": "voteId",
												"nameLocation": "1454:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1446:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1478:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1462:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "1493:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2036,
												"src": "1485:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1445:55:12"
									},
									"src": "1434:67:12"
								},
								{
									"anonymous": false,
									"eventSelector": "7ce7ec0b50378fb6c0186ffb5f48325f6593fcb4ca4386f21861af3129188f5c",
									"id": 2040,
									"name": "AdminChanged",
									"nameLocation": "1513:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "1542:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2040,
												"src": "1526:24:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1525:26:12"
									},
									"src": "1507:45:12"
								},
								{
									"anonymous": false,
									"eventSelector": "af952b0a28349f5ffff2d98aa9050ea845adbe423ff73ac5da5f268834ae3ac0",
									"id": 2046,
									"name": "ChannelOpened",
									"nameLocation": "1564:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2042,
												"indexed": true,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1594:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "1578:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1578:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2044,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1615:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "1607:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1607:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1577:45:12"
									},
									"src": "1558:65:12"
								},
								{
									"anonymous": false,
									"eventSelector": "7200cd3d0176b58ea53053a648b9a9cfb0d0d13a52488e14a16e0037b2241d21",
									"id": 2052,
									"name": "ChannelStateUpdated",
									"nameLocation": "1635:19:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2048,
												"indexed": true,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1671:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "1655:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1655:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2050,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "1692:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "1684:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:49:12"
									},
									"src": "1629:75:12"
								},
								{
									"anonymous": false,
									"eventSelector": "770342ee36990141b5b1f4b3b41a184d7968647ac7f0dbfd2d86d566c468027d",
									"id": 2058,
									"name": "ChannelClosed",
									"nameLocation": "1716:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"indexed": true,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1746:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "1730:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1730:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1767:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "1759:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1729:45:12"
									},
									"src": "1710:65:12"
								},
								{
									"anonymous": false,
									"eventSelector": "93af0759c861f9140be6d1c461033b560dba0e077676ce380708438f5ee23f62",
									"id": 2066,
									"name": "ChannelClosedByDAO",
									"nameLocation": "1787:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"indexed": true,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "1822:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1806:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1806:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1843:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1835:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"indexed": false,
												"mutability": "mutable",
												"name": "voteId",
												"nameLocation": "1859:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2066,
												"src": "1851:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1805:61:12"
									},
									"src": "1781:86:12"
								},
								{
									"anonymous": false,
									"eventSelector": "9071b044465a4e855aabae9828b35d03eff50e0110996249e9bd9add0d117ed7",
									"id": 2074,
									"name": "BalancesBatchUpdatedbyadmin",
									"nameLocation": "1879:27:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"indexed": false,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "1917:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "1907:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2067,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1907:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2068,
													"nodeType": "ArrayTypeName",
													"src": "1907:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2072,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalances",
												"nameLocation": "1941:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "1931:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2070,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1931:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2071,
													"nodeType": "ArrayTypeName",
													"src": "1931:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:47:12"
									},
									"src": "1873:81:12"
								},
								{
									"anonymous": false,
									"eventSelector": "1989b1fe93256bb3b4c6348f76f6f506f926f635cfa802ca3af4826159c5874b",
									"id": 2082,
									"name": "BalancesBatchUpdatedbyuser",
									"nameLocation": "1966:26:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"indexed": false,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "2003:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "1993:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2075,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1993:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2076,
													"nodeType": "ArrayTypeName",
													"src": "1993:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2080,
												"indexed": false,
												"mutability": "mutable",
												"name": "newBalances",
												"nameLocation": "2027:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2082,
												"src": "2017:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2078,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2017:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2079,
													"nodeType": "ArrayTypeName",
													"src": "2017:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1992:47:12"
									},
									"src": "1960:80:12"
								},
								{
									"anonymous": false,
									"eventSelector": "372b1a73ea80de8b8f35b0cf88147a1fbc354f7fb9d1409431199a619acd0c98",
									"id": 2086,
									"name": "DepositedToReserve",
									"nameLocation": "2052:18:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2079:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "2071:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2070:16:12"
									},
									"src": "2046:41:12"
								},
								{
									"anonymous": false,
									"eventSelector": "252f4762677e3c294cdba42d776da4a2c5a1259438ea5224c3bea5b27c8f04dc",
									"id": 2090,
									"name": "WithdrawnFromReserve",
									"nameLocation": "2099:20:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2088,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2128:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2090,
												"src": "2120:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2119:16:12"
									},
									"src": "2093:43:12"
								},
								{
									"body": {
										"id": 2097,
										"nodeType": "Block",
										"src": "2301:41:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2094,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 416,
														"src": "2312:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2096,
												"nodeType": "ExpressionStatement",
												"src": "2312:22:12"
											}
										]
									},
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "2144:137:12",
										"text": " @dev Constructor for PicWe_StateIdentification contract.\n      This is necessary for contract initialization."
									},
									"id": 2098,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2298:2:12"
									},
									"returnParameters": {
										"id": 2093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2301:0:12"
									},
									"scope": 2852,
									"src": "2287:55:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2140,
										"nodeType": "Block",
										"src": "2688:267:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2111,
														"name": "__Context_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 643,
														"src": "2699:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2699:16:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2113,
												"nodeType": "ExpressionStatement",
												"src": "2699:16:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2114,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "2726:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2726:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2116,
												"nodeType": "ExpressionStatement",
												"src": "2726:17:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2118,
															"name": "admin_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2101,
															"src": "2769:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2117,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "2754:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2120,
												"nodeType": "ExpressionStatement",
												"src": "2754:22:12"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2121,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "2787:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2787:24:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2123,
												"nodeType": "ExpressionStatement",
												"src": "2787:24:12"
											},
											{
												"expression": {
													"id": 2126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2124,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "2824:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2125,
														"name": "admin_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2101,
														"src": "2832:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2824:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2127,
												"nodeType": "ExpressionStatement",
												"src": "2824:14:12"
											},
											{
												"expression": {
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2128,
														"name": "pointToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1992,
														"src": "2849:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1616",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2129,
														"name": "pointToken_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "2862:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1616",
															"typeString": "contract IERC20"
														}
													},
													"src": "2849:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1616",
														"typeString": "contract IERC20"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "2849:24:12"
											},
											{
												"expression": {
													"id": 2134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2132,
														"name": "nextVoteId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "2884:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2897:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2884:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2135,
												"nodeType": "ExpressionStatement",
												"src": "2884:14:12"
											},
											{
												"expression": {
													"id": 2138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2136,
														"name": "reserveBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "2909:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2137,
														"name": "initialReserveBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2106,
														"src": "2926:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2909:38:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2139,
												"nodeType": "ExpressionStatement",
												"src": "2909:38:12"
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "2350:226:12",
										"text": " @dev Initialize the contract.\n @param admin_ - The address of the admin\n @param pointToken_ - The address of the point token\n @param initialReserveBalance - The initial reserve balance"
									},
									"functionSelector": "1794bb3c",
									"id": 2141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2109,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2108,
												"name": "initializer",
												"nameLocations": [
													"2676:11:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2676:11:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "2676:11:12"
										}
									],
									"name": "initialize",
									"nameLocation": "2591:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "admin_",
												"nameLocation": "2610:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2602:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2602:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "pointToken_",
												"nameLocation": "2625:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2618:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1616",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "IERC20",
														"nameLocations": [
															"2618:6:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1616,
														"src": "2618:6:12"
													},
													"referencedDeclaration": 1616,
													"src": "2618:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1616",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "initialReserveBalance",
												"nameLocation": "2646:21:12",
												"nodeType": "VariableDeclaration",
												"scope": 2141,
												"src": "2638:29:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2638:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2601:67:12"
									},
									"returnParameters": {
										"id": 2110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2688:0:12"
									},
									"scope": 2852,
									"src": "2582:373:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "3100:27:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2147,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "3111:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3111:8:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "3111:8:12"
											}
										]
									},
									"documentation": {
										"id": 2142,
										"nodeType": "StructuredDocumentation",
										"src": "2963:97:12",
										"text": " @dev Pause the contract.\n      Only the owner can call this function."
									},
									"functionSelector": "8456cb59",
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2145,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2144,
												"name": "onlyOwner",
												"nameLocations": [
													"3090:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3090:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3090:9:12"
										}
									],
									"name": "pause",
									"nameLocation": "3075:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3080:2:12"
									},
									"returnParameters": {
										"id": 2146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3100:0:12"
									},
									"scope": 2852,
									"src": "3066:61:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2160,
										"nodeType": "Block",
										"src": "3276:29:12",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2157,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "3287:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:10:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2159,
												"nodeType": "ExpressionStatement",
												"src": "3287:10:12"
											}
										]
									},
									"documentation": {
										"id": 2152,
										"nodeType": "StructuredDocumentation",
										"src": "3135:99:12",
										"text": " @dev Unpause the contract.\n      Only the owner can call this function."
									},
									"functionSelector": "3f4ba83a",
									"id": 2161,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2154,
												"name": "onlyOwner",
												"nameLocations": [
													"3266:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3266:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3266:9:12"
										}
									],
									"name": "unpause",
									"nameLocation": "3249:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3256:2:12"
									},
									"returnParameters": {
										"id": 2156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3276:0:12"
									},
									"scope": 2852,
									"src": "3240:65:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "3606:2:12",
										"statements": []
									},
									"documentation": {
										"id": 2162,
										"nodeType": "StructuredDocumentation",
										"src": "3313:173:12",
										"text": " @dev Authorize the upgrade.\n      Only the owner can call this function.\n @param newImplementation - The address of the new implementation"
									},
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2167,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2166,
												"name": "onlyOwner",
												"nameLocations": [
													"3573:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3573:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3573:9:12"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "3501:17:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2168,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3592:8:12"
									},
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "3527:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "3519:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3519:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3518:27:12"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3606:0:12"
									},
									"scope": 2852,
									"src": "3492:116:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2203,
										"nodeType": "Block",
										"src": "3851:184:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2184,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "3894:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3894:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2188,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3916:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PicWe_StateIdentification_$2852",
																				"typeString": "contract PicWe_StateIdentification"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PicWe_StateIdentification_$2852",
																				"typeString": "contract PicWe_StateIdentification"
																			}
																		],
																		"id": 2187,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3908:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2186,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3908:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3908:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2190,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "3923:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2182,
																	"name": "pointToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "3870:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1616",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3881:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1615,
																"src": "3870:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2191,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3870:60:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 2192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3932:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 2181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3862:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3862:88:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2194,
												"nodeType": "ExpressionStatement",
												"src": "3862:88:12"
											},
											{
												"expression": {
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2195,
														"name": "reserveBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "3961:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2196,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "3979:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3961:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "3961:24:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2200,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "4020:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2199,
														"name": "DepositedToReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "4001:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4001:26:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2202,
												"nodeType": "EmitStatement",
												"src": "3996:31:12"
											}
										]
									},
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "3620:150:12",
										"text": " @dev Deposit to reserveBalance.\n      Only the admin can call this function.\n @param amount - The amount to deposit"
									},
									"functionSelector": "b17d718e",
									"id": 2204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2177,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2176,
												"name": "onlyAdmin",
												"nameLocations": [
													"3827:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2253,
												"src": "3827:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3827:9:12"
										},
										{
											"id": 2179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2178,
												"name": "whenNotPaused",
												"nameLocations": [
													"3837:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "3837:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "3837:13:12"
										}
									],
									"name": "depositToReserve",
									"nameLocation": "3785:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3810:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2204,
												"src": "3802:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:16:12"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3851:0:12"
									},
									"scope": 2852,
									"src": "3776:259:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2239,
										"nodeType": "Block",
										"src": "4281:243:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2215,
																"name": "reserveBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2022,
																"src": "4300:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2216,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2207,
																"src": "4318:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4300:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420726573657276652062616c616e6365",
															"id": 2218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4326:30:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cdf9e6197a88065780004678deea3b846694aaad5855c66c624a70732fc50f1f",
																"typeString": "literal_string \"Insufficient reserve balance\""
															},
															"value": "Insufficient reserve balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cdf9e6197a88065780004678deea3b846694aaad5855c66c624a70732fc50f1f",
																"typeString": "literal_string \"Insufficient reserve balance\""
															}
														],
														"id": 2214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4292:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4292:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2220,
												"nodeType": "ExpressionStatement",
												"src": "4292:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2224,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "4396:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4396:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2226,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2207,
																	"src": "4410:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2222,
																	"name": "pointToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "4376:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1616",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4387:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1583,
																"src": "4376:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4376:41:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4419:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 2221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4368:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4368:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2230,
												"nodeType": "ExpressionStatement",
												"src": "4368:69:12"
											},
											{
												"expression": {
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2231,
														"name": "reserveBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2022,
														"src": "4448:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2232,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2207,
														"src": "4466:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4448:24:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2234,
												"nodeType": "ExpressionStatement",
												"src": "4448:24:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2236,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2207,
															"src": "4509:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2235,
														"name": "WithdrawnFromReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2090,
														"src": "4488:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4488:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2238,
												"nodeType": "EmitStatement",
												"src": "4483:33:12"
											}
										]
									},
									"documentation": {
										"id": 2205,
										"nodeType": "StructuredDocumentation",
										"src": "4043:154:12",
										"text": " @dev Withdraw from reserveBalance.\n      Only the admin can call this function.\n @param amount - The amount to withdraw"
									},
									"functionSelector": "0a8bcdb9",
									"id": 2240,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2209,
												"name": "onlyAdmin",
												"nameLocations": [
													"4257:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2253,
												"src": "4257:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4257:9:12"
										},
										{
											"id": 2212,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2211,
												"name": "whenNotPaused",
												"nameLocations": [
													"4267:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "4267:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:13:12"
										}
									],
									"name": "withdrawFromReserve",
									"nameLocation": "4212:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2207,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4240:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2240,
												"src": "4232:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4232:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4231:16:12"
									},
									"returnParameters": {
										"id": 2213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4281:0:12"
									},
									"scope": 2852,
									"src": "4203:321:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2252,
										"nodeType": "Block",
										"src": "4641:99:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2244,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "4660:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4660:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2246,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "4676:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4660:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792061646d696e2063616e20706572666f726d207468697320616374696f6e",
															"id": 2248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4683:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
																"typeString": "literal_string \"Only admin can perform this action\""
															},
															"value": "Only admin can perform this action"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd60e0b05a8fda2ba656c4aa2dafb250f5de988439f87c5e504029f988ca599b",
																"typeString": "literal_string \"Only admin can perform this action\""
															}
														],
														"id": 2243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4652:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4652:68:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2250,
												"nodeType": "ExpressionStatement",
												"src": "4652:68:12"
											},
											{
												"id": 2251,
												"nodeType": "PlaceholderStatement",
												"src": "4731:1:12"
											}
										]
									},
									"documentation": {
										"id": 2241,
										"nodeType": "StructuredDocumentation",
										"src": "4533:81:12",
										"text": " @dev Modifier to make a function callable only by the admin."
									},
									"id": 2253,
									"name": "onlyAdmin",
									"nameLocation": "4629:9:12",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4638:2:12"
									},
									"src": "4620:120:12",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2281,
										"nodeType": "Block",
										"src": "4976:159:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2264,
																"name": "newAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2256,
																"src": "4995:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5015:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5007:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2265,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5007:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5007:10:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4995:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65772061646d696e20616464726573732063616e6e6f74206265207a65726f2061646472657373",
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5019:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e1444ea02ac7bea8c9a5338acf01dba24983a5f35c670a40db58e1ba7f985f65",
																"typeString": "literal_string \"New admin address cannot be zero address\""
															},
															"value": "New admin address cannot be zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e1444ea02ac7bea8c9a5338acf01dba24983a5f35c670a40db58e1ba7f985f65",
																"typeString": "literal_string \"New admin address cannot be zero address\""
															}
														],
														"id": 2263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4987:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4987:75:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2272,
												"nodeType": "ExpressionStatement",
												"src": "4987:75:12"
											},
											{
												"expression": {
													"id": 2275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2273,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1989,
														"src": "5073:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2274,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "5081:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2276,
												"nodeType": "ExpressionStatement",
												"src": "5073:16:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2278,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2256,
															"src": "5118:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2277,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2040,
														"src": "5105:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5105:22:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2280,
												"nodeType": "EmitStatement",
												"src": "5100:27:12"
											}
										]
									},
									"documentation": {
										"id": 2254,
										"nodeType": "StructuredDocumentation",
										"src": "4748:150:12",
										"text": " @dev Change the admin.\n      Only the owner can call this function.\n @param newAdmin - The address of the new admin"
									},
									"functionSelector": "8f283970",
									"id": 2282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2258,
												"name": "onlyOwner",
												"nameLocations": [
													"4952:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "4952:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4952:9:12"
										},
										{
											"id": 2261,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2260,
												"name": "whenNotPaused",
												"nameLocations": [
													"4962:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "4962:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "4962:13:12"
										}
									],
									"name": "changeAdmin",
									"nameLocation": "4913:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2256,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4933:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "4925:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4925:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4924:18:12"
									},
									"returnParameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4976:0:12"
									},
									"scope": 2852,
									"src": "4904:231:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2317,
										"nodeType": "Block",
										"src": "5310:201:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2293,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "5353:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5353:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2297,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5375:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_PicWe_StateIdentification_$2852",
																				"typeString": "contract PicWe_StateIdentification"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_PicWe_StateIdentification_$2852",
																				"typeString": "contract PicWe_StateIdentification"
																			}
																		],
																		"id": 2296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5367:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2295,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5367:7:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5367:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2299,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2285,
																	"src": "5382:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2291,
																	"name": "pointToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "5329:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1616",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5340:12:12",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1615,
																"src": "5329:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5329:60:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5391:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 2290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5321:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5321:88:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2303,
												"nodeType": "ExpressionStatement",
												"src": "5321:88:12"
											},
											{
												"expression": {
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2304,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "5420:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2307,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2305,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "5429:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5429:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5420:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2308,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2285,
														"src": "5446:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5420:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "5420:32:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2312,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "5482:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5482:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2314,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2285,
															"src": "5496:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2311,
														"name": "ChannelOpened",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2046,
														"src": "5468:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2316,
												"nodeType": "EmitStatement",
												"src": "5463:40:12"
											}
										]
									},
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "5143:101:12",
										"text": " @dev Open a channel.\n @param amount - The amount to open the channel with"
									},
									"functionSelector": "fd85b1a7",
									"id": 2318,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2288,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2287,
												"name": "whenNotPaused",
												"nameLocations": [
													"5296:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "5296:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5296:13:12"
										}
									],
									"name": "openChannel",
									"nameLocation": "5259:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5279:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2318,
												"src": "5271:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5271:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5270:16:12"
									},
									"returnParameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5310:0:12"
									},
									"scope": 2852,
									"src": "5250:261:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2383,
										"nodeType": "Block",
										"src": "5784:520:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2326,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "5799:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2328,
														"indexExpression": {
															"id": 2327,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2321,
															"src": "5808:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5799:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2329,
														"name": "newBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2323,
														"src": "5823:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5799:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"baseExpression": {
																"id": 2357,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1996,
																"src": "6098:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 2359,
															"indexExpression": {
																"id": 2358,
																"name": "participant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2321,
																"src": "6107:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6098:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2360,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2323,
															"src": "6122:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6098:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2381,
													"nodeType": "IfStatement",
													"src": "6094:203:12",
													"trueBody": {
														"id": 2380,
														"nodeType": "Block",
														"src": "6134:163:12",
														"statements": [
															{
																"assignments": [
																	2363
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2363,
																		"mutability": "mutable",
																		"name": "excess",
																		"nameLocation": "6157:6:12",
																		"nodeType": "VariableDeclaration",
																		"scope": 2380,
																		"src": "6149:14:12",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2362,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6149:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2369,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 2364,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "6166:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2366,
																		"indexExpression": {
																			"id": 2365,
																			"name": "participant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2321,
																			"src": "6175:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6166:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2367,
																		"name": "newBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2323,
																		"src": "6190:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6166:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6149:51:12"
															},
															{
																"expression": {
																	"id": 2372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2370,
																		"name": "reserveBalance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2022,
																		"src": "6215:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 2371,
																		"name": "excess",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "6233:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6215:24:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2373,
																"nodeType": "ExpressionStatement",
																"src": "6215:24:12"
															},
															{
																"expression": {
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 2374,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "6254:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 2376,
																		"indexExpression": {
																			"id": 2375,
																			"name": "participant",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2321,
																			"src": "6263:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "6254:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "-=",
																	"rightHandSide": {
																		"id": 2377,
																		"name": "excess",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2363,
																		"src": "6279:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6254:31:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2379,
																"nodeType": "ExpressionStatement",
																"src": "6254:31:12"
															}
														]
													}
												},
												"id": 2382,
												"nodeType": "IfStatement",
												"src": "5795:502:12",
												"trueBody": {
													"id": 2356,
													"nodeType": "Block",
													"src": "5835:253:12",
													"statements": [
														{
															"assignments": [
																2332
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2332,
																	"mutability": "mutable",
																	"name": "shortfall",
																	"nameLocation": "5858:9:12",
																	"nodeType": "VariableDeclaration",
																	"scope": 2356,
																	"src": "5850:17:12",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2331,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5850:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2338,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2333,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2323,
																	"src": "5870:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"baseExpression": {
																		"id": 2334,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "5883:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2336,
																	"indexExpression": {
																		"id": 2335,
																		"name": "participant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "5892:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5883:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5870:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5850:54:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2340,
																			"name": "reserveBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2022,
																			"src": "5927:14:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2341,
																			"name": "shortfall",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2332,
																			"src": "5945:9:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5927:27:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820726573657276652062616c616e6365",
																		"id": 2343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5956:28:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_dc387dc8a8bac95ec07bd7e65ff92ab7538d5bf2063a4a9ea89449f96be68218",
																			"typeString": "literal_string \"Not enough reserve balance\""
																		},
																		"value": "Not enough reserve balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_dc387dc8a8bac95ec07bd7e65ff92ab7538d5bf2063a4a9ea89449f96be68218",
																			"typeString": "literal_string \"Not enough reserve balance\""
																		}
																	],
																	"id": 2339,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5919:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5919:66:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2345,
															"nodeType": "ExpressionStatement",
															"src": "5919:66:12"
														},
														{
															"expression": {
																"id": 2348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2346,
																	"name": "reserveBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2022,
																	"src": "6000:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 2347,
																	"name": "shortfall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "6018:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6000:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2349,
															"nodeType": "ExpressionStatement",
															"src": "6000:27:12"
														},
														{
															"expression": {
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2350,
																		"name": "balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1996,
																		"src": "6042:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 2352,
																	"indexExpression": {
																		"id": 2351,
																		"name": "participant",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2321,
																		"src": "6051:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6042:21:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2353,
																	"name": "shortfall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2332,
																	"src": "6067:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6042:34:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2355,
															"nodeType": "ExpressionStatement",
															"src": "6042:34:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2319,
										"nodeType": "StructuredDocumentation",
										"src": "5519:185:12",
										"text": " @dev Update the balance of a participant.\n @param participant - The address of the participant\n @param newBalance - The new balance of the participant"
									},
									"id": 2384,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateBalance",
									"nameLocation": "5719:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2321,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "5742:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "5734:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5734:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "5763:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2384,
												"src": "5755:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5755:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5733:41:12"
									},
									"returnParameters": {
										"id": 2325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5784:0:12"
									},
									"scope": 2852,
									"src": "5710:594:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "6744:266:12",
										"statements": [
											{
												"assignments": [
													2399
												],
												"declarations": [
													{
														"constant": false,
														"id": 2399,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "6763:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2433,
														"src": "6755:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2398,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6755:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2408,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2403,
																	"name": "participants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2388,
																	"src": "6797:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																{
																	"id": 2404,
																	"name": "newBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2391,
																	"src": "6811:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																{
																	"id": 2405,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "6824:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	},
																	{
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2401,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "6780:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "6784:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "6780:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:50:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2400,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "6770:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6770:61:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6755:76:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2410,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "6850:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2413,
																		"name": "adminSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2395,
																		"src": "6872:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"id": 2411,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2399,
																		"src": "6859:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6864:7:12",
																	"memberName": "recover",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1720,
																	"src": "6859:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes memory) pure returns (address)"
																	}
																},
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6859:28:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6850:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6889:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 2409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6842:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6842:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2418,
												"nodeType": "ExpressionStatement",
												"src": "6842:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6928:17:12",
															"subExpression": {
																"baseExpression": {
																	"id": 2420,
																	"name": "usedNonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "6929:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 2422,
																"indexExpression": {
																	"id": 2421,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2399,
																	"src": "6940:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6929:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f6e636520616c72656164792075736564",
															"id": 2424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6947:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28",
																"typeString": "literal_string \"Nonce already used\""
															},
															"value": "Nonce already used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28",
																"typeString": "literal_string \"Nonce already used\""
															}
														],
														"id": 2419,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6920:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6920:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "6920:48:12"
											},
											{
												"expression": {
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2427,
															"name": "usedNonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "6979:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 2429,
														"indexExpression": {
															"id": 2428,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2399,
															"src": "6990:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6979:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6998:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6979:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "6979:23:12"
											}
										]
									},
									"documentation": {
										"id": 2385,
										"nodeType": "StructuredDocumentation",
										"src": "6312:275:12",
										"text": " @dev Verify the batch signature.\n @param participants - The addresses of the participants\n @param newBalances - The new balances of the participants\n @param nonce - The nonce\n @param adminSignature - The signature of the admin"
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyBatchSignature",
									"nameLocation": "6602:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2388,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "6643:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "6624:31:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2386,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6624:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2387,
													"nodeType": "ArrayTypeName",
													"src": "6624:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2391,
												"mutability": "mutable",
												"name": "newBalances",
												"nameLocation": "6676:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "6657:30:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2389,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6657:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2390,
													"nodeType": "ArrayTypeName",
													"src": "6657:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2393,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "6697:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "6689:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6689:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "adminSignature",
												"nameLocation": "6719:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "6704:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2394,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:111:12"
									},
									"returnParameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6744:0:12"
									},
									"scope": 2852,
									"src": "6593:417:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2481,
										"nodeType": "Block",
										"src": "7408:264:12",
										"statements": [
											{
												"assignments": [
													2447
												],
												"declarations": [
													{
														"constant": false,
														"id": 2447,
														"mutability": "mutable",
														"name": "hash",
														"nameLocation": "7427:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 2481,
														"src": "7419:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 2446,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7419:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2456,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2451,
																	"name": "participant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2437,
																	"src": "7461:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2452,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2439,
																	"src": "7474:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2453,
																	"name": "nonce",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2441,
																	"src": "7486:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2449,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7444:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7448:12:12",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "7444:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7444:48:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2448,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7434:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7434:59:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7419:74:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2458,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1989,
																"src": "7512:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2461,
																		"name": "adminSignature",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2443,
																		"src": "7534:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"id": 2459,
																		"name": "hash",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2447,
																		"src": "7521:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"id": 2460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7526:7:12",
																	"memberName": "recover",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1720,
																	"src": "7521:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$attached_to$_t_bytes32_$",
																		"typeString": "function (bytes32,bytes memory) pure returns (address)"
																	}
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7521:28:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7512:37:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207369676e6174757265",
															"id": 2464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7551:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															},
															"value": "Invalid signature"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
																"typeString": "literal_string \"Invalid signature\""
															}
														],
														"id": 2457,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7504:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7504:67:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2466,
												"nodeType": "ExpressionStatement",
												"src": "7504:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7590:17:12",
															"subExpression": {
																"baseExpression": {
																	"id": 2468,
																	"name": "usedNonces",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2000,
																	"src": "7591:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 2470,
																"indexExpression": {
																	"id": 2469,
																	"name": "hash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2447,
																	"src": "7602:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7591:16:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f6e636520616c72656164792075736564",
															"id": 2472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7609:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28",
																"typeString": "literal_string \"Nonce already used\""
															},
															"value": "Nonce already used"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_923b8cbbcee77e95e0614b96c81a4cbd157e2cc78e2937caa0bed8e1c5641a28",
																"typeString": "literal_string \"Nonce already used\""
															}
														],
														"id": 2467,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7582:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7582:48:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2474,
												"nodeType": "ExpressionStatement",
												"src": "7582:48:12"
											},
											{
												"expression": {
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2475,
															"name": "usedNonces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2000,
															"src": "7641:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 2477,
														"indexExpression": {
															"id": 2476,
															"name": "hash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2447,
															"src": "7652:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7641:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2478,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7660:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7641:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2480,
												"nodeType": "ExpressionStatement",
												"src": "7641:23:12"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "7018:262:12",
										"text": " @dev Verify the signature.\n @param participant - The address of the participant\n @param newBalance - The new balance of the participant\n @param nonce - The nonce\n @param adminSignature - The signature of the admin"
									},
									"id": 2482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifySignature",
									"nameLocation": "7295:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "7320:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "7312:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7312:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "7341:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "7333:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7333:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "nonce",
												"nameLocation": "7361:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "7353:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7353:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "adminSignature",
												"nameLocation": "7383:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2482,
												"src": "7368:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7368:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7311:87:12"
									},
									"returnParameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7408:0:12"
									},
									"scope": 2852,
									"src": "7286:386:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2514,
										"nodeType": "Block",
										"src": "8036:208:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2495,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "8064:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8064:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2497,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "8078:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2498,
															"name": "channel_nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2487,
															"src": "8090:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2499,
															"name": "adminSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "8105:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2494,
														"name": "_verifySignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2482,
														"src": "8047:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes calldata)"
														}
													},
													"id": 2500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8047:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2501,
												"nodeType": "ExpressionStatement",
												"src": "8047:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2503,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "8148:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8148:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2505,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "8162:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2502,
														"name": "_updateBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "8133:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8133:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2507,
												"nodeType": "ExpressionStatement",
												"src": "8133:40:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2509,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "8211:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8211:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2511,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2485,
															"src": "8225:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2508,
														"name": "ChannelStateUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2052,
														"src": "8191:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8191:45:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2513,
												"nodeType": "EmitStatement",
												"src": "8186:50:12"
											}
										]
									},
									"documentation": {
										"id": 2483,
										"nodeType": "StructuredDocumentation",
										"src": "7680:225:12",
										"text": " @dev Update the channel state.\n @param newBalance - The new balance of the channel\n @param channel_nonce - The nonce of the channel\n @param adminSignature - The signature of the admin"
									},
									"functionSelector": "68f25734",
									"id": 2515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2492,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2491,
												"name": "whenNotPaused",
												"nameLocations": [
													"8022:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "8022:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8022:13:12"
										}
									],
									"name": "updateChannelState",
									"nameLocation": "7920:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "7947:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "7939:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7939:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2487,
												"mutability": "mutable",
												"name": "channel_nonce",
												"nameLocation": "7967:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "7959:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7959:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "adminSignature",
												"nameLocation": "7997:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2515,
												"src": "7982:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7982:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7938:74:12"
									},
									"returnParameters": {
										"id": 2493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8036:0:12"
									},
									"scope": 2852,
									"src": "7911:333:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "8707:409:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2532,
																	"name": "participants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2519,
																	"src": "8726:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8739:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8726:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2534,
																	"name": "newBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2522,
																	"src": "8749:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8761:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8749:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8726:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061727469636970616e747320616e64206e657742616c616e636573206c656e677468206d757374206d61746368",
															"id": 2537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8769:48:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3b475f01e907c8525284c2d962568bfcaa3133ce2261739c842efe49e2028bae",
																"typeString": "literal_string \"Participants and newBalances length must match\""
															},
															"value": "Participants and newBalances length must match"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3b475f01e907c8525284c2d962568bfcaa3133ce2261739c842efe49e2028bae",
																"typeString": "literal_string \"Participants and newBalances length must match\""
															}
														],
														"id": 2531,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8718:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8718:100:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2539,
												"nodeType": "ExpressionStatement",
												"src": "8718:100:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2541,
															"name": "participants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "8851:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 2542,
															"name": "newBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "8865:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														{
															"id": 2543,
															"name": "close_nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2524,
															"src": "8878:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2544,
															"name": "adminSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2526,
															"src": "8891:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2540,
														"name": "_verifyBatchSignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "8829:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_address_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (address[] calldata,uint256[] calldata,uint256,bytes calldata)"
														}
													},
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8829:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2546,
												"nodeType": "ExpressionStatement",
												"src": "8829:77:12"
											},
											{
												"body": {
													"id": 2567,
													"nodeType": "Block",
													"src": "8966:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2559,
																			"name": "participants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2519,
																			"src": "8996:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 2561,
																		"indexExpression": {
																			"id": 2560,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2548,
																			"src": "9009:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "8996:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2562,
																			"name": "newBalances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2522,
																			"src": "9013:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 2564,
																		"indexExpression": {
																			"id": 2563,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2548,
																			"src": "9025:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "9013:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2558,
																	"name": "_updateBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "8981:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8981:47:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2566,
															"nodeType": "ExpressionStatement",
															"src": "8981:47:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2551,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2548,
														"src": "8936:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2552,
															"name": "participants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "8940:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8953:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8940:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8936:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"initializationExpression": {
													"assignments": [
														2548
													],
													"declarations": [
														{
															"constant": false,
															"id": 2548,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8929:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2568,
															"src": "8924:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2547,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "8924:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2550,
													"initialValue": {
														"hexValue": "30",
														"id": 2549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8933:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8924:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8961:3:12",
														"subExpression": {
															"id": 2555,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2548,
															"src": "8961:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2557,
													"nodeType": "ExpressionStatement",
													"src": "8961:3:12"
												},
												"nodeType": "ForStatement",
												"src": "8919:121:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2570,
															"name": "participants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "9082:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 2571,
															"name": "newBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "9096:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2569,
														"name": "BalancesBatchUpdatedbyuser",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2082,
														"src": "9055:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,uint256[] memory)"
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9055:53:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2573,
												"nodeType": "EmitStatement",
												"src": "9050:58:12"
											}
										]
									},
									"documentation": {
										"id": 2516,
										"nodeType": "StructuredDocumentation",
										"src": "8256:276:12",
										"text": " @dev Batch update balances.\n @param participants - The addresses of the participants\n @param newBalances - The new balances of the participants\n @param close_nonce - The nonce\n @param adminSignature - The signature of the admin"
									},
									"functionSelector": "1145a4ff",
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2529,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2528,
												"name": "whenNotPaused",
												"nameLocations": [
													"8693:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "8693:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8693:13:12"
										}
									],
									"name": "batchUpdateBalances",
									"nameLocation": "8547:19:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "8586:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "8567:31:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2517,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "8567:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2518,
													"nodeType": "ArrayTypeName",
													"src": "8567:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "newBalances",
												"nameLocation": "8619:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "8600:30:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2520,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "8600:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2521,
													"nodeType": "ArrayTypeName",
													"src": "8600:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "close_nonce",
												"nameLocation": "8640:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "8632:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8632:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2526,
												"mutability": "mutable",
												"name": "adminSignature",
												"nameLocation": "8668:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "8653:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8653:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8566:117:12"
									},
									"returnParameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8707:0:12"
									},
									"scope": 2852,
									"src": "8538:578:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2624,
										"nodeType": "Block",
										"src": "9450:325:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2588,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "9478:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9478:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2590,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "9492:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2591,
															"name": "close_nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "9504:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2592,
															"name": "adminSignature",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2582,
															"src": "9517:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 2587,
														"name": "_verifySignature",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2482,
														"src": "9461:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes calldata)"
														}
													},
													"id": 2593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9461:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2594,
												"nodeType": "ExpressionStatement",
												"src": "9461:71:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2596,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "9560:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9560:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2598,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "9574:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2595,
														"name": "_updateBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "9545:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9545:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2600,
												"nodeType": "ExpressionStatement",
												"src": "9545:40:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2604,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "9626:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9626:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2606,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2578,
																	"src": "9640:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2602,
																	"name": "pointToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "9606:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1616",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9617:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1583,
																"src": "9606:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9606:45:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9653:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 2601,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9598:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9598:73:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2610,
												"nodeType": "ExpressionStatement",
												"src": "9598:73:12"
											},
											{
												"expression": {
													"id": 2616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2611,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "9684:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2614,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2612,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "9693:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9693:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9684:22:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9709:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9684:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2617,
												"nodeType": "ExpressionStatement",
												"src": "9684:26:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2619,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "9742:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9742:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2621,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "9756:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2618,
														"name": "ChannelClosed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2058,
														"src": "9728:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9728:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2623,
												"nodeType": "EmitStatement",
												"src": "9723:44:12"
											}
										]
									},
									"documentation": {
										"id": 2576,
										"nodeType": "StructuredDocumentation",
										"src": "9128:199:12",
										"text": " @dev Close a channel.\n @param newBalance - The new balance of the channel\n @param close_nonce - The nonce\n @param adminSignature - The signature of the admin"
									},
									"functionSelector": "eecbbb72",
									"id": 2625,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2585,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2584,
												"name": "whenNotPaused",
												"nameLocations": [
													"9436:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "9436:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9436:13:12"
										}
									],
									"name": "closeChannel",
									"nameLocation": "9342:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "9363:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "9355:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9355:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "close_nonce",
												"nameLocation": "9383:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "9375:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9375:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "adminSignature",
												"nameLocation": "9411:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 2625,
												"src": "9396:29:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9396:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9354:72:12"
									},
									"returnParameters": {
										"id": 2586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9450:0:12"
									},
									"scope": 2852,
									"src": "9333:442:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2688,
										"nodeType": "Block",
										"src": "9983:370:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2636,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "10002:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2639,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2637,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "10011:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10011:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10002:22:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10027:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10002:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2062616c616e636520746f20766f7465",
															"id": 2642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10030:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5509bdfbe4e3f1d17f2a454d6154d7d42696933e08c3c25f4cc9185a4540710",
																"typeString": "literal_string \"No balance to vote\""
															},
															"value": "No balance to vote"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5509bdfbe4e3f1d17f2a454d6154d7d42696933e08c3c25f4cc9185a4540710",
																"typeString": "literal_string \"No balance to vote\""
															}
														],
														"id": 2635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9994:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9994:57:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2644,
												"nodeType": "ExpressionStatement",
												"src": "9994:57:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2652,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10070:28:12",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2646,
																		"name": "votes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2006,
																		"src": "10071:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 2648,
																	"indexExpression": {
																		"id": 2647,
																		"name": "voteId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "10077:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10071:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2651,
																"indexExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2649,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 658,
																		"src": "10085:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10085:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10071:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f746564",
															"id": 2653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10100:15:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															},
															"value": "Already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															}
														],
														"id": 2645,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10062:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10062:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2655,
												"nodeType": "ExpressionStatement",
												"src": "10062:54:12"
											},
											{
												"expression": {
													"id": 2663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2656,
																"name": "votes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2006,
																"src": "10129:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2660,
															"indexExpression": {
																"id": 2657,
																"name": "voteId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2628,
																"src": "10135:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10129:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2661,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2658,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "10143:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10143:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10129:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10159:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "10129:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2664,
												"nodeType": "ExpressionStatement",
												"src": "10129:34:12"
											},
											{
												"assignments": [
													2666
												],
												"declarations": [
													{
														"constant": false,
														"id": 2666,
														"mutability": "mutable",
														"name": "weight",
														"nameLocation": "10182:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2688,
														"src": "10174:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2665,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10174:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2671,
												"initialValue": {
													"baseExpression": {
														"id": 2667,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1996,
														"src": "10191:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 2670,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2668,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "10200:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10200:12:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10191:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10174:39:12"
											},
											{
												"condition": {
													"id": 2672,
													"name": "approve",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2630,
													"src": "10228:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2680,
												"nodeType": "IfStatement",
												"src": "10224:69:12",
												"trueBody": {
													"id": 2679,
													"nodeType": "Block",
													"src": "10237:56:12",
													"statements": [
														{
															"expression": {
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2673,
																		"name": "voteWeights",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "10252:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2675,
																	"indexExpression": {
																		"id": 2674,
																		"name": "voteId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2628,
																		"src": "10264:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "10252:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2676,
																	"name": "weight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2666,
																	"src": "10275:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10252:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2678,
															"nodeType": "ExpressionStatement",
															"src": "10252:29:12"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2682,
															"name": "voteId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2628,
															"src": "10316:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2683,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "10324:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 2684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10324:12:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2685,
															"name": "weight",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "10338:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2681,
														"name": "Voted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "10310:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 2686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10310:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2687,
												"nodeType": "EmitStatement",
												"src": "10305:40:12"
											}
										]
									},
									"documentation": {
										"id": 2626,
										"nodeType": "StructuredDocumentation",
										"src": "9783:127:12",
										"text": " @dev Vote.\n @param voteId - The ID of the vote\n @param approve - Whether to approve the vote"
									},
									"functionSelector": "c9d27afe",
									"id": 2689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2633,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2632,
												"name": "whenNotPaused",
												"nameLocations": [
													"9969:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "9969:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "9969:13:12"
										}
									],
									"name": "vote",
									"nameLocation": "9925:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2628,
												"mutability": "mutable",
												"name": "voteId",
												"nameLocation": "9938:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "9930:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9930:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2630,
												"mutability": "mutable",
												"name": "approve",
												"nameLocation": "9951:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2689,
												"src": "9946:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9946:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9929:30:12"
									},
									"returnParameters": {
										"id": 2634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9983:0:12"
									},
									"scope": 2852,
									"src": "9916:437:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2736,
										"nodeType": "Block",
										"src": "10572:321:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2700,
																	"name": "balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1996,
																	"src": "10591:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2702,
																"indexExpression": {
																	"id": 2701,
																	"name": "participant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2692,
																	"src": "10600:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10591:21:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10615:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10591:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2062616c616e636520746f2064697370757465",
															"id": 2705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10618:23:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a8f561be9ca21da69ebbb77e3440ef8a669abee74649c7cad3f33822531bfca",
																"typeString": "literal_string \"No balance to dispute\""
															},
															"value": "No balance to dispute"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a8f561be9ca21da69ebbb77e3440ef8a669abee74649c7cad3f33822531bfca",
																"typeString": "literal_string \"No balance to dispute\""
															}
														],
														"id": 2699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10583:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10583:59:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2707,
												"nodeType": "ExpressionStatement",
												"src": "10583:59:12"
											},
											{
												"assignments": [
													2709
												],
												"declarations": [
													{
														"constant": false,
														"id": 2709,
														"mutability": "mutable",
														"name": "voteId",
														"nameLocation": "10663:6:12",
														"nodeType": "VariableDeclaration",
														"scope": 2736,
														"src": "10655:14:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2708,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10655:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2712,
												"initialValue": {
													"id": 2711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "10672:12:12",
													"subExpression": {
														"id": 2710,
														"name": "nextVoteId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "10672:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10655:29:12"
											},
											{
												"expression": {
													"id": 2723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2713,
															"name": "totalWeights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2014,
															"src": "10695:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2715,
														"indexExpression": {
															"id": 2714,
															"name": "voteId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "10708:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10695:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 2720,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "10747:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_PicWe_StateIdentification_$2852",
																			"typeString": "contract PicWe_StateIdentification"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_PicWe_StateIdentification_$2852",
																			"typeString": "contract PicWe_StateIdentification"
																		}
																	],
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10739:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2718,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10739:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 2721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10739:13:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 2716,
																"name": "pointToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "10718:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1616",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10729:9:12",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1573,
															"src": "10718:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 2722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10718:35:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10695:58:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2724,
												"nodeType": "ExpressionStatement",
												"src": "10695:58:12"
											},
											{
												"expression": {
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2725,
															"name": "voteToParticipant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "10764:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 2727,
														"indexExpression": {
															"id": 2726,
															"name": "voteId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "10782:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10764:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2728,
														"name": "participant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2692,
														"src": "10792:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10764:39:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2730,
												"nodeType": "ExpressionStatement",
												"src": "10764:39:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2732,
															"name": "voteId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2709,
															"src": "10865:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2733,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2692,
															"src": "10873:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2731,
														"name": "VoteStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2028,
														"src": "10853:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 2734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10853:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2735,
												"nodeType": "EmitStatement",
												"src": "10848:37:12"
											}
										]
									},
									"documentation": {
										"id": 2690,
										"nodeType": "StructuredDocumentation",
										"src": "10361:118:12",
										"text": " @dev Start a vote to close a channel.\n @param participant - The address of the participant"
									},
									"functionSelector": "14068e94",
									"id": 2737,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2695,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2694,
												"name": "onlyAdmin",
												"nameLocations": [
													"10548:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2253,
												"src": "10548:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10548:9:12"
										},
										{
											"id": 2697,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2696,
												"name": "whenNotPaused",
												"nameLocations": [
													"10558:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "10558:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "10558:13:12"
										}
									],
									"name": "startVoteToCloseChannel",
									"nameLocation": "10494:23:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2692,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "10526:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2737,
												"src": "10518:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10518:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10517:21:12"
									},
									"returnParameters": {
										"id": 2698,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10572:0:12"
									},
									"scope": 2852,
									"src": "10485:408:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2799,
										"nodeType": "Block",
										"src": "11241:492:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2752,
																		"name": "voteWeights",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2010,
																		"src": "11260:11:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 2754,
																	"indexExpression": {
																		"id": 2753,
																		"name": "voteId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2744,
																		"src": "11272:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "11260:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11282:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11260:23:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"baseExpression": {
																	"id": 2757,
																	"name": "totalWeights",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2014,
																	"src": "11287:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 2759,
																"indexExpression": {
																	"id": 2758,
																	"name": "voteId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "11300:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11287:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11260:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820766f74657320746f20636c6f7365206368616e6e656c",
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11309:35:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43cf30ad8871b8fdb545799d22ae3c145590332663f589142a539e605733a294",
																"typeString": "literal_string \"Not enough votes to close channel\""
															},
															"value": "Not enough votes to close channel"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43cf30ad8871b8fdb545799d22ae3c145590332663f589142a539e605733a294",
																"typeString": "literal_string \"Not enough votes to close channel\""
															}
														],
														"id": 2751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11252:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11252:93:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2763,
												"nodeType": "ExpressionStatement",
												"src": "11252:93:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2765,
																	"name": "voteToParticipant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "11364:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 2767,
																"indexExpression": {
																	"id": 2766,
																	"name": "voteId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2744,
																	"src": "11382:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11364:25:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2768,
																"name": "participant",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2740,
																"src": "11393:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11364:40:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f746520494420646f6573206e6f74206d61746368207061727469636970616e74",
															"id": 2770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11406:36:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01b7243a7d5ac4926aa4b8edd925f323ef46b29f8435a6cb760a9a29dbd3c7a7",
																"typeString": "literal_string \"Vote ID does not match participant\""
															},
															"value": "Vote ID does not match participant"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01b7243a7d5ac4926aa4b8edd925f323ef46b29f8435a6cb760a9a29dbd3c7a7",
																"typeString": "literal_string \"Vote ID does not match participant\""
															}
														],
														"id": 2764,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11356:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11356:87:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2772,
												"nodeType": "ExpressionStatement",
												"src": "11356:87:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2774,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "11513:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2775,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "11526:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2773,
														"name": "_updateBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2384,
														"src": "11498:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11498:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2777,
												"nodeType": "ExpressionStatement",
												"src": "11498:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2781,
																	"name": "participant",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2740,
																	"src": "11576:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2782,
																	"name": "newBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2742,
																	"src": "11589:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2779,
																	"name": "pointToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1992,
																	"src": "11556:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1616",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 2780,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11567:8:12",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1583,
																"src": "11556:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11556:44:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 2784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11602:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 2778,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11548:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11548:72:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2786,
												"nodeType": "ExpressionStatement",
												"src": "11548:72:12"
											},
											{
												"expression": {
													"id": 2791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2787,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "11631:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2789,
														"indexExpression": {
															"id": 2788,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "11640:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11631:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2790,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11655:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11631:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2792,
												"nodeType": "ExpressionStatement",
												"src": "11631:25:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2794,
															"name": "participant",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2740,
															"src": "11693:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2795,
															"name": "newBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2742,
															"src": "11706:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2796,
															"name": "voteId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2744,
															"src": "11718:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2793,
														"name": "ChannelClosedByDAO",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2066,
														"src": "11674:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11674:51:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2798,
												"nodeType": "EmitStatement",
												"src": "11669:56:12"
											}
										]
									},
									"documentation": {
										"id": 2738,
										"nodeType": "StructuredDocumentation",
										"src": "10903:215:12",
										"text": " @dev Close a channel by DAO.\n @param participant - The address of the participant\n @param newBalance - The new balance of the participant\n @param voteId - The ID of the vote"
									},
									"functionSelector": "6e631a4d",
									"id": 2800,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2747,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2746,
												"name": "onlyAdmin",
												"nameLocations": [
													"11217:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2253,
												"src": "11217:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "11217:9:12"
										},
										{
											"id": 2749,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2748,
												"name": "whenNotPaused",
												"nameLocations": [
													"11227:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "11227:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "11227:13:12"
										}
									],
									"name": "closeChannelByDAO",
									"nameLocation": "11133:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2745,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2740,
												"mutability": "mutable",
												"name": "participant",
												"nameLocation": "11159:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "11151:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11151:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2742,
												"mutability": "mutable",
												"name": "newBalance",
												"nameLocation": "11180:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "11172:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11172:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2744,
												"mutability": "mutable",
												"name": "voteId",
												"nameLocation": "11200:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2800,
												"src": "11192:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11192:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11150:57:12"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11241:0:12"
									},
									"scope": 2852,
									"src": "11124:609:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2850,
										"nodeType": "Block",
										"src": "12066:300:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2819,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2815,
																	"name": "participants",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2804,
																	"src": "12085:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12098:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12085:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2817,
																	"name": "newBalances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2807,
																	"src": "12108:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 2818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12120:6:12",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "12108:18:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12085:41:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4172726179206c656e67746873206d757374206d61746368",
															"id": 2820,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12128:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e",
																"typeString": "literal_string \"Array lengths must match\""
															},
															"value": "Array lengths must match"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad675bd5284d0e4b6ac8e6b09a30c7f01661e52badac4d4e8acf154e437ad93e",
																"typeString": "literal_string \"Array lengths must match\""
															}
														],
														"id": 2814,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12077:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12077:78:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2822,
												"nodeType": "ExpressionStatement",
												"src": "12077:78:12"
											},
											{
												"body": {
													"id": 2843,
													"nodeType": "Block",
													"src": "12215:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2835,
																			"name": "participants",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2804,
																			"src": "12245:12:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 2837,
																		"indexExpression": {
																			"id": 2836,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12258:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12245:15:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2838,
																			"name": "newBalances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2807,
																			"src": "12262:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 2840,
																		"indexExpression": {
																			"id": 2839,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2824,
																			"src": "12274:1:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12262:14:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2834,
																	"name": "_updateBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2384,
																	"src": "12230:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12230:47:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2842,
															"nodeType": "ExpressionStatement",
															"src": "12230:47:12"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2827,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2824,
														"src": "12185:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2828,
															"name": "participants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2804,
															"src": "12189:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12202:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12189:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12185:23:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2844,
												"initializationExpression": {
													"assignments": [
														2824
													],
													"declarations": [
														{
															"constant": false,
															"id": 2824,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12178:1:12",
															"nodeType": "VariableDeclaration",
															"scope": 2844,
															"src": "12173:6:12",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2823,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "12173:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2826,
													"initialValue": {
														"hexValue": "30",
														"id": 2825,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12182:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12173:10:12"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2832,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12210:3:12",
														"subExpression": {
															"id": 2831,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2824,
															"src": "12210:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2833,
													"nodeType": "ExpressionStatement",
													"src": "12210:3:12"
												},
												"nodeType": "ForStatement",
												"src": "12168:121:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2846,
															"name": "participants",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2804,
															"src": "12332:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 2847,
															"name": "newBalances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2807,
															"src": "12346:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														],
														"id": 2845,
														"name": "BalancesBatchUpdatedbyadmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2074,
														"src": "12304:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address[] memory,uint256[] memory)"
														}
													},
													"id": 2848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12304:54:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2849,
												"nodeType": "EmitStatement",
												"src": "12299:59:12"
											}
										]
									},
									"documentation": {
										"id": 2801,
										"nodeType": "StructuredDocumentation",
										"src": "11741:186:12",
										"text": " @dev Batch update channel by admin.\n @param participants - The addresses of the participants\n @param newBalances - The new balances of the participants"
									},
									"functionSelector": "c6b0da1b",
									"id": 2851,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2810,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2809,
												"name": "onlyAdmin",
												"nameLocations": [
													"12042:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2253,
												"src": "12042:9:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "12042:9:12"
										},
										{
											"id": 2812,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2811,
												"name": "whenNotPaused",
												"nameLocations": [
													"12052:13:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 754,
												"src": "12052:13:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "12052:13:12"
										}
									],
									"name": "batchUpdateChannelbyadmin",
									"nameLocation": "11942:25:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "participants",
												"nameLocation": "11987:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "11968:31:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2802,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "11968:7:12",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2803,
													"nodeType": "ArrayTypeName",
													"src": "11968:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2807,
												"mutability": "mutable",
												"name": "newBalances",
												"nameLocation": "12020:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2851,
												"src": "12001:30:12",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2805,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "12001:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2806,
													"nodeType": "ArrayTypeName",
													"src": "12001:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11967:65:12"
									},
									"returnParameters": {
										"id": 2813,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12066:0:12"
									},
									"scope": 2852,
									"src": "11933:433:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2853,
							"src": "734:11635:12",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								715,
								718,
								897,
								910,
								1188,
								1191,
								1627,
								1632,
								1637
							],
							"usedEvents": [
								41,
								219,
								707,
								712,
								876,
								2028,
								2036,
								2040,
								2046,
								2052,
								2058,
								2066,
								2074,
								2082,
								2086,
								2090
							]
						}
					],
					"src": "33:12336:12"
				},
				"id": 12
			}
		}
	}
}